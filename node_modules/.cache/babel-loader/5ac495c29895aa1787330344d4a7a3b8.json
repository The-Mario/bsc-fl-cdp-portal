{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// import Maker from './libs/dai/src/index';\nimport Maker from './libs/dai/src/index.js';\nimport McdPlugin, { ETH, USDTUSDC, USDTDAI, USDCDAI, USDTUSDN, USDNDAI, USDCUSDN, USD, USDFL, SAI, defaultCdpTypes } from './libs/dai-plugin-mcd/src/index.js';\nimport trezorPlugin from '@makerdao/dai-plugin-trezor-web';\nimport ledgerPlugin from '@makerdao/dai-plugin-ledger-web';\nimport walletLinkPlugin from '@makerdao/dai-plugin-walletlink';\nimport walletConnectPlugin from '@makerdao/dai-plugin-walletconnect';\nimport networkConfig from './references/config';\nimport { networkNameToId } from './utils/network';\nimport { getQueryParamByName } from './utils/dev';\nimport rinkebyAddresses from './references/contracts/rinkeby';\nimport goerliAddresses from './references/contracts/goerli';\nimport ropstenAddresses from './references/contracts/ropsten';\nimport testnetAddresses from './references/contracts/testnet';\n\nvar _maker;\n\nvar otherNetworksOverrides = [{\n  network: 'rinkeby',\n  contracts: rinkebyAddresses\n}, {\n  network: 'goerli',\n  contracts: goerliAddresses\n}, {\n  network: 'ropsten',\n  contracts: ropstenAddresses\n}, {\n  network: 'testnet',\n  contracts: testnetAddresses\n}].reduce(function (acc, _ref) {\n  var network = _ref.network,\n      contracts = _ref.contracts;\n\n  for (var _i = 0, _Object$entries = Object.entries(contracts); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        contractName = _Object$entries$_i[0],\n        contractAddress = _Object$entries$_i[1];\n\n    if (!acc[contractName]) acc[contractName] = {};\n    acc[contractName][network] = contractAddress;\n  }\n\n  return acc;\n}, {});\nexport function getMaker() {\n  if (_maker === undefined) throw new Error('Maker has not been instatiated');\n  return _maker;\n}\nexport function instantiateMaker(_x) {\n  return _instantiateMaker.apply(this, arguments);\n}\n\nfunction _instantiateMaker() {\n  _instantiateMaker = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var rpcUrl, network, testchainId, backendEnv, addressOverrides, mcdPluginConfig, walletLinkPluginConfig, config, maker;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rpcUrl = _ref2.rpcUrl, network = _ref2.network, testchainId = _ref2.testchainId, backendEnv = _ref2.backendEnv;\n            addressOverrides = ['rinkeby', 'ropsten', 'goerli', 'testnet'].some(function (networkName) {\n              return networkName === network;\n            }) ? otherNetworksOverrides : {};\n            mcdPluginConfig = {\n              defaultCdpTypes: defaultCdpTypes,\n              prefetch: false,\n              addressOverrides: addressOverrides\n            };\n            walletLinkPluginConfig = {\n              rpcUrl: networkConfig.rpcUrls[networkNameToId(network)]\n            };\n            config = {\n              log: false,\n              plugins: [trezorPlugin, ledgerPlugin, [walletLinkPlugin, walletLinkPluginConfig], walletConnectPlugin, [McdPlugin, mcdPluginConfig]],\n              smartContract: {\n                addressOverrides: addressOverrides\n              },\n              provider: {\n                url: rpcUrl,\n                type: network === 'testnet' ? 'HTTP' : getQueryParamByName('ws') === '0' ? 'HTTP' : 'WEBSOCKET'\n              },\n              web3: {\n                pollingInterval: network === 'testnet' ? 100 : null\n              },\n              gas: {\n                apiKey: '3e722dd73e76ba3d2eb7507e316727db8a71d1fbc960ed1018e999a53f75'\n              },\n              multicall: true\n            }; // Use the config plugin, if we have a testchainConfigId\n\n            if (!testchainId) {\n              _context.next = 10;\n              break;\n            }\n\n            console.log('testchainId mode is not unsupported:' + testchainId);\n            throw new Error('testchainId mode is not unsupported.');\n\n          case 10:\n            if (rpcUrl) {\n              _context.next = 23;\n              break;\n            }\n\n            if (!(config.provider.type === 'HTTP')) {\n              _context.next = 15;\n              break;\n            }\n\n            rpcUrl = networkConfig.rpcUrls[networkNameToId(network)];\n            _context.next = 20;\n            break;\n\n          case 15:\n            if (!(config.provider.type === 'WEBSOCKET')) {\n              _context.next = 19;\n              break;\n            }\n\n            rpcUrl = networkConfig.wsRpcUrls[networkNameToId(network)];\n            _context.next = 20;\n            break;\n\n          case 19:\n            throw new Error(\"Unsupported provider type: \".concat(config.provider.type));\n\n          case 20:\n            if (rpcUrl) {\n              _context.next = 22;\n              break;\n            }\n\n            throw new Error(\"Unsupported network: \".concat(network));\n\n          case 22:\n            config.provider.url = rpcUrl;\n\n          case 23:\n            _context.next = 25;\n            return Maker.create('http', config);\n\n          case 25:\n            maker = _context.sent;\n            // for debugging\n            window.maker = maker;\n            return _context.abrupt(\"return\", maker);\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _instantiateMaker.apply(this, arguments);\n}\n\nexport { USD, USDFL, ETH, USDTUSDC, USDTDAI, USDCDAI, USDTUSDN, USDNDAI, USDCUSDN, SAI };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_maker, \"_maker\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/maker.js\");\n  reactHotLoader.register(otherNetworksOverrides, \"otherNetworksOverrides\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/maker.js\");\n  reactHotLoader.register(getMaker, \"getMaker\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/maker.js\");\n  reactHotLoader.register(instantiateMaker, \"instantiateMaker\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/maker.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/maker.js"],"names":["Maker","McdPlugin","ETH","USDTUSDC","USDTDAI","USDCDAI","USDTUSDN","USDNDAI","USDCUSDN","USD","USDFL","SAI","defaultCdpTypes","trezorPlugin","ledgerPlugin","walletLinkPlugin","walletConnectPlugin","networkConfig","networkNameToId","getQueryParamByName","rinkebyAddresses","goerliAddresses","ropstenAddresses","testnetAddresses","_maker","otherNetworksOverrides","network","contracts","reduce","acc","Object","entries","contractName","contractAddress","getMaker","undefined","Error","instantiateMaker","rpcUrl","testchainId","backendEnv","addressOverrides","some","networkName","mcdPluginConfig","prefetch","walletLinkPluginConfig","rpcUrls","config","log","plugins","smartContract","provider","url","type","web3","pollingInterval","gas","apiKey","multicall","console","wsRpcUrls","create","maker","window"],"mappings":"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","sourcesContent":["// import Maker from './libs/dai/src/index';\nimport Maker from './libs/dai/src/index.js';\nimport McdPlugin, {\n  ETH,\n  USDTUSDC,\n  USDTDAI,\n  USDCDAI,\n  USDTUSDN,\n  USDNDAI,\n  USDCUSDN,\n  USD,\n  USDFL,\n  SAI,\n  defaultCdpTypes\n} from './libs/dai-plugin-mcd/src/index.js';\n\nimport trezorPlugin from '@makerdao/dai-plugin-trezor-web';\nimport ledgerPlugin from '@makerdao/dai-plugin-ledger-web';\nimport walletLinkPlugin from '@makerdao/dai-plugin-walletlink';\nimport walletConnectPlugin from '@makerdao/dai-plugin-walletconnect';\nimport networkConfig from './references/config';\nimport { networkNameToId } from './utils/network';\nimport { getQueryParamByName } from './utils/dev';\n\nimport rinkebyAddresses from './references/contracts/rinkeby';\nimport goerliAddresses from './references/contracts/goerli';\nimport ropstenAddresses from './references/contracts/ropsten';\nimport testnetAddresses from './references/contracts/testnet';\n\nlet _maker;\n\nconst otherNetworksOverrides = [\n  {\n    network: 'rinkeby',\n    contracts: rinkebyAddresses\n  },\n  { network: 'goerli', contracts: goerliAddresses },\n  { network: 'ropsten', contracts: ropstenAddresses },\n  { network: 'testnet', contracts: testnetAddresses }\n].reduce((acc, { network, contracts }) => {\n  for (const [contractName, contractAddress] of Object.entries(contracts)) {\n    if (!acc[contractName]) acc[contractName] = {};\n    acc[contractName][network] = contractAddress;\n  }\n  return acc;\n}, {});\n\nexport function getMaker() {\n  if (_maker === undefined) throw new Error('Maker has not been instatiated');\n  return _maker;\n}\n\nexport async function instantiateMaker({\n  rpcUrl,\n  network,\n  testchainId,\n  backendEnv\n}) {\n  const addressOverrides = ['rinkeby', 'ropsten', 'goerli', 'testnet'].some(\n    networkName => networkName === network\n  )\n    ? otherNetworksOverrides\n    : {};\n\n  const mcdPluginConfig = {\n    defaultCdpTypes,\n    prefetch: false,\n    addressOverrides\n  };\n  const walletLinkPluginConfig = {\n    rpcUrl: networkConfig.rpcUrls[networkNameToId(network)]\n  };\n\n  const config = {\n    log: false,\n    plugins: [\n      trezorPlugin,\n      ledgerPlugin,\n      [walletLinkPlugin, walletLinkPluginConfig],\n      walletConnectPlugin,\n      [McdPlugin, mcdPluginConfig]\n    ],\n    smartContract: {\n      addressOverrides\n    },\n    provider: {\n      url: rpcUrl,\n      type:\n        network === 'testnet'\n          ? 'HTTP'\n          : getQueryParamByName('ws') === '0'\n          ? 'HTTP'\n          : 'WEBSOCKET'\n    },\n    web3: {\n      pollingInterval: network === 'testnet' ? 100 : null\n    },\n    gas: {\n      apiKey: '3e722dd73e76ba3d2eb7507e316727db8a71d1fbc960ed1018e999a53f75'\n    },\n    multicall: true\n  };\n\n  // Use the config plugin, if we have a testchainConfigId\n  if (testchainId) {\n    console.log('testchainId mode is not unsupported:' + testchainId);\n    throw new Error('testchainId mode is not unsupported.');\n  } else if (!rpcUrl) {\n    if (config.provider.type === 'HTTP')\n      rpcUrl = networkConfig.rpcUrls[networkNameToId(network)];\n    else if (config.provider.type === 'WEBSOCKET')\n      rpcUrl = networkConfig.wsRpcUrls[networkNameToId(network)];\n    else throw new Error(`Unsupported provider type: ${config.provider.type}`);\n    if (!rpcUrl) throw new Error(`Unsupported network: ${network}`);\n    config.provider.url = rpcUrl;\n  }\n\n  const maker = await Maker.create('http', config);\n\n  // for debugging\n  window.maker = maker;\n\n  return maker;\n}\n\nexport {\n  USD,\n  USDFL,\n  ETH,\n  USDTUSDC,\n  USDTDAI,\n  USDCDAI,\n  USDTUSDN,\n  USDNDAI,\n  USDCUSDN,\n  SAI\n};\n"]},"metadata":{},"sourceType":"module"}