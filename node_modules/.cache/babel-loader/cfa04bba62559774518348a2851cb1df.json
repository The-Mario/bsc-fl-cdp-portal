{"ast":null,"code":"'use strict'; // This is SUPER useful, but adds 140kb (even zipped, adds 40kb)\n//var unorm = require('unorm');\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar address = require('./address');\n\nvar AbiCoder = require('./abi-coder');\n\nvar base64 = require('./base64');\n\nvar bigNumber = require('./bignumber');\n\nvar contractAddress = require('./contract-address');\n\nvar convert = require('./convert');\n\nvar id = require('./id');\n\nvar keccak256 = require('./keccak256');\n\nvar namehash = require('./namehash');\n\nvar sha256 = require('./sha2').sha256;\n\nvar solidity = require('./solidity');\n\nvar randomBytes = require('./random-bytes');\n\nvar properties = require('./properties');\n\nvar RLP = require('./rlp');\n\nvar utf8 = require('./utf8');\n\nvar units = require('./units');\n\nmodule.exports = {\n  AbiCoder: AbiCoder,\n  RLP: RLP,\n  defineProperty: properties.defineProperty,\n  // NFKD (decomposed)\n  //etherSymbol: '\\uD835\\uDF63',\n  // NFKC (composed)\n  etherSymbol: \"\\u039E\",\n  arrayify: convert.arrayify,\n  concat: convert.concat,\n  padZeros: convert.padZeros,\n  stripZeros: convert.stripZeros,\n  base64: base64,\n  bigNumberify: bigNumber.bigNumberify,\n  BigNumber: bigNumber.BigNumber,\n  hexlify: convert.hexlify,\n  toUtf8Bytes: utf8.toUtf8Bytes,\n  toUtf8String: utf8.toUtf8String,\n  namehash: namehash,\n  id: id,\n  getAddress: address.getAddress,\n  getContractAddress: contractAddress.getContractAddress,\n  formatEther: units.formatEther,\n  parseEther: units.parseEther,\n  formatUnits: units.formatUnits,\n  parseUnits: units.parseUnits,\n  keccak256: keccak256,\n  sha256: sha256,\n  randomBytes: randomBytes,\n  solidityPack: solidity.pack,\n  solidityKeccak256: solidity.keccak256,\n  soliditySha256: solidity.sha256,\n  splitSignature: convert.splitSignature\n};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(sha256, \"sha256\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/ethers/utils/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}