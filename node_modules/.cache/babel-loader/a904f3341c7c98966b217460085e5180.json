{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { toHex, fromRay, fromRad, fromWei } from '../utils';\nimport { USDFL } from '..';\nimport { TOTAL_ENCUMBERED_DEBT, DEBT_SCALING_FACTOR, PRICE_WITH_SAFETY_MARGIN, DEBT_CEILING, DEBT_FLOOR, TOTAL_DAI_SUPPLY, ENCUMBERED_COLLATERAL, ENCUMBERED_DEBT, UNLOCKED_COLLATERAL, GLOBAL_DEBT_CEILING } from './_constants';\nexport var vatIlks = {\n  generate: function generate(ilkName) {\n    return {\n      id: \"MCD_VAT.ilks(\".concat(ilkName, \")\"),\n      contract: 'MCD_VAT',\n      call: ['ilks(bytes32)(uint256,uint256,uint256,uint256,uint256)', toHex(ilkName)]\n    };\n  },\n  returns: [[TOTAL_ENCUMBERED_DEBT, fromWei], [DEBT_SCALING_FACTOR, fromRay], [PRICE_WITH_SAFETY_MARGIN, fromRay], [DEBT_CEILING, function (v) {\n    return USDFL(v, 'rad');\n  }], [DEBT_FLOOR, fromRad]]\n};\nexport var vatDebt = {\n  generate: function generate() {\n    return {\n      id: 'MCD_VAT.debt()',\n      contract: 'MCD_VAT',\n      call: ['debt()(uint256)']\n    };\n  },\n  returns: [[TOTAL_DAI_SUPPLY, function (v) {\n    return USDFL(v, 'rad');\n  }]]\n};\nexport var vatUrns = {\n  generate: function generate(ilkName, urn) {\n    return {\n      id: \"MCD_Vat.urns(\".concat(ilkName, \",\").concat(urn, \")\"),\n      contract: 'MCD_VAT',\n      call: ['urns(bytes32,address)(uint256,uint256)', toHex(ilkName), urn]\n    };\n  },\n  returns: [[ENCUMBERED_COLLATERAL, fromWei], [ENCUMBERED_DEBT, fromWei]]\n};\nexport var vatGem = {\n  generate: function generate(ilkName, urn) {\n    return {\n      id: \"MCD_Vat.gem(\".concat(ilkName, \",\").concat(urn, \")\"),\n      contract: 'MCD_VAT',\n      call: ['gem(bytes32,address)(uint)', toHex(ilkName), urn]\n    };\n  },\n  return: [UNLOCKED_COLLATERAL, fromWei]\n};\nexport var vatLine = {\n  generate: function generate() {\n    return {\n      id: 'MCD_VAT.Line',\n      contract: 'MCD_VAT',\n      call: ['Line()(uint256)']\n    };\n  },\n  returns: [[GLOBAL_DEBT_CEILING, function (v) {\n    return USDFL(v, 'rad');\n  }]]\n};\nvar _default = {\n  vatIlks: vatIlks,\n  vatDebt: vatDebt,\n  vatUrns: vatUrns,\n  vatGem: vatGem,\n  vatLine: vatLine\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(vatIlks, \"vatIlks\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js\");\n  reactHotLoader.register(vatDebt, \"vatDebt\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js\");\n  reactHotLoader.register(vatUrns, \"vatUrns\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js\");\n  reactHotLoader.register(vatGem, \"vatGem\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js\");\n  reactHotLoader.register(vatLine, \"vatLine\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/vat.js"],"names":["toHex","fromRay","fromRad","fromWei","USDFL","TOTAL_ENCUMBERED_DEBT","DEBT_SCALING_FACTOR","PRICE_WITH_SAFETY_MARGIN","DEBT_CEILING","DEBT_FLOOR","TOTAL_DAI_SUPPLY","ENCUMBERED_COLLATERAL","ENCUMBERED_DEBT","UNLOCKED_COLLATERAL","GLOBAL_DEBT_CEILING","vatIlks","generate","ilkName","id","contract","call","returns","v","vatDebt","vatUrns","urn","vatGem","return","vatLine"],"mappings":"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","sourcesContent":["import { toHex, fromRay, fromRad, fromWei } from '../utils';\nimport { USDFL } from '..';\n\nimport {\n  TOTAL_ENCUMBERED_DEBT,\n  DEBT_SCALING_FACTOR,\n  PRICE_WITH_SAFETY_MARGIN,\n  DEBT_CEILING,\n  DEBT_FLOOR,\n  TOTAL_DAI_SUPPLY,\n  ENCUMBERED_COLLATERAL,\n  ENCUMBERED_DEBT,\n  UNLOCKED_COLLATERAL,\n  GLOBAL_DEBT_CEILING\n} from './_constants';\n\nexport const vatIlks = {\n  generate: ilkName => ({\n    id: `MCD_VAT.ilks(${ilkName})`,\n    contract: 'MCD_VAT',\n    call: [\n      'ilks(bytes32)(uint256,uint256,uint256,uint256,uint256)',\n      toHex(ilkName)\n    ]\n  }),\n  returns: [\n    [TOTAL_ENCUMBERED_DEBT, fromWei],\n    [DEBT_SCALING_FACTOR, fromRay],\n    [PRICE_WITH_SAFETY_MARGIN, fromRay],\n    [DEBT_CEILING, v => USDFL(v, 'rad')],\n    [DEBT_FLOOR, fromRad]\n  ]\n};\n\nexport const vatDebt = {\n  generate: () => ({\n    id: 'MCD_VAT.debt()',\n    contract: 'MCD_VAT',\n    call: ['debt()(uint256)']\n  }),\n  returns: [[TOTAL_DAI_SUPPLY, v => USDFL(v, 'rad')]]\n};\n\nexport const vatUrns = {\n  generate: (ilkName, urn) => ({\n    id: `MCD_Vat.urns(${ilkName},${urn})`,\n    contract: 'MCD_VAT',\n    call: ['urns(bytes32,address)(uint256,uint256)', toHex(ilkName), urn]\n  }),\n  returns: [\n    [ENCUMBERED_COLLATERAL, fromWei],\n    [ENCUMBERED_DEBT, fromWei]\n  ]\n};\n\nexport const vatGem = {\n  generate: (ilkName, urn) => ({\n    id: `MCD_Vat.gem(${ilkName},${urn})`,\n    contract: 'MCD_VAT',\n    call: ['gem(bytes32,address)(uint)', toHex(ilkName), urn]\n  }),\n  return: [UNLOCKED_COLLATERAL, fromWei]\n};\n\nexport const vatLine = {\n  generate: () => ({\n    id: 'MCD_VAT.Line',\n    contract: 'MCD_VAT',\n    call: ['Line()(uint256)']\n  }),\n  returns: [[GLOBAL_DEBT_CEILING, v => USDFL(v, 'rad')]]\n};\n\nexport default {\n  vatIlks,\n  vatDebt,\n  vatUrns,\n  vatGem,\n  vatLine\n};\n"]},"metadata":{},"sourceType":"module"}