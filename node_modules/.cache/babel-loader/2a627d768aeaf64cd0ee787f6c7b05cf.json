{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/MobileNav.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { disableBodyScroll, enableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\nimport SidebarGlobal from './Sidebars/Global';\nimport AccountBox from './AccountBox';\nimport BorrowNav from 'components/BorrowNav';\nimport SaveNav from 'components/SaveNav';\nimport RewardNav from 'components/RewardNav';\nimport { Flex, Box } from '@makerdao/ui-components-core';\nimport useMaker from 'hooks/useMaker';\nimport { getMeasurement } from '../styles/theme';\nimport { ReactComponent as MoreOpenIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/menu-more.svg\";\nimport { ReactComponent as MoreCloseIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/menu-more-close.svg\";\nimport { ReactComponent as MoreCloseDarkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/menu-more-close-dark.svg\";\n\nvar SidebarDrawerTrigger = function SidebarDrawerTrigger(_ref) {\n  var sidebarDrawerOpen = _ref.sidebarDrawerOpen,\n      setSidebarDrawerOpen = _ref.setSidebarDrawerOpen,\n      account = _ref.account;\n  var closeIcon = !account ? /*#__PURE__*/React.createElement(MoreCloseDarkIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(MoreCloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 56\n    }\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    ml: \"auto\",\n    p: \"s\",\n    onClick: function onClick() {\n      return setSidebarDrawerOpen(!sidebarDrawerOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, sidebarDrawerOpen ? closeIcon : /*#__PURE__*/React.createElement(MoreOpenIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 40\n    }\n  }));\n};\n\nvar DrawerBg = styled.div.withConfig({\n  displayName: \"MobileNav__DrawerBg\",\n  componentId: \"ywiy01-0\"\n})([\"position:fixed;bottom:0;left:0;right:0;top:\", \"px;width:100vw;z-index:9;height:100%;\", \"\"], getMeasurement('mobileNavHeight'), function (_ref2) {\n  var sidebarDrawerOpen = _ref2.sidebarDrawerOpen;\n  return sidebarDrawerOpen ? css([\"display:flex;\"]) : css([\"display:none;\"]);\n});\n\nvar _StyledBox = styled(Box).withConfig({\n  displayName: \"MobileNav___StyledBox\",\n  componentId: \"ywiy01-1\"\n})({\n  overflowY: 'scroll',\n  paddingRight: 0\n});\n\nvar MobileNav = function MobileNav(_ref3) {\n  var viewedAddress = _ref3.viewedAddress;\n\n  var _useMaker = useMaker(),\n      account = _useMaker.account;\n\n  var ref = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      sidebarDrawerOpen = _useState2[0],\n      setSidebarDrawerOpen = _useState2[1];\n\n  useEffect(function () {\n    if (sidebarDrawerOpen) {\n      ref && ref.current && disableBodyScroll(ref.current);\n    } else {\n      ref && ref.current && enableBodyScroll(ref.current);\n    }\n\n    return clearAllBodyScrollLocks;\n  }, [sidebarDrawerOpen]);\n  useEffect(function () {\n    if (account) {\n      setSidebarDrawerOpen(false);\n    }\n  }, [account]);\n  return /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"center\",\n    bg: account ? '#131824' : '#131824',\n    height: getMeasurement('mobileNavHeight'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    flex: \"1\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RewardNav, {\n    width: \"\".concat(getMeasurement('mobileNavbarWidth'), \"px\"),\n    account: account,\n    borderRadius: \"4px\",\n    ml: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SaveNav, {\n    width: \"\".concat(getMeasurement('mobileNavbarWidth'), \"px\"),\n    account: account,\n    borderRadius: \"4px\",\n    ml: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BorrowNav, {\n    width: \"\".concat(getMeasurement('mobileNavbarWidth'), \"px\"),\n    viewedAddress: viewedAddress,\n    account: account,\n    mobile: true,\n    borderRadius: \"4px\",\n    ml: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SidebarDrawerTrigger, Object.assign({\n    sidebarDrawerOpen: sidebarDrawerOpen,\n    setSidebarDrawerOpen: setSidebarDrawerOpen,\n    account: account\n  }, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(DrawerBg, {\n    sidebarDrawerOpen: sidebarDrawerOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledBox, {\n    ref: ref,\n    ml: \"auto\",\n    height: \"100vh\",\n    px: \"s\",\n    width: \"100vw\",\n    bg: account ? '#0B0E15' : '#0B0E15',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    my: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccountBox, {\n    currentAccount: account,\n    closeSidebarDrawer: function closeSidebarDrawer() {\n      return setSidebarDrawerOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(SidebarGlobal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })))));\n};\n\n__signature__(MobileNav, \"useMaker{{ account }}\\nuseRef{ref}\\nuseState{[sidebarDrawerOpen, setSidebarDrawerOpen](false)}\\nuseEffect{}\\nuseEffect{}\", function () {\n  return [useMaker];\n});\n\nvar _default = MobileNav;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SidebarDrawerTrigger, \"SidebarDrawerTrigger\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/MobileNav.js\");\n  reactHotLoader.register(DrawerBg, \"DrawerBg\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/MobileNav.js\");\n  reactHotLoader.register(MobileNav, \"MobileNav\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/MobileNav.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/MobileNav.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/MobileNav.js"],"names":["React","useState","useRef","useEffect","styled","css","disableBodyScroll","enableBodyScroll","clearAllBodyScrollLocks","SidebarGlobal","AccountBox","BorrowNav","SaveNav","RewardNav","Flex","Box","useMaker","getMeasurement","SidebarDrawerTrigger","sidebarDrawerOpen","setSidebarDrawerOpen","account","closeIcon","DrawerBg","div","overflowY","paddingRight","MobileNav","viewedAddress","ref","current"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport {\n  disableBodyScroll,\n  enableBodyScroll,\n  clearAllBodyScrollLocks\n} from 'body-scroll-lock';\n\nimport SidebarGlobal from './Sidebars/Global';\nimport AccountBox from './AccountBox';\nimport BorrowNav from 'components/BorrowNav';\nimport SaveNav from 'components/SaveNav';\nimport RewardNav from 'components/RewardNav';\n\nimport { Flex, Box } from '@makerdao/ui-components-core';\nimport useMaker from 'hooks/useMaker';\nimport { getMeasurement } from '../styles/theme';\n\nimport { ReactComponent as MoreOpenIcon } from 'images/menu-more.svg';\nimport { ReactComponent as MoreCloseIcon } from 'images/menu-more-close.svg';\nimport { ReactComponent as MoreCloseDarkIcon } from 'images/menu-more-close-dark.svg';\n\nconst SidebarDrawerTrigger = ({\n  sidebarDrawerOpen,\n  setSidebarDrawerOpen,\n  account\n}) => {\n  const closeIcon = !account ? <MoreCloseDarkIcon /> : <MoreCloseIcon />;\n  return (\n    <Box\n      ml=\"auto\"\n      p=\"s\"\n      onClick={() => setSidebarDrawerOpen(!sidebarDrawerOpen)}\n    >\n      {sidebarDrawerOpen ? closeIcon : <MoreOpenIcon />}\n    </Box>\n  );\n};\n\nconst DrawerBg = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: ${getMeasurement('mobileNavHeight')}px;\n  width: 100vw;\n  z-index: 9;\n  height: 100%;\n  ${({ sidebarDrawerOpen }) =>\n    sidebarDrawerOpen\n      ? css`\n          display: flex;\n        `\n      : css`\n          display: none;\n        `}\n`;\n\nconst MobileNav = ({ viewedAddress }) => {\n  const { account } = useMaker();\n  const ref = useRef();\n  const [sidebarDrawerOpen, setSidebarDrawerOpen] = useState(false);\n\n  useEffect(() => {\n    if (sidebarDrawerOpen) {\n      ref && ref.current && disableBodyScroll(ref.current);\n    } else {\n      ref && ref.current && enableBodyScroll(ref.current);\n    }\n    return clearAllBodyScrollLocks;\n  }, [sidebarDrawerOpen]);\n\n  useEffect(() => {\n    if (account) {\n      setSidebarDrawerOpen(false);\n    }\n  }, [account]);\n\n  return (\n    <Flex\n      justifyContent=\"center\"\n      bg={account ? '#131824' : '#131824'}\n      height={getMeasurement('mobileNavHeight')}\n    >\n      <Flex flex=\"1\" alignItems=\"center\" justifyContent=\"flex-start\">\n        <RewardNav \n        width={`${getMeasurement('mobileNavbarWidth')}px`}\n        account={account}\n        borderRadius=\"4px\"\n        ml=\"xs\"\n         />\n        <SaveNav\n          width={`${getMeasurement('mobileNavbarWidth')}px`}\n          account={account}\n          borderRadius=\"4px\"\n          ml=\"xs\"\n        />\n        <BorrowNav\n          width={`${getMeasurement('mobileNavbarWidth')}px`}\n          viewedAddress={viewedAddress}\n          account={account}\n          mobile={true}\n          borderRadius=\"4px\"\n          ml=\"xs\"\n        />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"center\">\n        <SidebarDrawerTrigger\n          {...{ sidebarDrawerOpen, setSidebarDrawerOpen, account }}\n        />\n      </Flex>\n\n      <DrawerBg sidebarDrawerOpen={sidebarDrawerOpen}>\n        <Box\n          ref={ref}\n          ml=\"auto\"\n          height=\"100vh\"\n          px=\"s\"\n          width=\"100vw\"\n          css={{ overflowY: 'scroll', paddingRight: 0 }}\n          bg={account ? '#0B0E15' : '#0B0E15'}\n        >\n          <Box mr=\"s\">\n            <Box my=\"s\">\n              <AccountBox\n                currentAccount={account}\n                closeSidebarDrawer={() => setSidebarDrawerOpen(false)}\n              />\n            </Box>\n            <SidebarGlobal />\n          </Box>\n        </Box>\n      </DrawerBg>\n    </Flex>\n  );\n};\n\nexport default MobileNav;\n"]},"metadata":{},"sourceType":"module"}