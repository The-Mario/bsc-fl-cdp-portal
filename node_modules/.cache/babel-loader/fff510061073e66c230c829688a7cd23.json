{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar mqBreakpoints = [['m', 950]];\n\nvar mqTemplate = function mqTemplate(word, value) {\n  return \"@media only screen and (\".concat(word, \"-width: \").concat(value, \"px)\");\n};\n\nfunction mqGenerate(val) {\n  return {\n    min: mqTemplate('min', val),\n    max: mqTemplate('max', val)\n  };\n}\n\nvar mediaQueries = mqBreakpoints.reduce(function (acc, current) {\n  var _current = _slicedToArray(current, 2),\n      key = _current[0],\n      value = _current[1];\n\n  return _objectSpread({}, acc, _defineProperty({}, key, mqGenerate(value)));\n}, {});\nexport { mediaQueries };\nexport var decimalRules = {\n  long: 6,\n  medium: 4,\n  short: 2\n};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(mqBreakpoints, \"mqBreakpoints\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/styles/constants.js\");\n  reactHotLoader.register(mqTemplate, \"mqTemplate\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/styles/constants.js\");\n  reactHotLoader.register(mqGenerate, \"mqGenerate\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/styles/constants.js\");\n  reactHotLoader.register(mediaQueries, \"mediaQueries\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/styles/constants.js\");\n  reactHotLoader.register(decimalRules, \"decimalRules\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/styles/constants.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/styles/constants.js"],"names":["mqBreakpoints","mqTemplate","word","value","mqGenerate","val","min","max","mediaQueries","reduce","acc","current","key","decimalRules","long","medium","short"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,aAAa,GAAG,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,CAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP;AAAA,2CACUD,IADV,qBACyBC,KADzB;AAAA,CAAnB;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,SAAO;AACLC,IAAAA,GAAG,EAAEL,UAAU,CAAC,KAAD,EAAQI,GAAR,CADV;AAELE,IAAAA,GAAG,EAAEN,UAAU,CAAC,KAAD,EAAQI,GAAR;AAFV,GAAP;AAID;;AAED,IAAMG,YAAY,GAAGR,aAAa,CAACS,MAAd,CAAqB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAAA,gCACrCA,OADqC;AAAA,MACnDC,GADmD;AAAA,MAC9CT,KAD8C;;AAE1D,2BAAYO,GAAZ,sBAAkBE,GAAlB,EAAwBR,UAAU,CAACD,KAAD,CAAlC;AACD,CAHoB,EAGlB,EAHkB,CAArB;AAKA,SAASK,YAAT;AAEA,OAAO,IAAMK,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,CADoB;AAE1BC,EAAAA,MAAM,EAAE,CAFkB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAArB;;;;;;;;;;0BAlBDhB,a;0BAEAC,U;0BAEGG,U;0BAOHI,Y;0BAOOK,Y","sourcesContent":["const mqBreakpoints = [['m', 950]];\n\nconst mqTemplate = (word, value) =>\n  `@media only screen and (${word}-width: ${value}px)`;\nfunction mqGenerate(val) {\n  return {\n    min: mqTemplate('min', val),\n    max: mqTemplate('max', val)\n  };\n}\n\nconst mediaQueries = mqBreakpoints.reduce((acc, current) => {\n  const [key, value] = current;\n  return { ...acc, [key]: mqGenerate(value) };\n}, {});\n\nexport { mediaQueries };\n\nexport const decimalRules = {\n  long: 6,\n  medium: 4,\n  short: 2\n};\n"]},"metadata":{},"sourceType":"module"}