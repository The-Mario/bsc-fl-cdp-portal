{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport BigNumber from 'bignumber.js';\nimport { createCurrencyRatio } from '@makerdao/currency';\nimport { RAY, WAD } from './constants';\nimport { USDFL, USD } from './index'; // NOTE: When a function below has an argument with the same name as a function\n// defined earlier in the file, that means it expects that argument's value to\n// be the return value of a call to that earlier function.\n//\n// e.g. the fourth argument of `price`\n// ilk math\n\nexport function debtCeiling(line) {\n  return USDFL.rad(line);\n}\nexport function liquidationPenalty(chop) {\n  return new BigNumber(chop.toString()).dividedBy(WAD).minus(1).toNumber();\n}\nexport function liquidationRatio(mat) {\n  var ratio = createCurrencyRatio(USD, USDFL);\n  return ratio(new BigNumber(mat.toString()).dividedBy(RAY).toString());\n}\nexport function price(currency, par, spot, liquidationRatio) {\n  par = new BigNumber(par.toString()).dividedBy(RAY);\n  spot = new BigNumber(spot.toString()).dividedBy(RAY);\n  var ratio = createCurrencyRatio(USD, currency);\n  var price = spot.times(par).times(liquidationRatio.toNumber());\n  return ratio(price);\n}\nvar secondsPerYear = 60 * 60 * 24 * 365;\nexport function annualStabilityFee(duty) {\n  duty = new BigNumber(duty.toString()).dividedBy(RAY);\n  BigNumber.config({\n    POW_PRECISION: 100\n  });\n  return duty.pow(secondsPerYear).minus(1).toNumber();\n} // cdp math\n\nexport function collateralAmount(currency, ink) {\n  return currency.wei(ink);\n}\nexport function collateralValue(collateralAmount, price) {\n  return collateralAmount.times(price);\n}\nexport function collateralAmountByValue(collateralValue, price) {\n  return collateralValue.div(price);\n}\nexport function debtValue(art, rate) {\n  art = USDFL.wei(art);\n  return art.times(rate).shiftedBy(-27);\n}\nexport function collateralizationRatio(collateralValue, debtValue) {\n  if (debtValue.eq(0)) {\n    var ratio = createCurrencyRatio(USD, USDFL);\n    return ratio(Infinity);\n  }\n\n  return collateralValue.div(debtValue);\n}\nexport function liquidationPrice(collateralAmount, debtValue, liquidationRatio) {\n  if (collateralAmount.eq(0)) {\n    var ratio = createCurrencyRatio(USD, collateralAmount.type);\n    return ratio(Infinity);\n  }\n\n  return debtValue.times(liquidationRatio).div(collateralAmount);\n}\nexport function minSafeCollateralAmount(debtValue, liquidationRatio, price) {\n  return debtValue.times(liquidationRatio).div(price);\n}\nexport function daiAvailable(collateralValue, debtValue, liquidationRatio) {\n  var maxSafeDebtValue = collateralValue.div(liquidationRatio);\n  return debtValue.lt(maxSafeDebtValue) ? USDFL(maxSafeDebtValue.minus(debtValue)) : USDFL(0);\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(debtCeiling, \"debtCeiling\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(liquidationPenalty, \"liquidationPenalty\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(liquidationRatio, \"liquidationRatio\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(price, \"price\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(secondsPerYear, \"secondsPerYear\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(annualStabilityFee, \"annualStabilityFee\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(collateralAmount, \"collateralAmount\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(collateralValue, \"collateralValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(collateralAmountByValue, \"collateralAmountByValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(debtValue, \"debtValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(collateralizationRatio, \"collateralizationRatio\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(liquidationPrice, \"liquidationPrice\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(minSafeCollateralAmount, \"minSafeCollateralAmount\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n  reactHotLoader.register(daiAvailable, \"daiAvailable\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/math.js"],"names":["BigNumber","createCurrencyRatio","RAY","WAD","USDFL","USD","debtCeiling","line","rad","liquidationPenalty","chop","toString","dividedBy","minus","toNumber","liquidationRatio","mat","ratio","price","currency","par","spot","times","secondsPerYear","annualStabilityFee","duty","config","POW_PRECISION","pow","collateralAmount","ink","wei","collateralValue","collateralAmountByValue","div","debtValue","art","rate","shiftedBy","collateralizationRatio","eq","Infinity","liquidationPrice","type","minSafeCollateralAmount","daiAvailable","maxSafeDebtValue","lt"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js';\nimport { createCurrencyRatio } from '@makerdao/currency';\nimport { RAY, WAD } from './constants';\nimport { USDFL, USD } from './index';\n\n// NOTE: When a function below has an argument with the same name as a function\n// defined earlier in the file, that means it expects that argument's value to\n// be the return value of a call to that earlier function.\n//\n// e.g. the fourth argument of `price`\n\n// ilk math\n\nexport function debtCeiling(line) {\n  return USDFL.rad(line);\n}\n\nexport function liquidationPenalty(chop) {\n  return new BigNumber(chop.toString())\n    .dividedBy(WAD)\n    .minus(1)\n    .toNumber();\n}\n\nexport function liquidationRatio(mat) {\n  const ratio = createCurrencyRatio(USD, USDFL);\n  return ratio(new BigNumber(mat.toString()).dividedBy(RAY).toString());\n}\n\nexport function price(currency, par, spot, liquidationRatio) {\n  par = new BigNumber(par.toString()).dividedBy(RAY);\n  spot = new BigNumber(spot.toString()).dividedBy(RAY);\n  const ratio = createCurrencyRatio(USD, currency);\n  const price = spot.times(par).times(liquidationRatio.toNumber());\n  return ratio(price);\n}\n\nconst secondsPerYear = 60 * 60 * 24 * 365;\n\nexport function annualStabilityFee(duty) {\n  duty = new BigNumber(duty.toString()).dividedBy(RAY);\n  BigNumber.config({ POW_PRECISION: 100 });\n  return duty\n    .pow(secondsPerYear)\n    .minus(1)\n    .toNumber();\n}\n\n// cdp math\n\nexport function collateralAmount(currency, ink) {\n  return currency.wei(ink);\n}\n\nexport function collateralValue(collateralAmount, price) {\n  return collateralAmount.times(price);\n}\n\nexport function collateralAmountByValue(collateralValue, price) {\n  return collateralValue.div(price);\n}\n\n\nexport function debtValue(art, rate) {\n  art = USDFL.wei(art);\n  return art.times(rate).shiftedBy(-27);\n}\n\nexport function collateralizationRatio(collateralValue, debtValue) {\n  if (debtValue.eq(0)) {\n    const ratio = createCurrencyRatio(USD, USDFL);\n    return ratio(Infinity);\n  }\n  return collateralValue.div(debtValue);\n}\n\nexport function liquidationPrice(\n  collateralAmount,\n  debtValue,\n  liquidationRatio\n) {\n  if (collateralAmount.eq(0)) {\n    const ratio = createCurrencyRatio(USD, collateralAmount.type);\n    return ratio(Infinity);\n  }\n  return debtValue.times(liquidationRatio).div(collateralAmount);\n}\n\nexport function minSafeCollateralAmount(debtValue, liquidationRatio, price) {\n  return debtValue.times(liquidationRatio).div(price);\n}\n\nexport function daiAvailable(collateralValue, debtValue, liquidationRatio) {\n  const maxSafeDebtValue = collateralValue.div(liquidationRatio);\n  return debtValue.lt(maxSafeDebtValue)\n    ? USDFL(maxSafeDebtValue.minus(debtValue))\n    : USDFL(0);\n}\n"]},"metadata":{},"sourceType":"module"}