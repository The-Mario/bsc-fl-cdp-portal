{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useMemo, useEffect, useContext, useReducer as useReducer$1, useState as useState$1 } from 'react';\nimport { createStore } from 'redux';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StateInspectorContext = /*#__PURE__*/React.createContext(undefined);\n\nvar omit = function omit(obj, keyToRemove) {\n  return Object.keys(obj).filter(function (key) {\n    return key !== keyToRemove;\n  }).reduce(function (acc, key) {\n    acc[key] = obj[key];\n    return acc;\n  }, {});\n};\n\nvar StateInspector = function StateInspector(_ref) {\n  var name = _ref.name,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      children = _ref.children;\n  var store = useMemo(function () {\n    if (typeof window === \"undefined\" || !window.__REDUX_DEVTOOLS_EXTENSION__) {\n      return undefined;\n    }\n\n    var registeredReducers = {};\n\n    var storeReducer = function storeReducer(state, action) {\n      var actionReducerId = action.type.split(\"/\")[0];\n      var isInitAction = /\\/_init$/.test(action.type);\n      var isTeardownAction = /\\/_teardown$/.test(action.type);\n      var currentState = isTeardownAction ? omit(state, actionReducerId) : _extends({}, state);\n      return Object.keys(registeredReducers).reduce(function (acc, reducerId) {\n        var reducer = registeredReducers[reducerId];\n        var reducerState = state[reducerId];\n        var reducerAction = action.payload;\n        var isForCurrentReducer = actionReducerId === reducerId;\n\n        if (isForCurrentReducer) {\n          acc[reducerId] = isInitAction ? action.payload : reducer(reducerState, reducerAction);\n        } else {\n          acc[reducerId] = reducerState;\n        }\n\n        return acc;\n      }, currentState);\n    };\n\n    var store = createStore(storeReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__({\n      name: name || \"React state\",\n      actionsBlacklist: [\"/_init\", \"/_teardown\"]\n    }));\n\n    store.registerHookedReducer = function (reducer, initialState, reducerId) {\n      registeredReducers[reducerId] = reducer;\n      store.dispatch({\n        type: reducerId + \"/_init\",\n        payload: initialState\n      });\n      return function () {\n        delete registeredReducers[reducerId];\n        store.dispatch({\n          type: reducerId + \"/_teardown\"\n        });\n      };\n    };\n\n    return store;\n  }, []);\n  useEffect(function () {\n    store && store.dispatch({\n      type: \"REINSPECT/@@INIT\",\n      payload: {}\n    });\n  }, []);\n  return React.createElement(StateInspectorContext.Provider, {\n    value: store\n  }, children);\n};\n/* eslint-disable react-hooks/rules-of-hooks */\n\n\n__signature__(StateInspector, \"useMemo{store}\\nuseEffect{}\");\n\nfunction useHookedReducer(reducer, initialState, store, reducerId) {\n  var initialReducerState = useMemo(function () {\n    var initialStateInStore = store.getState()[reducerId];\n    return initialStateInStore === undefined ? initialState : initialStateInStore;\n  }, []);\n\n  var _useState = useState$1(initialReducerState),\n      localState = _useState[0],\n      setState = _useState[1];\n\n  var dispatch = useMemo(function () {\n    var dispatch = function dispatch(action) {\n      if (action && typeof action === \"object\" && typeof action.type === \"string\") {\n        store.dispatch({\n          type: reducerId + \"/\" + action.type,\n          payload: action\n        });\n      } else {\n        store.dispatch({\n          type: reducerId,\n          payload: action\n        });\n      }\n    };\n\n    return dispatch;\n  }, []);\n  useEffect(function () {\n    var teardown = store.registerHookedReducer(reducer, initialReducerState, reducerId);\n    var lastReducerState = localState;\n    var unsubscribe = store.subscribe(function () {\n      var storeState = store.getState();\n      var reducerState = storeState[reducerId];\n\n      if (lastReducerState !== reducerState) {\n        setState(reducerState);\n      }\n\n      lastReducerState = reducerState;\n    });\n    return function () {\n      unsubscribe();\n      teardown();\n    };\n  }, []);\n  return [localState, dispatch];\n}\n\n__signature__(useHookedReducer, \"useMemo{initialReducerState}\\nuseState$1{_useState}\\nuseMemo{dispatch}\\nuseEffect{}\", function () {\n  return [useState$1];\n});\n\nfunction useReducer(reducer, initialState) {\n  var id;\n  var initializer = arguments.length <= 2 ? undefined : arguments[2];\n\n  if ((arguments.length <= 2 ? 0 : arguments.length - 2) === 2) {\n    initializer = arguments.length <= 2 ? undefined : arguments[2];\n    id = arguments.length <= 3 ? undefined : arguments[3];\n  } else if (typeof (arguments.length <= 2 ? undefined : arguments[2]) === \"string\" || typeof (arguments.length <= 2 ? undefined : arguments[2]) === \"number\") {\n    id = arguments.length <= 2 ? undefined : arguments[2];\n  } else {\n    initializer = arguments.length <= 2 ? undefined : arguments[2];\n    id = arguments.length <= 3 ? undefined : arguments[3];\n  }\n\n  var store = useContext(StateInspectorContext);\n  var initializedState = initializer ? initializer(initialState) : initialState;\n  return store && id ? useHookedReducer(reducer, initializedState, store, id) : useReducer$1(reducer, initialState, initializer);\n}\n/* eslint-disable react-hooks/rules-of-hooks */\n\n\n__signature__(useReducer, \"useContext{store}\\nuseHookedReducer{}\\nuseReducer$1{}\", function () {\n  return [useHookedReducer, useReducer$1];\n});\n\nfunction stateReducer(state, action) {\n  return typeof action === \"function\" ? action(state) : action;\n}\n\nvar useState = function useState(initialState, id) {\n  var inspectorStore = useContext(StateInspectorContext); // Keeping the first values\n\n  var _useMemo = useMemo(function () {\n    return [inspectorStore, id];\n  }, []),\n      store = _useMemo[0],\n      reducerId = _useMemo[1];\n\n  if (!store || !reducerId) {\n    return useState$1(initialState);\n  }\n\n  var finalInitialState = useMemo(function () {\n    return typeof initialState === \"function\" ? initialState() : initialState;\n  }, []);\n  return useHookedReducer(stateReducer, finalInitialState, store, reducerId);\n};\n\n__signature__(useState, \"useContext{inspectorStore}\\nuseMemo{_useMemo}\\nuseState$1{}\\nuseMemo{finalInitialState}\\nuseHookedReducer{}\", function () {\n  return [useState$1, useHookedReducer];\n});\n\nexport { StateInspector, useReducer, useState };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_extends, \"_extends\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(StateInspectorContext, \"StateInspectorContext\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(omit, \"omit\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(StateInspector, \"StateInspector\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(useHookedReducer, \"useHookedReducer\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(useReducer, \"useReducer\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(stateReducer, \"stateReducer\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n  reactHotLoader.register(useState, \"useState\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/reinspect/dist/reinspect.esm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}