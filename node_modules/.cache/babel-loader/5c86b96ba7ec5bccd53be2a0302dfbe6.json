{"ast":null,"code":"'use strict';\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar POPUP = _interopRequireWildcard(require(\"../constants/popup\"));\n\nvar ERROR = _interopRequireWildcard(require(\"../constants/errors\"));\n\nvar _showPopupRequest = require(\"./showPopupRequest\");\n\nvar _networkUtils = require(\"../utils/networkUtils\");\n\nvar _deferred = require(\"../utils/deferred\"); // const POPUP_REQUEST_TIMEOUT: number = 602;\n\n\nvar POPUP_REQUEST_TIMEOUT = 850;\nvar POPUP_CLOSE_INTERVAL = 500;\nvar POPUP_OPEN_TIMEOUT = 2000;\n\nvar PopupManager = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inheritsLoose2[\"default\"])(PopupManager, _EventEmitter); // Window\n\n  function PopupManager(settings) {\n    var _this;\n\n    _this = _EventEmitter.call(this) || this;\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"requestTimeout\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"closeInterval\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"extension\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"extensionTabId\", 0);\n    _this.settings = settings;\n    _this.src = settings.popupSrc;\n    _this.origin = (0, _networkUtils.getOrigin)(settings.popupSrc);\n    _this.handleLazyLoading = _this.handleLazyLoading.bind((0, _assertThisInitialized2[\"default\"])(_this)); // $FlowIssue chrome not declared outside\n\n    _this.extension = typeof chrome !== 'undefined' && chrome.runtime && typeof chrome.runtime.onConnect !== 'undefined';\n\n    if (_this.extension) {\n      _this.handleExtensionConnect = _this.handleExtensionConnect.bind((0, _assertThisInitialized2[\"default\"])(_this));\n      _this.handleExtensionMessage = _this.handleExtensionMessage.bind((0, _assertThisInitialized2[\"default\"])(_this)); // $FlowIssue chrome not declared outside\n\n      chrome.runtime.onConnect.addListener(_this.handleExtensionConnect);\n    }\n\n    return _this;\n  }\n\n  var _proto = PopupManager.prototype;\n\n  _proto.request = function request(lazyLoad) {\n    var _this2 = this;\n\n    if (lazyLoad === void 0) {\n      lazyLoad = false;\n    } // popup request\n    // TODO: ie - open imediately and hide it but post handshake after timeout\n    // bring popup window to front\n\n\n    if (this.locked) {\n      if (this._window) {\n        if (this.extension) {\n          // $FlowIssue chrome not declared outside\n          chrome.tabs.update(this._window.id, {\n            active: true\n          });\n        } else {\n          this._window.focus();\n        }\n      }\n\n      return;\n    }\n\n    this.lazyLoad = lazyLoad ? (0, _deferred.create)(POPUP.INIT) : null;\n\n    if (this.lazyLoad) {\n      if (!this.extension) {\n        window.addEventListener('message', this.handleLazyLoading, false);\n      }\n    }\n\n    var openFn = this.open.bind(this);\n    this.locked = true;\n\n    if (!this.settings.supportedBrowser) {\n      openFn();\n    } else {\n      this.requestTimeout = window.setTimeout(function () {\n        _this2.requestTimeout = 0;\n        openFn();\n      }, lazyLoad || this.extension ? 1 : POPUP_REQUEST_TIMEOUT);\n    }\n  };\n\n  _proto.cancel = function cancel() {\n    this.close();\n  };\n\n  _proto.unlock = function unlock() {\n    this.locked = false;\n  };\n\n  _proto.open = function open() {\n    var _this3 = this;\n\n    if (!this.settings.supportedBrowser) {\n      this.openWrapper(this.src + '#unsupported');\n      return;\n    }\n\n    this.openWrapper(this.lazyLoad ? this.src + '#loading' : this.src);\n    this.closeInterval = window.setInterval(function () {\n      if (_this3._window) {\n        if (_this3.extension) {\n          // $FlowIssue chrome not declared outside\n          chrome.tabs.get(_this3._window.id, function (tab) {\n            if (!tab) {\n              _this3.close();\n\n              _this3.emit(POPUP.CLOSED);\n            }\n          });\n        } else if (_this3._window.closed) {\n          _this3.close();\n\n          _this3.emit(POPUP.CLOSED);\n        }\n      }\n    }, POPUP_CLOSE_INTERVAL);\n    this.openTimeout = window.setTimeout(function () {\n      if (!(_this3._window && !_this3._window.closed)) {\n        _this3.close();\n\n        (0, _showPopupRequest.showPopupRequest)(_this3.open.bind(_this3), function () {\n          _this3.emit(POPUP.CLOSED);\n        });\n      }\n    }, POPUP_OPEN_TIMEOUT);\n  };\n\n  _proto.openWrapper = function openWrapper(url) {\n    var _this4 = this;\n\n    if (this.extension) {\n      // $FlowIssue chrome not declared outside\n      chrome.windows.getCurrent(null, function (currentWindow) {\n        // Request coming from extension popup,\n        // create new window above instead of opening new tab\n        if (currentWindow.type !== 'normal') {\n          // $FlowIssue chrome not declared outside\n          chrome.windows.create({\n            url: url\n          }, function (newWindow) {\n            // $FlowIssue chrome not declared outside\n            chrome.tabs.query({\n              windowId: newWindow.id,\n              active: true\n            }, function (tabs) {\n              _this4._window = tabs[0];\n            });\n          });\n        } else {\n          // $FlowIssue chrome not declared outside\n          chrome.tabs.query({\n            currentWindow: true,\n            active: true\n          }, function (tabs) {\n            _this4.extensionTabId = tabs[0].id; // $FlowIssue chrome not declared outside\n\n            chrome.tabs.create({\n              url: url,\n              index: tabs[0].index + 1\n            }, function (tab) {\n              _this4._window = tab;\n            });\n          });\n        }\n      });\n    } else {\n      this._window = window.open('', '_blank');\n\n      if (this._window) {\n        this._window.location.href = url; // otherwise android/chrome loose window.opener reference\n      }\n    }\n  };\n\n  _proto.handleExtensionConnect = function handleExtensionConnect(port) {\n    if (port.name === 'trezor-connect') {\n      if (!this._window || this._window && this._window.id !== port.sender.tab.id) {\n        port.disconnect();\n        return;\n      }\n\n      this.extensionPort = port; // $FlowIssue need to update ChromePort definition\n\n      this.extensionPort.onMessage.addListener(this.handleExtensionMessage);\n    } else if (port.name === 'trezor-usb-permissions') {\n      port.postMessage({\n        broadcast: this.broadcast\n      });\n    }\n  };\n\n  _proto.handleExtensionMessage = function handleExtensionMessage(message) {\n    if (!this.extensionPort) return;\n\n    if (message === POPUP.EXTENSION_REQUEST) {\n      this.extensionPort.postMessage({\n        type: POPUP.EXTENSION_REQUEST,\n        broadcast: this.broadcast\n      });\n    } else if (message === POPUP.INIT && this.lazyLoad) {\n      this.lazyLoad.resolve(true);\n    } else if (message === POPUP.EXTENSION_USB_PERMISSIONS) {\n      // $FlowIssue chrome not declared outside\n      chrome.tabs.query({\n        currentWindow: true,\n        active: true\n      }, function (tabs) {\n        // $FlowIssue chrome not declared outside\n        chrome.tabs.create({\n          url: 'trezor-usb-permissions.html',\n          index: tabs[0].index + 1\n        }, function (tab) {// do nothing\n        });\n      });\n    } else if (message === POPUP.CLOSE_WINDOW) {\n      this.emit(POPUP.CLOSED);\n      this.close();\n    }\n  };\n\n  _proto.setBroadcast = function setBroadcast(broadcast) {\n    this.broadcast = broadcast;\n  };\n\n  _proto.handleLazyLoading = function handleLazyLoading(event) {\n    if (this.lazyLoad && event.data && event.data === POPUP.INIT) {\n      this.lazyLoad.resolve(true);\n      window.removeEventListener('message', this.handleLazyLoading, false);\n    }\n  };\n\n  _proto.resolveLazyLoad = /*#__PURE__*/function () {\n    var _resolveLazyLoad = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n      return _regenerator[\"default\"].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.lazyLoad) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return this.lazyLoad.promise;\n\n            case 3:\n              _context.next = 6;\n              break;\n\n            case 5:\n              throw ERROR.POPUP_CLOSED.message;\n\n            case 6:\n              if (this.extension) {\n                if (this.extensionPort) {\n                  this.extensionPort.postMessage({\n                    type: POPUP.INIT\n                  });\n                }\n              } else if (this._window) {\n                this._window.postMessage({\n                  type: POPUP.INIT\n                }, this.origin);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function resolveLazyLoad() {\n      return _resolveLazyLoad.apply(this, arguments);\n    }\n\n    return resolveLazyLoad;\n  }();\n\n  _proto.close = function close() {\n    this.locked = false;\n\n    if (this.requestTimeout) {\n      window.clearTimeout(this.requestTimeout);\n      this.requestTimeout = 0;\n    }\n\n    if (this.openTimeout) {\n      window.clearTimeout(this.openTimeout);\n      this.openTimeout = 0;\n    }\n\n    if (this.closeInterval) {\n      window.clearInterval(this.closeInterval);\n      this.closeInterval = 0;\n    }\n\n    if (this.extensionPort) {\n      this.extensionPort.disconnect();\n      this.extensionPort = null;\n    }\n\n    if (this.extensionTabId) {\n      // $FlowIssue chrome not declared outside\n      chrome.tabs.update(this.extensionTabId, {\n        active: true\n      });\n      this.extensionTabId = 0;\n    }\n\n    if (this.lazyLoad) {\n      this.lazyLoad = null;\n    }\n\n    if (this._window) {\n      if (this.extension) {\n        // $FlowIssue chrome not declared outside\n        chrome.tabs.remove(this._window.id);\n      } else {\n        this._window.close();\n      }\n\n      this._window = null;\n    }\n  };\n\n  _proto.postMessage = function postMessage(message) {\n    var _this5 = this; // post message before popup request finalized\n\n\n    if (this.requestTimeout) {\n      return;\n    } // device needs interaction but there is no popup/ui\n    // maybe popup request wasn't handled\n    // ignore \"ui_request_window\" type\n\n\n    if (!this._window && message.type !== 'ui_request_window' && this.openTimeout) {\n      this.close();\n      (0, _showPopupRequest.showPopupRequest)(this.open.bind(this), function () {\n        _this5.emit(POPUP.CLOSED);\n      });\n      return;\n    } // post message to popup window\n\n\n    if (this._window) {\n      this._window.postMessage(message, this.origin);\n    }\n  };\n\n  _proto.onBeforeUnload = function onBeforeUnload() {\n    this.close();\n  };\n\n  _proto.cancelOpenTimeout = function cancelOpenTimeout() {\n    window.clearTimeout(this.openTimeout);\n  };\n\n  return PopupManager;\n}(_events[\"default\"]);\n\nexports[\"default\"] = PopupManager;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_regenerator, \"_regenerator\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(_asyncToGenerator2, \"_asyncToGenerator2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(_assertThisInitialized2, \"_assertThisInitialized2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(_inheritsLoose2, \"_inheritsLoose2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(_defineProperty2, \"_defineProperty2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(_events, \"_events\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(POPUP, \"POPUP\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(ERROR, \"ERROR\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(POPUP_REQUEST_TIMEOUT, \"POPUP_REQUEST_TIMEOUT\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(POPUP_CLOSE_INTERVAL, \"POPUP_CLOSE_INTERVAL\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(POPUP_OPEN_TIMEOUT, \"POPUP_OPEN_TIMEOUT\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n  reactHotLoader.register(PopupManager, \"PopupManager\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/trezor-connect/lib/popup/PopupManager.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}