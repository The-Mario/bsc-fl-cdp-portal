{"ast":null,"code":"import _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { hot } from 'react-hot-loader/root';\nimport { Flex, Box, Grid } from '@makerdao/ui-components-core';\nimport { useSpring, animated } from 'react-spring';\nimport { useCurrentRoute } from 'react-navi';\nimport useMaker from 'hooks/useMaker';\nimport useSidebar from 'hooks/useSidebar';\nimport GlobalSidebar from 'components/Sidebars/Global';\nimport SidebarActionLayout from 'layouts/SidebarActionLayout';\nimport TransactionManager from 'components/TransactionManager';\nimport AccountBox from 'components/AccountBox';\nimport { getMeasurement } from 'styles/theme';\nimport useTransactions from 'hooks/useTransactions';\nvar springConfig = {\n  mass: 1,\n  tension: 500,\n  friction: 50\n};\nvar animations = {\n  fade: [{\n    opacity: 0.9\n  }, {\n    opacity: 1\n  }],\n  fadeAway: [{\n    transform: 'scale(0.9)',\n    opacity: 0\n  }, {\n    transform: 'scale(1)',\n    opacity: 1\n  }],\n  slide: [{\n    transform: 'translate3d(0px, 0, 0)'\n  }, {\n    transform: \"translate3d(-\".concat(getMeasurement('sidebarWidth'), \"px, 0, 0)\")\n  }]\n};\nvar AnimatedWrap = styled(animated.div).withConfig({\n  displayName: \"SidebarBase__AnimatedWrap\",\n  componentId: \"sc-1xy1jh2-0\"\n})([\"width:100%;\"]);\n\nvar _StyledFlex = styled(Flex).withConfig({\n  displayName: \"SidebarBase___StyledFlex\",\n  componentId: \"sc-1xy1jh2-1\"\n})([\"\", \"\"], function (p) {\n  return p._css;\n});\n\nfunction SidebarBase() {\n  var _useMaker = useMaker(),\n      account = _useMaker.account,\n      network = _useMaker.network;\n\n  var _useTransactions = useTransactions(),\n      transactions = _useTransactions.transactions,\n      hideTransaction = _useTransactions.hideTransaction,\n      drawExpanded = _useTransactions.drawExpanded,\n      setDrawExpanded = _useTransactions.setDrawExpanded;\n\n  var _useSidebar = useSidebar(),\n      current = _useSidebar.current;\n\n  var SidebarComponent = current.component,\n      props = current.props;\n\n  var _animations$slide = _slicedToArray(animations.slide, 2),\n      slideStart = _animations$slide[0],\n      slideEnd = _animations$slide[1];\n\n  var _animations$fade = _slicedToArray(animations.fade, 2),\n      p2off = _animations$fade[0],\n      p2on = _animations$fade[1];\n\n  var _animations$fadeAway = _slicedToArray(animations.fadeAway, 2),\n      p1off = _animations$fadeAway[0],\n      p1on = _animations$fadeAway[1];\n\n  var pathname = useCurrentRoute().url.pathname;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastPathname = _useState2[0],\n      setLastPathname = _useState2[1];\n\n  var _useSpring = useSpring(function () {\n    return {\n      to: slideStart,\n      config: springConfig\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      slideAnimation = _useSpring2[0],\n      setSlideAnimation = _useSpring2[1];\n\n  var _useSpring3 = useSpring(function () {\n    return {\n      to: p1on,\n      config: springConfig\n    };\n  }),\n      _useSpring4 = _slicedToArray(_useSpring3, 2),\n      p1Animation = _useSpring4[0],\n      setP1Animation = _useSpring4[1];\n\n  var _useSpring5 = useSpring(function () {\n    return {\n      to: p2off,\n      config: springConfig\n    };\n  }),\n      _useSpring6 = _slicedToArray(_useSpring5, 2),\n      p2Animation = _useSpring6[0],\n      setP2Animation = _useSpring6[1];\n\n  var resetSidebarActionAnimated = useCallback(function () {\n    setP1Animation({\n      to: p1on\n    });\n    setP2Animation({\n      to: p2off\n    });\n    setSlideAnimation({\n      to: slideStart,\n      onRest: props.reset\n    });\n  }, [setP1Animation, p1on, setP2Animation, p2off, setSlideAnimation, slideStart, props.reset]);\n  useEffect(function () {\n    if (!SidebarComponent) return;\n    setP1Animation({\n      to: p1off\n    });\n    setP2Animation({\n      to: p2on\n    });\n    setSlideAnimation({\n      to: slideEnd,\n      onRest: function onRest() {}\n    });\n  }, [SidebarComponent, p1off, p2on, setP1Animation, setP2Animation, setSlideAnimation, slideEnd]);\n  useEffect(function () {\n    if (pathname !== lastPathname) {\n      resetSidebarActionAnimated();\n      setLastPathname(pathname);\n    }\n  }, [pathname, lastPathname, resetSidebarActionAnimated]);\n  return /*#__PURE__*/React.createElement(Box, {\n    minWidth: getMeasurement('sidebarWidth'),\n    pt: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TransactionManager, {\n    transactions: transactions,\n    hideTransaction: hideTransaction,\n    drawExpanded: drawExpanded,\n    setDrawExpanded: setDrawExpanded,\n    network: network,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    mt: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AccountBox, {\n    currentAccount: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_StyledFlex, {\n    _css: 'overflow:hidden;',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AnimatedWrap, {\n    style: _objectSpread({}, p1Animation, {\n      zIndex: 1\n    }),\n    key: \"panel1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GlobalSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(AnimatedWrap, {\n    style: _objectSpread({}, slideAnimation, {}, p2Animation, {\n      zIndex: 2\n    }),\n    key: \"panel2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, !!SidebarComponent && /*#__PURE__*/React.createElement(SidebarActionLayout, {\n    onClose: resetSidebarActionAnimated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SidebarComponent, Object.assign({}, props, {\n    reset: resetSidebarActionAnimated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  })))))));\n}\n\n__signature__(SidebarBase, \"useMaker{{ account, network }}\\nuseTransactions{{\\n    transactions,\\n    hideTransaction,\\n    drawExpanded,\\n    setDrawExpanded\\n  }}\\nuseSidebar{{ current }}\\nuseCurrentRoute{}\\nuseState{[lastPathname, setLastPathname]}\\nuseSpring{[slideAnimation, setSlideAnimation]}\\nuseSpring{[p1Animation, setP1Animation]}\\nuseSpring{[p2Animation, setP2Animation]}\\nuseCallback{resetSidebarActionAnimated}\\nuseEffect{}\\nuseEffect{}\", function () {\n  return [useMaker, useTransactions, useSidebar, useCurrentRoute, useSpring, useSpring, useSpring];\n});\n\nvar _default = hot(SidebarBase);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(springConfig, \"springConfig\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js\");\n  reactHotLoader.register(animations, \"animations\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js\");\n  reactHotLoader.register(AnimatedWrap, \"AnimatedWrap\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js\");\n  reactHotLoader.register(SidebarBase, \"SidebarBase\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/SidebarBase.js"],"names":["React","useCallback","useEffect","useState","styled","hot","Flex","Box","Grid","useSpring","animated","useCurrentRoute","useMaker","useSidebar","GlobalSidebar","SidebarActionLayout","TransactionManager","AccountBox","getMeasurement","useTransactions","springConfig","mass","tension","friction","animations","fade","opacity","fadeAway","transform","slide","AnimatedWrap","div","SidebarBase","account","network","transactions","hideTransaction","drawExpanded","setDrawExpanded","current","SidebarComponent","component","props","slideStart","slideEnd","p2off","p2on","p1off","p1on","pathname","url","lastPathname","setLastPathname","to","config","slideAnimation","setSlideAnimation","p1Animation","setP1Animation","p2Animation","setP2Animation","resetSidebarActionAnimated","onRest","reset","zIndex"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { hot } from 'react-hot-loader/root';\n\nimport { Flex, Box, Grid } from '@makerdao/ui-components-core';\nimport { useSpring, animated } from 'react-spring';\nimport { useCurrentRoute } from 'react-navi';\n\nimport useMaker from 'hooks/useMaker';\nimport useSidebar from 'hooks/useSidebar';\nimport GlobalSidebar from 'components/Sidebars/Global';\nimport SidebarActionLayout from 'layouts/SidebarActionLayout';\nimport TransactionManager from 'components/TransactionManager';\nimport AccountBox from 'components/AccountBox';\nimport { getMeasurement } from 'styles/theme';\nimport useTransactions from 'hooks/useTransactions';\nconst springConfig = { mass: 1, tension: 500, friction: 50 };\n\nconst animations = {\n  fade: [{ opacity: 0.9 }, { opacity: 1 }],\n  fadeAway: [\n    {\n      transform: 'scale(0.9)',\n      opacity: 0\n    },\n    {\n      transform: 'scale(1)',\n      opacity: 1\n    }\n  ],\n  slide: [\n    { transform: 'translate3d(0px, 0, 0)' },\n    {\n      transform: `translate3d(-${getMeasurement('sidebarWidth')}px, 0, 0)`\n    }\n  ]\n};\n\nconst AnimatedWrap = styled(animated.div)`\n  width: 100%;\n`;\n\nfunction SidebarBase() {\n  const { account, network } = useMaker();\n  const {\n    transactions,\n    hideTransaction,\n    drawExpanded,\n    setDrawExpanded\n  } = useTransactions();\n  const { current } = useSidebar();\n  const { component: SidebarComponent, props } = current;\n  const [slideStart, slideEnd] = animations.slide;\n  const [p2off, p2on] = animations.fade;\n  const [p1off, p1on] = animations.fadeAway;\n  const { pathname } = useCurrentRoute().url;\n  const [lastPathname, setLastPathname] = useState();\n  const [slideAnimation, setSlideAnimation] = useSpring(() => ({\n    to: slideStart,\n    config: springConfig\n  }));\n\n  const [p1Animation, setP1Animation] = useSpring(() => ({\n    to: p1on,\n    config: springConfig\n  }));\n\n  const [p2Animation, setP2Animation] = useSpring(() => ({\n    to: p2off,\n    config: springConfig\n  }));\n\n  const resetSidebarActionAnimated = useCallback(() => {\n    setP1Animation({ to: p1on });\n    setP2Animation({ to: p2off });\n    setSlideAnimation({ to: slideStart, onRest: props.reset });\n  }, [\n    setP1Animation,\n    p1on,\n    setP2Animation,\n    p2off,\n    setSlideAnimation,\n    slideStart,\n    props.reset\n  ]);\n\n  useEffect(() => {\n    if (!SidebarComponent) return;\n    setP1Animation({ to: p1off });\n    setP2Animation({ to: p2on });\n    setSlideAnimation({ to: slideEnd, onRest: () => {} });\n  }, [\n    SidebarComponent,\n    p1off,\n    p2on,\n    setP1Animation,\n    setP2Animation,\n    setSlideAnimation,\n    slideEnd\n  ]);\n\n  useEffect(() => {\n    if (pathname !== lastPathname) {\n      resetSidebarActionAnimated();\n      setLastPathname(pathname);\n    }\n  }, [pathname, lastPathname, resetSidebarActionAnimated]);\n\n  return (\n    <Box minWidth={getMeasurement('sidebarWidth')} pt=\"s\">\n      <TransactionManager\n        transactions={transactions}\n        hideTransaction={hideTransaction}\n        drawExpanded={drawExpanded}\n        setDrawExpanded={setDrawExpanded}\n        network={network}\n      />\n      <Grid gridRowGap=\"s\" mt=\"0\">\n        <AccountBox currentAccount={account} />\n        <Flex css={'overflow:hidden;'}>\n          <AnimatedWrap style={{ ...p1Animation, zIndex: 1 }} key=\"panel1\">\n            <GlobalSidebar />\n          </AnimatedWrap>\n\n          <AnimatedWrap\n            style={{ ...slideAnimation, ...p2Animation, zIndex: 2 }}\n            key=\"panel2\"\n          >\n            {!!SidebarComponent && (\n              <SidebarActionLayout onClose={resetSidebarActionAnimated}>\n                <SidebarComponent\n                  {...props}\n                  reset={resetSidebarActionAnimated}\n                />\n              </SidebarActionLayout>\n            )}\n          </AnimatedWrap>\n        </Flex>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default hot(SidebarBase);\n"]},"metadata":{},"sourceType":"module"}