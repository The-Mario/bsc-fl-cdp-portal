{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _errorStates,\n    _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Text, Card, Button, Grid, Tooltip } from '@makerdao/ui-components-core';\nimport lang from 'languages';\nimport { ReactComponent as Checkmark } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/checkmark.svg\";\nimport TooltipContents from 'components/TooltipContents';\nimport { VendorErrors } from 'utils/constants';\nimport { getColor } from '../styles/theme';\nvar errorStates = (_errorStates = {}, _defineProperty(_errorStates, VendorErrors.ENABLE_CONTRACT_DATA, {\n  message: lang.cdp_create.proxy_failure_contract_data,\n  information: lang.cdp_create.proxy_failure_contract_data_info,\n  retry: true\n}), _defineProperty(_errorStates, VendorErrors.USER_REJECTED, {\n  message: lang.cdp_create.proxy_failure_rejected,\n  retry: true\n}), _defineProperty(_errorStates, VendorErrors.TIMEOUT, {\n  message: lang.cdp_create.proxy_failure_timeout,\n  information: lang.cdp_create.proxy_failure_timeout_info,\n  retry: true\n}), _errorStates);\n\nvar parseError = function parseError(proxyErrors) {\n  return errorStates[proxyErrors === null || proxyErrors === void 0 ? void 0 : proxyErrors.name] || {\n    message: lang.cdp_create.proxy_failure_not_mined,\n    information: lang.cdp_create.proxy_failure_not_mined_info,\n    retry: false\n  };\n};\n\nvar SuccessButton = function SuccessButton() {\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary-outline\",\n    width: \"13.0rem\",\n    mt: \"xs\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Checkmark, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar ProxyAllowanceCheck = function ProxyAllowanceCheck(_ref) {\n  var proxyAddress = _ref.proxyAddress,\n      deployProxy = _ref.deployProxy,\n      proxyLoading = _ref.proxyLoading,\n      proxyDeployed = _ref.proxyDeployed,\n      proxyErrors = _ref.proxyErrors,\n      hasProxy = _ref.hasProxy,\n      setAllowance = _ref.setAllowance,\n      hasAllowance = _ref.hasAllowance,\n      labels = _ref.labels,\n      isSettingAllowance = _ref.isSettingAllowance;\n  var setup_text = labels.setup_text,\n      setup_header = labels.setup_header,\n      allowance_text = labels.allowance_text,\n      confirmations_text = labels.confirmations_text;\n  return /*#__PURE__*/React.createElement(Card, {\n    px: {\n      s: 'l',\n      m: '2xl'\n    },\n    py: \"l\",\n    mb: \"xl\",\n    style: {\n      backgroundColor: getColor('cardBg'),\n      border: 'none',\n      textAlign: 'left'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, setup_header), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '16px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, setup_text), hasProxy ? /*#__PURE__*/React.createElement(SuccessButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    width: \"13.0rem\",\n    mt: \"xs\",\n    onClick: deployProxy,\n    disabled: proxyLoading || isSettingAllowance || !!(proxyErrors && !parseError(proxyErrors).retry),\n    loading: proxyLoading || !!(proxyErrors && !parseError(proxyErrors).retry),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, parseError(proxyErrors).retry ? lang.actions.try_again : lang.cdp_create.setup_proxy_proxy_button), /*#__PURE__*/React.createElement(Text.p, {\n    t: \"subheading\",\n    lineHeight: \"normal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, proxyErrors && /*#__PURE__*/React.createElement(React.Fragment, null, parseError(proxyErrors).message, parseError(proxyErrors).information && /*#__PURE__*/React.createElement(Tooltip, {\n    fontSize: \"xs\",\n    ml: \"s\",\n    color: \"blue\",\n    noDecoration: true,\n    content: /*#__PURE__*/React.createElement(TooltipContents, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, parseError(proxyErrors).information),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, lang.why_is_this)), proxyLoading && confirmations_text, proxyDeployed && lang.formatString(lang.cdp_create.confirmed_with_confirmations, 10), (proxyLoading || proxyDeployed) && /*#__PURE__*/React.createElement(Tooltip, {\n    fontSize: \"m\",\n    ml: \"2xs\",\n    content: /*#__PURE__*/React.createElement(TooltipContents, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, lang.cdp_create.waiting_for_confirmations_info),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"xs\",\n    mt: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, lang.cdp_create.set_allowance), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '16px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, allowance_text), hasAllowance ? /*#__PURE__*/React.createElement(SuccessButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    width: \"13.0rem\",\n    mt: \"xs\",\n    onClick: setAllowance,\n    disabled: !proxyAddress || proxyLoading || isSettingAllowance,\n    loading: isSettingAllowance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, lang.cdp_create.setup_proxy_allowance_button)));\n};\n\nvar _default = ProxyAllowanceCheck;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(errorStates, \"errorStates\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js\");\n  reactHotLoader.register(parseError, \"parseError\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js\");\n  reactHotLoader.register(SuccessButton, \"SuccessButton\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js\");\n  reactHotLoader.register(ProxyAllowanceCheck, \"ProxyAllowanceCheck\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/ProxyAllowanceCheck.js"],"names":["React","Text","Card","Button","Grid","Tooltip","lang","TooltipContents","VendorErrors","getColor","errorStates","ENABLE_CONTRACT_DATA","message","cdp_create","proxy_failure_contract_data","information","proxy_failure_contract_data_info","retry","USER_REJECTED","proxy_failure_rejected","TIMEOUT","proxy_failure_timeout","proxy_failure_timeout_info","parseError","proxyErrors","name","proxy_failure_not_mined","proxy_failure_not_mined_info","SuccessButton","ProxyAllowanceCheck","proxyAddress","deployProxy","proxyLoading","proxyDeployed","hasProxy","setAllowance","hasAllowance","labels","isSettingAllowance","setup_text","setup_header","allowance_text","confirmations_text","s","m","backgroundColor","border","textAlign","fontSize","color","actions","try_again","setup_proxy_proxy_button","why_is_this","formatString","confirmed_with_confirmations","waiting_for_confirmations_info","set_allowance","setup_proxy_allowance_button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Text,\n  Card,\n  Button,\n  Grid,\n  Tooltip\n} from '@makerdao/ui-components-core';\nimport lang from 'languages';\nimport { ReactComponent as Checkmark } from 'images/checkmark.svg';\nimport TooltipContents from 'components/TooltipContents';\nimport { VendorErrors } from 'utils/constants';\nimport { getColor } from '../styles/theme';\nconst errorStates = {\n  [VendorErrors.ENABLE_CONTRACT_DATA]: {\n    message: lang.cdp_create.proxy_failure_contract_data,\n    information: lang.cdp_create.proxy_failure_contract_data_info,\n    retry: true\n  },\n  [VendorErrors.USER_REJECTED]: {\n    message: lang.cdp_create.proxy_failure_rejected,\n    retry: true\n  },\n  [VendorErrors.TIMEOUT]: {\n    message: lang.cdp_create.proxy_failure_timeout,\n    information: lang.cdp_create.proxy_failure_timeout_info,\n    retry: true\n  }\n};\n\nconst parseError = proxyErrors =>\n  errorStates[proxyErrors?.name] || {\n    message: lang.cdp_create.proxy_failure_not_mined,\n    information: lang.cdp_create.proxy_failure_not_mined_info,\n    retry: false\n  };\n\nconst SuccessButton = () => {\n  return (\n    <Button variant=\"primary-outline\" width=\"13.0rem\" mt=\"xs\" disabled>\n      <Checkmark />\n    </Button>\n  );\n};\n\nconst ProxyAllowanceCheck = ({\n  proxyAddress,\n  deployProxy,\n  proxyLoading,\n  proxyDeployed,\n  proxyErrors,\n  hasProxy,\n  setAllowance,\n  hasAllowance,\n  labels,\n  isSettingAllowance\n}) => {\n  const {\n    setup_text,\n    setup_header,\n    allowance_text,\n    confirmations_text\n  } = labels;\n\n  return (\n    <Card\n      px={{ s: 'l', m: '2xl' }}\n      py=\"l\"\n      mb=\"xl\"\n      style={{\n        backgroundColor: getColor('cardBg'),\n        border: 'none',\n        textAlign: 'left'\n      }}\n    >\n      <Grid gridRowGap=\"xs\">\n        <Text style={{ fontSize: '20px', color: getColor('whiteText') }}>\n          {setup_header}\n        </Text>\n        <Text style={{ fontSize: '16px', color: getColor('greyText') }}>\n          {setup_text}\n        </Text>\n        {hasProxy ? (\n          <SuccessButton />\n        ) : (\n          <Button\n            width=\"13.0rem\"\n            mt=\"xs\"\n            onClick={deployProxy}\n            disabled={\n              proxyLoading ||\n              isSettingAllowance ||\n              !!(proxyErrors && !parseError(proxyErrors).retry)\n            }\n            loading={\n              proxyLoading || !!(proxyErrors && !parseError(proxyErrors).retry)\n            }\n          >\n            {parseError(proxyErrors).retry\n              ? lang.actions.try_again\n              : lang.cdp_create.setup_proxy_proxy_button}\n          </Button>\n        )}\n        <Text.p t=\"subheading\" lineHeight=\"normal\">\n          {proxyErrors && (\n            <>\n              {parseError(proxyErrors).message}\n              {parseError(proxyErrors).information && (\n                <Tooltip\n                  fontSize=\"xs\"\n                  ml=\"s\"\n                  color=\"blue\"\n                  noDecoration\n                  content={\n                    <TooltipContents>\n                      {parseError(proxyErrors).information}\n                    </TooltipContents>\n                  }\n                >\n                  {lang.why_is_this}\n                </Tooltip>\n              )}\n            </>\n          )}\n          {proxyLoading && confirmations_text}\n          {proxyDeployed &&\n            lang.formatString(lang.cdp_create.confirmed_with_confirmations, 10)}\n          {(proxyLoading || proxyDeployed) && (\n            <Tooltip\n              fontSize=\"m\"\n              ml=\"2xs\"\n              content={\n                <TooltipContents>\n                  {lang.cdp_create.waiting_for_confirmations_info}\n                </TooltipContents>\n              }\n            />\n          )}\n        </Text.p>\n      </Grid>\n      <Grid gridRowGap=\"xs\" mt=\"l\">\n        <Text style={{ fontSize: '20px', color: getColor('whiteText') }}>\n          {lang.cdp_create.set_allowance}\n        </Text>\n        <Text style={{ fontSize: '16px', color: getColor('greyText') }}>\n          {allowance_text}\n        </Text>\n        {hasAllowance ? (\n          <SuccessButton />\n        ) : (\n          <Button\n            width=\"13.0rem\"\n            mt=\"xs\"\n            onClick={setAllowance}\n            disabled={!proxyAddress || proxyLoading || isSettingAllowance}\n            loading={isSettingAllowance}\n          >\n            {lang.cdp_create.setup_proxy_allowance_button}\n          </Button>\n        )}\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProxyAllowanceCheck;\n"]},"metadata":{},"sourceType":"module"}