{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NetworkNav.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState } from 'react';\nimport { Flex, Text, Link, Card, Grid, Box } from '@makerdao/ui-components-core';\nimport { ReactComponent as EthIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/tokens/icon-coin-eth.svg\";\nimport { ReactComponent as BscIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/tokens/icon-coin-bsc.svg\";\nimport BnBsc from 'images/bn_bsc.png';\nimport useLanguage from 'hooks/useLanguage';\nimport { getColor } from 'styles/theme';\nimport Modal from 'react-modal';\nModal.setAppElement('#root');\n\nvar TradeNav = function TradeNav(_ref) {\n  var props = Object.assign({}, _ref);\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalIsOpen = _useState2[0],\n      setModalIsOpen = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('greyText'),\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, lang.navbar.network), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      background: getColor('cardBg'),\n      border: getColor('border'),\n      padding: '3px',\n      margin: '5px 25px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: \"1fr 1fr\",\n    gridColumnGap: \"3px\",\n    gridRowGap: \"6px\",\n    padding: \"3px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    className: \"network_box\",\n    style: {\n      background: '#222B3F'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EthIcon, {\n    className: \"network_img\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    t: \"p6\",\n    fontWeight: \"bold\",\n    color: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, lang.navbar.eth))), /*#__PURE__*/React.createElement(Link, {\n    className: \"modalVideo\",\n    onClick: function onClick() {\n      return setModalIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    className: \"network_box\",\n    style: {\n      background: getColor('cardBg')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BscIcon, {\n    className: \"network_img\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    t: \"p6\",\n    fontWeight: \"bold\",\n    color: 'gray',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, lang.navbar.bsc))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modalVideo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: function onRequestClose() {\n      return setModalIsOpen(false);\n    },\n    style: {\n      overlay: {\n        background: 'rgba(0, 0, 0, 0.5)'\n      },\n      content: {\n        background: '#222B3F',\n        border: 'none',\n        width: '40%',\n        height: '62%',\n        margin: 'auto'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: BnBsc,\n    alt: \"Binance\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text.h4, {\n    style: {\n      color: getColor('whiteText'),\n      textAlign: 'center',\n      padding: '20px 10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, lang.landing_page.banner_in_progress), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('greyText'),\n      textAlign: 'center',\n      padding: '20px 10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, lang.landing_page.banner_binance), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    className: \"link_banner\",\n    href: \"https://freeliquid.medium.com/freeliquid-proposes-an-expansion-to-bsc-edcc8e8bec9f\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, lang.landing_page.banner_link), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close_btn\",\n    onClick: function onClick() {\n      return setModalIsOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"))));\n};\n\n__signature__(TradeNav, \"useLanguage{{ lang }}\\nuseState{[modalIsOpen, setModalIsOpen](false)}\", function () {\n  return [useLanguage];\n});\n\nvar _default = TradeNav;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TradeNav, \"TradeNav\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NetworkNav.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NetworkNav.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NetworkNav.js"],"names":["React","useState","Flex","Text","Link","Card","Grid","Box","BnBsc","useLanguage","getColor","Modal","setAppElement","TradeNav","props","lang","modalIsOpen","setModalIsOpen","textAlign","color","navbar","network","background","border","padding","margin","eth","bsc","overlay","content","width","height","landing_page","banner_in_progress","banner_binance","banner_link"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Flex, Text, Link, Card, Grid, Box } from '@makerdao/ui-components-core';\nimport { ReactComponent as EthIcon } from 'images/tokens/icon-coin-eth.svg';\nimport { ReactComponent as BscIcon } from 'images/tokens/icon-coin-bsc.svg';\nimport BnBsc from 'images/bn_bsc.png';\n\nimport useLanguage from 'hooks/useLanguage';\nimport { getColor } from 'styles/theme';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst TradeNav = ({ ...props }) => {\n  const { lang } = useLanguage();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  return (\n    <Box\n      style={{\n        textAlign: 'center',\n      }}>\n      <Text\n        style={{\n          color: getColor('greyText'),\n          textAlign: 'center',\n\n        }}\n      >{lang.navbar.network}\n      </Text>\n      <Card\n        style={{\n          background: getColor('cardBg'),\n          border: getColor('border'),\n          padding: '3px',\n          margin: '5px 25px',\n        }}\n      >\n\n        <Grid\n          gridTemplateColumns=\"1fr 1fr\"\n          gridColumnGap=\"3px\"\n          gridRowGap=\"6px\"\n          padding=\"3px\"\n\n        >\n          <Link>\n            <Flex\n              className=\"network_box\"\n              style={{\n                background: '#222B3F',\n              }}>\n              <EthIcon className=\"network_img\" />\n              <Text t=\"p6\" fontWeight=\"bold\" color={'white'}>\n                {lang.navbar.eth}\n              </Text>\n            </Flex>\n          </Link>\n          <Link\n            className=\"modalVideo\"\n            onClick={() => setModalIsOpen(true)}>\n            <Flex\n              className=\"network_box\"\n              style={{\n                background: getColor('cardBg'),\n              }}>\n              <BscIcon className=\"network_img\" />\n              <Text t=\"p6\" fontWeight=\"bold\" color={'gray'}>\n                {lang.navbar.bsc}\n              </Text>\n            </Flex>\n          </Link>\n        </Grid>\n      </Card>\n      <div className=\"modalVideo\">\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={() => setModalIsOpen(false)}\n          style={{\n            overlay: {\n              background: 'rgba(0, 0, 0, 0.5)'\n            },\n            content: {\n              background: '#222B3F',\n              border: 'none',\n              width: '40%',\n              height: '62%',\n              margin: 'auto'\n            }\n          }}\n        >\n          <img src={BnBsc} alt=\"Binance\" />\n          <Text.h4\n            style={{\n              color: getColor('whiteText'),\n              textAlign: 'center',\n              padding: '20px 10px'\n            }}\n          >\n            {lang.landing_page.banner_in_progress}\n          </Text.h4>\n          <Text\n            style={{\n              color: getColor('greyText'),\n              textAlign: 'center',\n              padding: '20px 10px'\n            }}\n          >\n            {lang.landing_page.banner_binance}\n          </Text>\n          <br />\n          <Link\n            className=\"link_banner\"\n            href=\"https://freeliquid.medium.com/freeliquid-proposes-an-expansion-to-bsc-edcc8e8bec9f\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {lang.landing_page.banner_link}\n          </Link>\n          <button\n            className=\"close_btn\"\n            onClick={() => setModalIsOpen(false)}\n          >\n            &times;\n                </button>\n        </Modal>\n      </div>\n    </Box>\n  );\n};\n\nexport default TradeNav;\n"]},"metadata":{},"sourceType":"module"}