{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// Checks if input starts with string\nvar startsWith = function startsWith(input, string) {\n  return input.indexOf(string) === 0;\n}; // Some browsers report language as en-US instead of en_US\n\n\nvar normalizeCode = function normalizeCode(code) {\n  return code ? code.toLowerCase().replace(/-/, '_') : null;\n};\n\nvar getBrowserLang = function getBrowserLang() {\n  return typeof window === 'undefined' ? null : normalizeCode(window.navigator.languages && window.navigator.languages[0] || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage || window.navigator.systemLanguage || null);\n};\n\nexport var getPreferredLanguage = function getPreferredLanguage(options) {\n  var languages = options.languages,\n      overrides = options.overrides,\n      fallback = options.fallback;\n\n  if (overrides) {\n    var _iterator = _createForOfIteratorHelper(overrides),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var override = _step.value;\n        var match = languages.find(function (lang) {\n          return normalizeCode(lang) === normalizeCode(override);\n        });\n        if (match) return {\n          v: match\n        };\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _ret = _loop();\n\n        if (typeof _ret === \"object\") return _ret.v;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  var browserLanguage = getBrowserLang();\n  if (!options) return browserLanguage;\n  if (!languages || !browserLanguage) return fallback;\n  var match = languages.filter(function (lang) {\n    return normalizeCode(lang) === browserLanguage;\n  });\n  if (match.length > 0) return match[0] || fallback; // en == en_US\n\n  var matchCodeOnly = languages.filter(function (lang) {\n    return startsWith(browserLanguage, lang.substr(0, 2));\n  });\n  return matchCodeOnly[0] || fallback;\n};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(startsWith, \"startsWith\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/language.js\");\n  reactHotLoader.register(normalizeCode, \"normalizeCode\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/language.js\");\n  reactHotLoader.register(getBrowserLang, \"getBrowserLang\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/language.js\");\n  reactHotLoader.register(getPreferredLanguage, \"getPreferredLanguage\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/language.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/language.js"],"names":["startsWith","input","string","indexOf","normalizeCode","code","toLowerCase","replace","getBrowserLang","window","navigator","languages","language","browserLanguage","userLanguage","systemLanguage","getPreferredLanguage","options","overrides","fallback","override","match","find","lang","filter","length","matchCodeOnly","substr"],"mappings":";;;;;;;;;;;AAAA;AACA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,MAAR;AAAA,SAAmBD,KAAK,CAACE,OAAN,CAAcD,MAAd,MAA0B,CAA7C;AAAA,CAAnB,C,CAEA;;;AACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SACxBA,IAAI,GAAGA,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2B,GAA3B,EAAgC,GAAhC,CAAH,GAA0C,IADtB;AAAA,CAA1B;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SACrB,OAAOC,MAAP,KAAkB,WAAlB,GACI,IADJ,GAEIL,aAAa,CACVK,MAAM,CAACC,SAAP,CAAiBC,SAAjB,IAA8BF,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2B,CAA3B,CAA/B,IACEF,MAAM,CAACC,SAAP,CAAiBE,QADnB,IAEEH,MAAM,CAACC,SAAP,CAAiBG,eAFnB,IAGEJ,MAAM,CAACC,SAAP,CAAiBI,YAHnB,IAIEL,MAAM,CAACC,SAAP,CAAiBK,cAJnB,IAKE,IANS,CAHI;AAAA,CAAvB;;AAYA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO,EAAI;AAAA,MACrCN,SADqC,GACFM,OADE,CACrCN,SADqC;AAAA,MAC1BO,SAD0B,GACFD,OADE,CAC1BC,SAD0B;AAAA,MACfC,QADe,GACFF,OADE,CACfE,QADe;;AAG7C,MAAID,SAAJ,EAAe;AAAA,+CACQA,SADR;AAAA;;AAAA;AAAA;AAAA,YACJE,QADI;AAEX,YAAMC,KAAK,GAAGV,SAAS,CAACW,IAAV,CACZ,UAAAC,IAAI;AAAA,iBAAInB,aAAa,CAACmB,IAAD,CAAb,KAAwBnB,aAAa,CAACgB,QAAD,CAAzC;AAAA,SADQ,CAAd;AAGA,YAAIC,KAAJ,EAAW;AAAA,aAAOA;AAAP;AALA;;AACb,0DAAgC;AAAA;;AAAA;AAK/B;AANY;AAAA;AAAA;AAAA;AAAA;AAOd;;AAED,MAAMR,eAAe,GAAGL,cAAc,EAAtC;AAEA,MAAI,CAACS,OAAL,EAAc,OAAOJ,eAAP;AACd,MAAI,CAACF,SAAD,IAAc,CAACE,eAAnB,EAAoC,OAAOM,QAAP;AAEpC,MAAME,KAAK,GAAGV,SAAS,CAACa,MAAV,CACZ,UAAAD,IAAI;AAAA,WAAInB,aAAa,CAACmB,IAAD,CAAb,KAAwBV,eAA5B;AAAA,GADQ,CAAd;AAGA,MAAIQ,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB,OAAOJ,KAAK,CAAC,CAAD,CAAL,IAAYF,QAAnB,CApBuB,CAsB7C;;AACA,MAAMO,aAAa,GAAGf,SAAS,CAACa,MAAV,CAAiB,UAAAD,IAAI;AAAA,WACzCvB,UAAU,CAACa,eAAD,EAAkBU,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAlB,CAD+B;AAAA,GAArB,CAAtB;AAIA,SAAOD,aAAa,CAAC,CAAD,CAAb,IAAoBP,QAA3B;AACD,CA5BM;;;;;;;;;;0BAlBDnB,U;0BAGAI,a;0BAGAI,c;0BAYOQ,oB","sourcesContent":["// Checks if input starts with string\nconst startsWith = (input, string) => input.indexOf(string) === 0;\n\n// Some browsers report language as en-US instead of en_US\nconst normalizeCode = code =>\n  code ? code.toLowerCase().replace(/-/, '_') : null;\n\nconst getBrowserLang = () =>\n  typeof window === 'undefined'\n    ? null\n    : normalizeCode(\n        (window.navigator.languages && window.navigator.languages[0]) ||\n          window.navigator.language ||\n          window.navigator.browserLanguage ||\n          window.navigator.userLanguage ||\n          window.navigator.systemLanguage ||\n          null\n      );\n\nexport const getPreferredLanguage = options => {\n  const { languages, overrides, fallback } = options;\n\n  if (overrides) {\n    for (let override of overrides) {\n      const match = languages.find(\n        lang => normalizeCode(lang) === normalizeCode(override)\n      );\n      if (match) return match;\n    }\n  }\n\n  const browserLanguage = getBrowserLang();\n\n  if (!options) return browserLanguage;\n  if (!languages || !browserLanguage) return fallback;\n\n  const match = languages.filter(\n    lang => normalizeCode(lang) === browserLanguage\n  );\n  if (match.length > 0) return match[0] || fallback;\n\n  // en == en_US\n  const matchCodeOnly = languages.filter(lang =>\n    startsWith(browserLanguage, lang.substr(0, 2))\n  );\n\n  return matchCodeOnly[0] || fallback;\n};\n"]},"metadata":{},"sourceType":"module"}