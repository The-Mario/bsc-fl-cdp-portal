{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrDeposit.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback } from 'react';\nimport { Text, Input, Grid, Button } from '@makerdao/ui-components-core';\nimport Info from './shared/Info';\nimport InfoContainer from './shared/InfoContainer';\nimport useMaker from 'hooks/useMaker';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useValidatedInput from 'hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport ProxyAllowanceToggle from 'components/ProxyAllowanceToggle';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport SetMax from 'components/SetMax';\nimport { safeToFixed } from '../../utils/ui';\nimport { getColor } from '../../styles/theme';\n\nvar DsrDeposit = function DsrDeposit(_ref) {\n  var savings = _ref.savings,\n      reset = _ref.reset;\n\n  var _useAnalytics = useAnalytics('Deposit', 'Sidebar'),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var symbol = USDFL.symbol;\n  var displaySymbol = 'USDFL';\n  var daiLockedInDsr = savings.daiLockedInDsr;\n\n  var _useWalletBalances = useWalletBalances(),\n      daiBalance = _useWalletBalances.USDFL;\n\n  var _useTokenAllowance = useTokenAllowance(symbol),\n      hasAllowance = _useTokenAllowance.hasAllowance,\n      hasSufficientAllowance = _useTokenAllowance.hasSufficientAllowance;\n\n  var _useValidatedInput = useValidatedInput('', {\n    isFloat: true,\n    minFloat: 0.0,\n    maxFloat: daiBalance && daiBalance.toNumber(),\n    custom: {\n      allowanceInvalid: function allowanceInvalid(value) {\n        return !hasSufficientAllowance(value);\n      }\n    }\n  }, {\n    maxFloat: function maxFloat() {\n      return lang.formatString(lang.action_sidebar.insufficient_balance, 'USDFL');\n    },\n    allowanceInvalid: function allowanceInvalid() {\n      return lang.formatString(lang.action_sidebar.invalid_allowance, 'USDFL');\n    }\n  }),\n      _useValidatedInput2 = _slicedToArray(_useValidatedInput, 4),\n      depositAmount = _useValidatedInput2[0],\n      setDepositAmount = _useValidatedInput2[1],\n      onDepositAmountChange = _useValidatedInput2[2],\n      depositAmountErrors = _useValidatedInput2[3];\n\n  var setDepositMax = useCallback(function () {\n    if (daiBalance && !daiBalance.eq(0)) {\n      setDepositAmount(daiBalance.toString());\n    } else {\n      setDepositAmount('');\n    }\n  }, [daiBalance, setDepositAmount]);\n\n  var deposit = function deposit() {\n    maker.service('mcd:savings').join(USDFL(depositAmount));\n    reset();\n  };\n\n  var valid = depositAmount && !depositAmountErrors && hasAllowance;\n  return /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, lang.formatString(lang.action_sidebar.deposit_title, displaySymbol)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '16px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.action_sidebar.deposit_description, displaySymbol))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      color: getColor('whiteText')\n    },\n    disabled: !hasAllowance,\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"0 USDFL\",\n    value: depositAmount,\n    onChange: onDepositAmountChange,\n    error: depositAmountErrors,\n    failureMessage: depositAmountErrors,\n    after: /*#__PURE__*/React.createElement(SetMax, {\n      onClick: function onClick() {\n        setDepositMax();\n        trackBtnClick('SetMax', {\n          amount: depositAmount,\n          setMax: true\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }),\n    \"data-testid\": \"dsrdeposit-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(ProxyAllowanceToggle, {\n    token: \"USDFL\",\n    onlyShowAllowance: true,\n    trackBtnClick: trackBtnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: \"1fr 1fr\",\n    gridColumnGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    disabled: !valid,\n    onClick: function onClick() {\n      trackBtnClick('Confirm', {\n        amount: depositAmount,\n        fathom: {\n          id: 'saveDeposit',\n          amount: depositAmount\n        }\n      });\n      deposit();\n    },\n    \"data-testid\": 'deposit-button',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, lang.actions.deposit), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"secondary-outline\",\n    onClick: function onClick() {\n      trackBtnClick('Cancel');\n      reset();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, lang.cancel)), /*#__PURE__*/React.createElement(InfoContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    title: lang.action_sidebar.dai_balance,\n    body: \"\".concat(safeToFixed(daiBalance, 7), \" \").concat(displaySymbol),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    title: lang.action_sidebar.locked_dsr,\n    body: \"\".concat(safeToFixed(daiLockedInDsr.toNumber(), 7), \" \").concat(displaySymbol),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(DsrDeposit, \"useAnalytics{{ trackBtnClick }}\\nuseLanguage{{ lang }}\\nuseMaker{{ maker }}\\nuseWalletBalances{{ USDFL: daiBalance }}\\nuseTokenAllowance{{ hasAllowance, hasSufficientAllowance }}\\nuseValidatedInput{[\\n    depositAmount,\\n    setDepositAmount,\\n    onDepositAmountChange,\\n    depositAmountErrors\\n  ]}\\nuseCallback{setDepositMax}\", function () {\n  return [useAnalytics, useLanguage, useMaker, useWalletBalances, useTokenAllowance, useValidatedInput];\n});\n\nvar _default = DsrDeposit;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DsrDeposit, \"DsrDeposit\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrDeposit.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrDeposit.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrDeposit.js"],"names":["React","useCallback","Text","Input","Grid","Button","Info","InfoContainer","useMaker","useTokenAllowance","useWalletBalances","useValidatedInput","useLanguage","useAnalytics","ProxyAllowanceToggle","USDFL","SetMax","safeToFixed","getColor","DsrDeposit","savings","reset","trackBtnClick","lang","maker","symbol","displaySymbol","daiLockedInDsr","daiBalance","hasAllowance","hasSufficientAllowance","isFloat","minFloat","maxFloat","toNumber","custom","allowanceInvalid","value","formatString","action_sidebar","insufficient_balance","invalid_allowance","depositAmount","setDepositAmount","onDepositAmountChange","depositAmountErrors","setDepositMax","eq","toString","deposit","service","join","valid","fontSize","color","deposit_title","deposit_description","amount","setMax","fathom","id","actions","cancel","dai_balance","locked_dsr"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Text, Input, Grid, Button } from '@makerdao/ui-components-core';\nimport Info from './shared/Info';\nimport InfoContainer from './shared/InfoContainer';\nimport useMaker from 'hooks/useMaker';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useValidatedInput from 'hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport ProxyAllowanceToggle from 'components/ProxyAllowanceToggle';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport SetMax from 'components/SetMax';\nimport { safeToFixed } from '../../utils/ui';\nimport { getColor } from '../../styles/theme';\n\nconst DsrDeposit = ({ savings, reset }) => {\n  const { trackBtnClick } = useAnalytics('Deposit', 'Sidebar');\n  const { lang } = useLanguage();\n  const { maker } = useMaker();\n\n  const { symbol } = USDFL;\n  const displaySymbol = 'USDFL';\n\n  const { daiLockedInDsr } = savings;\n  const { USDFL: daiBalance } = useWalletBalances();\n  const { hasAllowance, hasSufficientAllowance } = useTokenAllowance(symbol);\n\n  const [\n    depositAmount,\n    setDepositAmount,\n    onDepositAmountChange,\n    depositAmountErrors\n  ] = useValidatedInput(\n    '',\n    {\n      isFloat: true,\n      minFloat: 0.0,\n      maxFloat: daiBalance && daiBalance.toNumber(),\n      custom: {\n        allowanceInvalid: value => !hasSufficientAllowance(value)\n      }\n    },\n    {\n      maxFloat: () =>\n        lang.formatString(lang.action_sidebar.insufficient_balance, 'USDFL'),\n      allowanceInvalid: () =>\n        lang.formatString(lang.action_sidebar.invalid_allowance, 'USDFL')\n    }\n  );\n\n  const setDepositMax = useCallback(() => {\n    if (daiBalance && !daiBalance.eq(0)) {\n      setDepositAmount(daiBalance.toString());\n    } else {\n      setDepositAmount('');\n    }\n  }, [daiBalance, setDepositAmount]);\n\n  const deposit = () => {\n    maker.service('mcd:savings').join(USDFL(depositAmount));\n    reset();\n  };\n\n  const valid = depositAmount && !depositAmountErrors && hasAllowance;\n\n  return (\n    <Grid gridRowGap=\"m\">\n      <Grid gridRowGap=\"s\">\n        <Text style={{ fontSize: '20px', color: getColor('whiteText') }}>\n          {lang.formatString(lang.action_sidebar.deposit_title, displaySymbol)}\n        </Text>\n        <p>\n          <Text style={{ fontSize: '16px', color: getColor('greyText') }}>\n            {lang.formatString(\n              lang.action_sidebar.deposit_description,\n              displaySymbol\n            )}\n          </Text>\n        </p>\n        <div className=\"input_border\">\n        <Input\n          style={{ color: getColor('whiteText') }}\n          disabled={!hasAllowance}\n          type=\"number\"\n          min=\"0\"\n          placeholder=\"0 USDFL\"\n          value={depositAmount}\n          onChange={onDepositAmountChange}\n          error={depositAmountErrors}\n          failureMessage={depositAmountErrors}\n          after={\n            <SetMax\n              onClick={() => {\n                setDepositMax();\n                trackBtnClick('SetMax', {\n                  amount: depositAmount,\n                  setMax: true\n                });\n              }}\n            />\n          }\n          data-testid=\"dsrdeposit-input\"\n        />\n        </div>\n      </Grid>\n      <ProxyAllowanceToggle\n        token=\"USDFL\"\n        onlyShowAllowance={true}\n        trackBtnClick={trackBtnClick}\n      />\n      <Grid gridTemplateColumns=\"1fr 1fr\" gridColumnGap=\"s\">\n        <Button className=\"btn\"\n          disabled={!valid}\n          onClick={() => {\n            trackBtnClick('Confirm', {\n              amount: depositAmount,\n              fathom: { id: 'saveDeposit', amount: depositAmount }\n            });\n            deposit();\n          }}\n          data-testid={'deposit-button'}\n        >\n          {lang.actions.deposit}\n        </Button>\n        <Button className=\"btn\"\n          variant=\"secondary-outline\"\n          onClick={() => {\n            trackBtnClick('Cancel');\n            reset();\n          }}\n        >\n          {lang.cancel}\n        </Button>\n      </Grid>\n      <InfoContainer>\n        <Info\n          title={lang.action_sidebar.dai_balance}\n          body={`${safeToFixed(daiBalance, 7)} ${displaySymbol}`}\n        />\n        <Info\n          title={lang.action_sidebar.locked_dsr}\n          body={`${safeToFixed(daiLockedInDsr.toNumber(), 7)} ${displaySymbol}`}\n        />\n      </InfoContainer>\n    </Grid>\n  );\n};\nexport default DsrDeposit;\n"]},"metadata":{},"sourceType":"module"}