{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrWithdraw.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useCallback } from 'react';\nimport { Text, Input, Grid, Button } from '@makerdao/ui-components-core';\nimport Info from './shared/Info';\nimport InfoContainer from './shared/InfoContainer';\nimport useMaker from 'hooks/useMaker';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useValidatedInput from 'hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport ProxyAllowanceToggle from 'components/ProxyAllowanceToggle';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport SetMax from 'components/SetMax';\nimport { BigNumber } from 'bignumber.js';\nimport { safeToFixed } from '../../utils/ui';\nimport { getColor } from '../../styles/theme';\n\nvar DsrWithdraw = function DsrWithdraw(_ref) {\n  var savings = _ref.savings,\n      reset = _ref.reset;\n\n  var _useAnalytics = useAnalytics('Withdraw', 'Sidebar'),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var displaySymbol = USDFL.symbol;\n  var daiLockedInDsr = savings.daiLockedInDsr;\n\n  var _useWalletBalances = useWalletBalances(),\n      daiBalance = _useWalletBalances.USDFL;\n\n  var _useTokenAllowance = useTokenAllowance(USDFL.symbol),\n      hasAllowance = _useTokenAllowance.hasAllowance,\n      hasSufficientAllowance = _useTokenAllowance.hasSufficientAllowance;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      withdrawMaxFlag = _useState2[0],\n      setWithdrawMaxFlag = _useState2[1];\n\n  var _useValidatedInput = useValidatedInput('', {\n    isFloat: true,\n    minFloat: 0.0,\n    maxFloat: daiLockedInDsr && daiLockedInDsr.toNumber(),\n    custom: {\n      allowanceInvalid: function allowanceInvalid(value) {\n        return !hasSufficientAllowance(value);\n      }\n    }\n  }, {\n    maxFloat: function maxFloat() {\n      return lang.formatString(lang.action_sidebar.insufficient_balance, displaySymbol);\n    },\n    allowanceInvalid: function allowanceInvalid() {\n      return lang.formatString(lang.action_sidebar.invalid_allowance, displaySymbol);\n    }\n  }),\n      _useValidatedInput2 = _slicedToArray(_useValidatedInput, 4),\n      withdrawAmount = _useValidatedInput2[0],\n      setWithdrawAmount = _useValidatedInput2[1],\n      onWithdrawAmountChange = _useValidatedInput2[2],\n      withdrawAmountErrors = _useValidatedInput2[3];\n\n  var setWithdrawMax = useCallback(function () {\n    if (daiLockedInDsr && !daiLockedInDsr.eq(0)) {\n      setWithdrawAmount(daiLockedInDsr.toFixed(18).replace(/\\.?0+$/, ''));\n      setWithdrawMaxFlag(true);\n    } else {\n      setWithdrawAmount('');\n    }\n  }, [daiLockedInDsr, setWithdrawAmount]);\n\n  var withdraw = function withdraw() {\n    if (withdrawMaxFlag || new BigNumber(withdrawAmount).eq(daiLockedInDsr)) {\n      maker.service('mcd:savings').exitAll();\n    } else {\n      maker.service('mcd:savings').exit(USDFL(withdrawAmount));\n    }\n\n    reset();\n  };\n\n  var valid = withdrawAmount && !withdrawAmountErrors && hasAllowance;\n  return /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, lang.formatString(lang.action_sidebar.withdraw_title, displaySymbol)), /*#__PURE__*/React.createElement(Text.p, {\n    style: {\n      fontSize: '16px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, lang.formatString(lang.action_sidebar.withdraw_description, displaySymbol)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      color: getColor('whiteText')\n    },\n    disabled: !hasAllowance,\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"0 USDFL\",\n    value: withdrawAmount,\n    onChange: function onChange(e) {\n      if (withdrawMaxFlag) setWithdrawMaxFlag(false);\n      onWithdrawAmountChange(e);\n    },\n    error: withdrawAmountErrors,\n    failureMessage: withdrawAmountErrors,\n    after: /*#__PURE__*/React.createElement(SetMax, {\n      onClick: function onClick() {\n        setWithdrawMax();\n        trackBtnClick('SetMax', {\n          amount: withdrawAmount,\n          setMax: true\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(ProxyAllowanceToggle, {\n    token: \"USDFL\",\n    onlyShowAllowance: true,\n    trackBtnClick: trackBtnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: \"1fr 1fr\",\n    gridColumnGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    disabled: !valid,\n    onClick: function onClick() {\n      trackBtnClick('Confirm', {\n        amount: withdrawAmount,\n        fathom: {\n          id: 'saveWithdraw',\n          amount: withdrawAmount\n        }\n      });\n      withdraw();\n    },\n    \"data-testid\": 'withdraw-button',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, lang.actions.withdraw), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"secondary-outline\",\n    onClick: function onClick() {\n      trackBtnClick('Cancel');\n      reset();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, lang.cancel)), /*#__PURE__*/React.createElement(InfoContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    title: lang.action_sidebar.dai_balance,\n    body: \"\".concat(safeToFixed(daiBalance, 7), \" \").concat(displaySymbol),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    title: lang.action_sidebar.locked_dsr,\n    body: \"\".concat(safeToFixed(daiLockedInDsr.toNumber(), 7), \" \").concat(displaySymbol),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(DsrWithdraw, \"useAnalytics{{ trackBtnClick }}\\nuseLanguage{{ lang }}\\nuseMaker{{ maker }}\\nuseWalletBalances{{ USDFL: daiBalance }}\\nuseTokenAllowance{{ hasAllowance, hasSufficientAllowance }}\\nuseState{[withdrawMaxFlag, setWithdrawMaxFlag](false)}\\nuseValidatedInput{[\\n    withdrawAmount,\\n    setWithdrawAmount,\\n    onWithdrawAmountChange,\\n    withdrawAmountErrors\\n  ]}\\nuseCallback{setWithdrawMax}\", function () {\n  return [useAnalytics, useLanguage, useMaker, useWalletBalances, useTokenAllowance, useValidatedInput];\n});\n\nvar _default = DsrWithdraw;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DsrWithdraw, \"DsrWithdraw\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrWithdraw.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrWithdraw.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/DsrWithdraw.js"],"names":["React","useState","useCallback","Text","Input","Grid","Button","Info","InfoContainer","useMaker","useTokenAllowance","useWalletBalances","useValidatedInput","useLanguage","useAnalytics","ProxyAllowanceToggle","USDFL","SetMax","BigNumber","safeToFixed","getColor","DsrWithdraw","savings","reset","trackBtnClick","lang","maker","displaySymbol","symbol","daiLockedInDsr","daiBalance","hasAllowance","hasSufficientAllowance","withdrawMaxFlag","setWithdrawMaxFlag","isFloat","minFloat","maxFloat","toNumber","custom","allowanceInvalid","value","formatString","action_sidebar","insufficient_balance","invalid_allowance","withdrawAmount","setWithdrawAmount","onWithdrawAmountChange","withdrawAmountErrors","setWithdrawMax","eq","toFixed","replace","withdraw","service","exitAll","exit","valid","fontSize","color","withdraw_title","withdraw_description","e","amount","setMax","fathom","id","actions","cancel","dai_balance","locked_dsr"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Text, Input, Grid, Button } from '@makerdao/ui-components-core';\nimport Info from './shared/Info';\nimport InfoContainer from './shared/InfoContainer';\nimport useMaker from 'hooks/useMaker';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useValidatedInput from 'hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport ProxyAllowanceToggle from 'components/ProxyAllowanceToggle';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport SetMax from 'components/SetMax';\nimport { BigNumber } from 'bignumber.js';\nimport { safeToFixed } from '../../utils/ui';\nimport { getColor } from '../../styles/theme';\n\nconst DsrWithdraw = ({ savings, reset }) => {\n  const { trackBtnClick } = useAnalytics('Withdraw', 'Sidebar');\n  const { lang } = useLanguage();\n  const { maker } = useMaker();\n\n  const displaySymbol = USDFL.symbol;\n\n  const { daiLockedInDsr } = savings;\n  const { USDFL: daiBalance } = useWalletBalances();\n  const { hasAllowance, hasSufficientAllowance } = useTokenAllowance(\n    USDFL.symbol\n  );\n  const [withdrawMaxFlag, setWithdrawMaxFlag] = useState(false);\n\n  const [\n    withdrawAmount,\n    setWithdrawAmount,\n    onWithdrawAmountChange,\n    withdrawAmountErrors\n  ] = useValidatedInput(\n    '',\n    {\n      isFloat: true,\n      minFloat: 0.0,\n      maxFloat: daiLockedInDsr && daiLockedInDsr.toNumber(),\n      custom: {\n        allowanceInvalid: value => !hasSufficientAllowance(value)\n      }\n    },\n    {\n      maxFloat: () =>\n        lang.formatString(\n          lang.action_sidebar.insufficient_balance,\n          displaySymbol\n        ),\n      allowanceInvalid: () =>\n        lang.formatString(lang.action_sidebar.invalid_allowance, displaySymbol)\n    }\n  );\n\n  const setWithdrawMax = useCallback(() => {\n    if (daiLockedInDsr && !daiLockedInDsr.eq(0)) {\n      setWithdrawAmount(daiLockedInDsr.toFixed(18).replace(/\\.?0+$/, ''));\n      setWithdrawMaxFlag(true);\n    } else {\n      setWithdrawAmount('');\n    }\n  }, [daiLockedInDsr, setWithdrawAmount]);\n\n  const withdraw = () => {\n    if (withdrawMaxFlag || new BigNumber(withdrawAmount).eq(daiLockedInDsr)) {\n      maker.service('mcd:savings').exitAll();\n    } else {\n      maker.service('mcd:savings').exit(USDFL(withdrawAmount));\n    }\n    reset();\n  };\n\n  const valid = withdrawAmount && !withdrawAmountErrors && hasAllowance;\n\n  return (\n    <Grid gridRowGap=\"m\">\n      <Grid gridRowGap=\"s\">\n        <Text style={{ fontSize: '20px', color: getColor('whiteText') }}>\n          {lang.formatString(lang.action_sidebar.withdraw_title, displaySymbol)}\n        </Text>\n        <Text.p style={{ fontSize: '16px', color: getColor('greyText') }}>\n          {lang.formatString(\n            lang.action_sidebar.withdraw_description,\n            displaySymbol\n          )}\n        </Text.p>\n        <div className=\"input_border\">\n        <Input\n          style={{ color: getColor('whiteText') }}\n          disabled={!hasAllowance}\n          type=\"number\"\n          min=\"0\"\n          placeholder=\"0 USDFL\"\n          value={withdrawAmount}\n          onChange={e => {\n            if (withdrawMaxFlag) setWithdrawMaxFlag(false);\n            onWithdrawAmountChange(e);\n          }}\n          error={withdrawAmountErrors}\n          failureMessage={withdrawAmountErrors}\n          after={\n            <SetMax\n              onClick={() => {\n                setWithdrawMax();\n                trackBtnClick('SetMax', {\n                  amount: withdrawAmount,\n                  setMax: true\n                });\n              }}\n            />\n          }\n        />\n        </div>\n      </Grid>\n      <ProxyAllowanceToggle\n        token=\"USDFL\"\n        onlyShowAllowance={true}\n        trackBtnClick={trackBtnClick}\n      />\n      <Grid gridTemplateColumns=\"1fr 1fr\" gridColumnGap=\"s\">\n        <Button className=\"btn\"\n          disabled={!valid}\n          onClick={() => {\n            trackBtnClick('Confirm', {\n              amount: withdrawAmount,\n              fathom: { id: 'saveWithdraw', amount: withdrawAmount }\n            });\n            withdraw();\n          }}\n          data-testid={'withdraw-button'}\n        >\n          {lang.actions.withdraw}\n        </Button>\n        <Button className=\"btn\"\n          variant=\"secondary-outline\"\n          onClick={() => {\n            trackBtnClick('Cancel');\n            reset();\n          }}\n        >\n          {lang.cancel}\n        </Button>\n      </Grid>\n      <InfoContainer>\n        <Info\n          title={lang.action_sidebar.dai_balance}\n          body={`${safeToFixed(daiBalance, 7)} ${displaySymbol}`}\n        />\n        <Info\n          title={lang.action_sidebar.locked_dsr}\n          body={`${safeToFixed(daiLockedInDsr.toNumber(), 7)} ${displaySymbol}`}\n        />\n      </InfoContainer>\n    </Grid>\n  );\n};\nexport default DsrWithdraw;\n"]},"metadata":{},"sourceType":"module"}