{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { WAD } from './constants';\nimport BigNumber from 'bignumber.js';\nimport { USDFL } from './index';\n\nvar Auction = /*#__PURE__*/function () {\n  function Auction(ilk, smartContractService) {\n    _classCallCheck(this, Auction);\n\n    switch (ilk) {\n      case USDFL.symbol:\n        this.contract = smartContractService.getContract('MCD_FLAP');\n        break;\n\n      case 'FL':\n        this.contract = smartContractService.getContract('MCD_FLOP');\n        break;\n\n      default:\n        this.contract = smartContractService.getContract('MCD_FLIP_' + ilk.replace(/-/g, '_'));\n    }\n  } // returns time in hours\n\n\n  _createClass(Auction, [{\n    key: \"getMaxBidLifetime\",\n    value: function () {\n      var _getMaxBidLifetime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.contract.ttl();\n\n              case 2:\n                _context.t0 = _context.sent;\n                return _context.abrupt(\"return\", _context.t0 / 3600);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getMaxBidLifetime() {\n        return _getMaxBidLifetime.apply(this, arguments);\n      }\n\n      return getMaxBidLifetime;\n    }() // returns time in days\n\n  }, {\n    key: \"getMaxAuctionDuration\",\n    value: function () {\n      var _getMaxAuctionDuration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.contract.tau();\n\n              case 2:\n                _context2.t0 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t0 / 86400);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getMaxAuctionDuration() {\n        return _getMaxAuctionDuration.apply(this, arguments);\n      }\n\n      return getMaxAuctionDuration;\n    }() // returns decimal representation of minimum percentage increase\n\n  }, {\n    key: \"getMinBidIncrease\",\n    value: function () {\n      var _getMinBidIncrease = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var beg;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.contract.beg();\n\n              case 2:\n                beg = _context3.sent;\n                return _context3.abrupt(\"return\", new BigNumber(beg).div(WAD).minus(1).toNumber());\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getMinBidIncrease() {\n        return _getMinBidIncrease.apply(this, arguments);\n      }\n\n      return getMinBidIncrease;\n    }()\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Auction;\n}();\n\nexport { Auction as default };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Auction, \"Auction\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/Auction.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/Auction.js"],"names":["WAD","BigNumber","USDFL","Auction","ilk","smartContractService","symbol","contract","getContract","replace","ttl","tau","beg","div","minus","toNumber"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,SAAtB;;IAEqBC,O;AACnB,mBAAYC,GAAZ,EAAiBC,oBAAjB,EAAuC;AAAA;;AACrC,YAAQD,GAAR;AACE,WAAKF,KAAK,CAACI,MAAX;AACE,aAAKC,QAAL,GAAgBF,oBAAoB,CAACG,WAArB,CAAiC,UAAjC,CAAhB;AACA;;AACF,WAAK,IAAL;AACE,aAAKD,QAAL,GAAgBF,oBAAoB,CAACG,WAArB,CAAiC,UAAjC,CAAhB;AACA;;AACF;AACE,aAAKD,QAAL,GAAgBF,oBAAoB,CAACG,WAArB,CACd,cAAcJ,GAAG,CAACK,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CADA,CAAhB;AARJ;AAYD,G,CAED;;;;;;;;;;;;uBAEgB,KAAKF,QAAL,CAAcG,GAAd,E;;;;+DAAuB,I;;;;;;;;;;;;;;;QAGvC;;;;;;;;;;;uBAEgB,KAAKH,QAAL,CAAcI,GAAd,E;;;;iEAAuB,K;;;;;;;;;;;;;;;QAGvC;;;;;;;;;;;;uBAEoB,KAAKJ,QAAL,CAAcK,GAAd,E;;;AAAZA,gBAAAA,G;kDAGC,IAAIX,SAAJ,CAAcW,GAAd,EACJC,GADI,CACAb,GADA,EAEJc,KAFI,CAEE,CAFF,EAGJC,QAHI,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA/BUZ,O;;;;;;;;;;0BAAAA,O","sourcesContent":["import { WAD } from './constants';\nimport BigNumber from 'bignumber.js';\nimport { USDFL } from './index';\n\nexport default class Auction {\n  constructor(ilk, smartContractService) {\n    switch (ilk) {\n      case USDFL.symbol:\n        this.contract = smartContractService.getContract('MCD_FLAP');\n        break;\n      case 'FL':\n        this.contract = smartContractService.getContract('MCD_FLOP');\n        break;\n      default:\n        this.contract = smartContractService.getContract(\n          'MCD_FLIP_' + ilk.replace(/-/g, '_')\n        );\n    }\n  }\n\n  // returns time in hours\n  async getMaxBidLifetime() {\n    return (await this.contract.ttl()) / 3600;\n  }\n\n  // returns time in days\n  async getMaxAuctionDuration() {\n    return (await this.contract.tau()) / 86400;\n  }\n\n  // returns decimal representation of minimum percentage increase\n  async getMinBidIncrease() {\n    const beg = await this.contract.beg();\n    // the contract's BigNumber implementation (bn.js) doesn't support decimals,\n    // so we use bignumber.js instead\n    return new BigNumber(beg)\n      .div(WAD)\n      .minus(1)\n      .toNumber();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}