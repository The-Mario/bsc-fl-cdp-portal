{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/pages/Save.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Flex, Grid, Text, Address } from '@makerdao/ui-components-core';\nimport theme from '../styles/theme';\nimport PageContentLayout from 'layouts/PageContentLayout';\nimport LoadingLayout from 'layouts/LoadingLayout';\nimport { ActionButton, ActionContainerRow, CdpViewCard } from 'components/CDPDisplay/subcomponents';\nimport FullScreenAction from 'components/CDPDisplay/FullScreenAction';\nimport History from 'components/CDPDisplay/History';\nimport DSRInfo from 'components/DSRInfo';\nimport useMaker from 'hooks/useMaker';\nimport useLanguage from 'hooks/useLanguage';\nimport useDsrEventHistory from 'hooks/useDsrEventHistory';\nimport useModal from 'hooks/useModal';\nimport useAnalytics from 'hooks/useAnalytics';\nimport useSidebar from 'hooks/useSidebar';\nimport useSavings from 'hooks/useSavings';\nimport useNotification from 'hooks/useNotification';\nimport { watch } from 'hooks/useObservable';\nimport useEmergencyShutdown from 'hooks/useEmergencyShutdown';\nimport { getColor } from 'styles/theme';\nimport { FilledButton } from 'components/Marketing';\nimport { Link } from 'react-navi';\nimport { FeatureFlags } from 'utils/constants';\nimport { NotificationList, SAFETY_LEVELS } from 'utils/constants';\n\nvar _StyledLink = _styled(Link).withConfig({\n  displayName: \"Save___StyledLink\",\n  componentId: \"sc-1uzeewp-0\"\n})({\n  cursor: 'pointer'\n});\n\nfunction Save(_ref) {\n  var _this = this;\n\n  var viewedAddress = _ref.viewedAddress;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      account = _useMaker.account,\n      network = _useMaker.network;\n\n  var _useNotification = useNotification(),\n      addNotification = _useNotification.addNotification,\n      deleteNotifications = _useNotification.deleteNotifications;\n\n  var _useEmergencyShutdown = useEmergencyShutdown(),\n      emergencyShutdownActive = _useEmergencyShutdown.emergencyShutdownActive;\n\n  useEffect(function () {\n    if (account && viewedAddress && viewedAddress !== account.address) {\n      addNotification({\n        id: NotificationList.NON_OVERVIEW_OWNER,\n        content: lang.formatString(lang.notifications.non_savings_owner, /*#__PURE__*/React.createElement(Address, {\n          full: viewedAddress,\n          shorten: true,\n          expandable: false,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        })),\n        level: SAFETY_LEVELS.WARNING\n      });\n    }\n\n    return function () {\n      return deleteNotifications([NotificationList.NON_OVERVIEW_OWNER]);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewedAddress, account]);\n  var viewedProxyAddress = watch.proxyAddress(viewedAddress);\n  var savings = useSavings(viewedAddress);\n\n  var _useAnalytics = useAnalytics('DsrView'),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var _ref2 = FeatureFlags.FF_DSR_HISTORY ? useDsrEventHistory(viewedProxyAddress) // eslint-disable-line react-hooks/rules-of-hooks\n  : {},\n      events = _ref2.events,\n      isLoading = _ref2.isLoading;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOnboarding = _useState2[0],\n      setShowOnboarding = _useState2[1];\n\n  var hideOnboarding = useCallback(function () {\n    setShowOnboarding(false);\n  }, [setShowOnboarding]);\n\n  var _useModal = useModal(),\n      show = _useModal.show;\n\n  var emSize = parseInt(getComputedStyle(document.body).fontSize);\n  var pxBreakpoint = parseInt(theme.breakpoints.l) * emSize;\n  var isMobile = document.documentElement.clientWidth < pxBreakpoint;\n\n  var _useSidebar = useSidebar(),\n      showSidebar = _useSidebar.show;\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      actionShown = _useState4[0],\n      setActionShown = _useState4[1];\n\n  var showAction = function showAction(props) {\n    if (isMobile) {\n      setActionShown(props);\n    } else {\n      showSidebar(props);\n    }\n  };\n\n  var annualDaiSavingsRate = watch.annualDaiSavingsRate();\n  return /*#__PURE__*/React.createElement(PageContentLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, viewedProxyAddress === undefined ? /*#__PURE__*/React.createElement(LoadingLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }) : viewedProxyAddress === null && showOnboarding ? /*#__PURE__*/React.createElement(Flex, {\n    height: \"70vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, viewedAddress === (account === null || account === void 0 ? void 0 : account.address) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('greyText')\n    },\n    mb: \"26px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, lang.formatString(lang.save.get_started_title, \"\".concat(annualDaiSavingsRate ? annualDaiSavingsRate.toFixed(2) : '0.00', \"%\"))), /*#__PURE__*/React.createElement(_StyledLink, {\n    disabled: emergencyShutdownActive,\n    p: \"s\",\n    onClick: function onClick() {\n      return show({\n        modalType: 'dsrdeposit',\n        modalTemplate: 'fullscreen',\n        modalProps: {\n          hideOnboarding: hideOnboarding\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FilledButton, {\n    className: \"button_p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, lang.actions.get_started))) : /*#__PURE__*/React.createElement(Text.p, {\n    mb: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, lang.save.no_savings)) : savings && savings.fetchedSavings ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '24px',\n      color: getColor('whiteText')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, lang.save.title), /*#__PURE__*/React.createElement(Grid, {\n    py: \"m\",\n    gridColumnGap: \"l\",\n    gridTemplateColumns: {\n      0: '1fr',\n      1: '1fr',\n      xl: '1fr 1fr'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DSRInfo, {\n    key: \"\".concat(viewedAddress, \".\").concat(savings.proxyAddress),\n    isMobile: isMobile,\n    savings: savings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CdpViewCard, {\n    title: lang.save.deposit_withdraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ActionContainerRow, {\n    title: lang.save.deposit_btn_cta,\n    button: /*#__PURE__*/React.createElement(ActionButton, {\n      \"data-testid\": 'sidebar-deposit-button',\n      disabled: !account || viewedAddress !== (account === null || account === void 0 ? void 0 : account.address) || emergencyShutdownActive,\n      onClick: function onClick() {\n        trackBtnClick('Deposit');\n        showAction({\n          type: 'dsrdeposit',\n          props: {\n            savings: savings\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, lang.actions.deposit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ActionContainerRow, {\n    title: lang.save.withdraw_btn_cta,\n    button: /*#__PURE__*/React.createElement(ActionButton, {\n      disabled: !account || viewedAddress !== (account === null || account === void 0 ? void 0 : account.address),\n      \"data-testid\": 'sidebar-withdraw-button',\n      onClick: function onClick() {\n        trackBtnClick('Withdraw');\n        showAction({\n          type: 'dsrwithdraw',\n          props: {\n            savings: savings\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, lang.actions.withdraw),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }))), FeatureFlags.FF_DSR_HISTORY && /*#__PURE__*/React.createElement(History, {\n    title: lang.save.tx_history,\n    rows: events,\n    network: network,\n    isLoading: isLoading,\n    emptyTableMessage: lang.save.start_earning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(LoadingLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), actionShown && /*#__PURE__*/React.createElement(FullScreenAction, Object.assign({}, actionShown, {\n    reset: function reset() {\n      return setActionShown(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  })));\n}\n\n__signature__(Save, \"useLanguage{{ lang }}\\nuseMaker{{ account, network }}\\nuseNotification{{ addNotification, deleteNotifications }}\\nuseEmergencyShutdown{{ emergencyShutdownActive }}\\nuseEffect{}\\nuseSavings{savings}\\nuseAnalytics{{ trackBtnClick }}\\nuseDsrEventHistory{}\\nuseState{[showOnboarding, setShowOnboarding](true)}\\nuseCallback{hideOnboarding}\\nuseModal{{ show }}\\nuseSidebar{{ show: showSidebar }}\\nuseState{[actionShown, setActionShown](null)}\", function () {\n  return [useLanguage, useMaker, useNotification, useEmergencyShutdown, useSavings, useAnalytics, useDsrEventHistory, useModal, useSidebar];\n});\n\nvar _default = Save;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Save, \"Save\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/pages/Save.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/pages/Save.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/pages/Save.js"],"names":["React","useCallback","useState","useEffect","Flex","Grid","Text","Address","theme","PageContentLayout","LoadingLayout","ActionButton","ActionContainerRow","CdpViewCard","FullScreenAction","History","DSRInfo","useMaker","useLanguage","useDsrEventHistory","useModal","useAnalytics","useSidebar","useSavings","useNotification","watch","useEmergencyShutdown","getColor","FilledButton","Link","FeatureFlags","NotificationList","SAFETY_LEVELS","cursor","Save","viewedAddress","lang","account","network","addNotification","deleteNotifications","emergencyShutdownActive","address","id","NON_OVERVIEW_OWNER","content","formatString","notifications","non_savings_owner","level","WARNING","viewedProxyAddress","proxyAddress","savings","trackBtnClick","FF_DSR_HISTORY","events","isLoading","showOnboarding","setShowOnboarding","hideOnboarding","show","emSize","parseInt","getComputedStyle","document","body","fontSize","pxBreakpoint","breakpoints","l","isMobile","documentElement","clientWidth","showSidebar","actionShown","setActionShown","showAction","props","annualDaiSavingsRate","undefined","color","save","get_started_title","toFixed","modalType","modalTemplate","modalProps","actions","get_started","no_savings","fetchedSavings","title","xl","deposit_withdraw","deposit_btn_cta","type","deposit","withdraw_btn_cta","withdraw","tx_history","start_earning"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport {\n  Flex,\n  Grid,\n  Text,\n  Address\n} from '@makerdao/ui-components-core';\n\nimport theme from '../styles/theme';\nimport PageContentLayout from 'layouts/PageContentLayout';\nimport LoadingLayout from 'layouts/LoadingLayout';\nimport {\n  ActionButton,\n  ActionContainerRow,\n  CdpViewCard\n} from 'components/CDPDisplay/subcomponents';\nimport FullScreenAction from 'components/CDPDisplay/FullScreenAction';\nimport History from 'components/CDPDisplay/History';\nimport DSRInfo from 'components/DSRInfo';\nimport useMaker from 'hooks/useMaker';\nimport useLanguage from 'hooks/useLanguage';\nimport useDsrEventHistory from 'hooks/useDsrEventHistory';\nimport useModal from 'hooks/useModal';\nimport useAnalytics from 'hooks/useAnalytics';\nimport useSidebar from 'hooks/useSidebar';\nimport useSavings from 'hooks/useSavings';\nimport useNotification from 'hooks/useNotification';\nimport { watch } from 'hooks/useObservable';\nimport useEmergencyShutdown from 'hooks/useEmergencyShutdown';\nimport { getColor } from 'styles/theme';\nimport { FilledButton } from 'components/Marketing';\nimport { Link } from 'react-navi';\n\nimport { FeatureFlags } from 'utils/constants';\nimport { NotificationList, SAFETY_LEVELS } from 'utils/constants';\n\nfunction Save({ viewedAddress }) {\n  const { lang } = useLanguage();\n  const { account, network } = useMaker();\n  const { addNotification, deleteNotifications } = useNotification();\n  const { emergencyShutdownActive } = useEmergencyShutdown();\n\n  useEffect(() => {\n    if (account && viewedAddress && viewedAddress !== account.address) {\n      addNotification({\n        id: NotificationList.NON_OVERVIEW_OWNER,\n        content: lang.formatString(\n          lang.notifications.non_savings_owner,\n          <Address full={viewedAddress} shorten={true} expandable={false} />\n        ),\n        level: SAFETY_LEVELS.WARNING\n      });\n    }\n    return () => deleteNotifications([NotificationList.NON_OVERVIEW_OWNER]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [viewedAddress, account]);\n\n  const viewedProxyAddress = watch.proxyAddress(viewedAddress);\n  const savings = useSavings(viewedAddress);\n\n  const { trackBtnClick } = useAnalytics('DsrView');\n\n  const { events, isLoading } = FeatureFlags.FF_DSR_HISTORY\n    ? useDsrEventHistory(viewedProxyAddress) // eslint-disable-line react-hooks/rules-of-hooks\n    : {};\n\n  const [showOnboarding, setShowOnboarding] = useState(true);\n  const hideOnboarding = useCallback(() => {\n    setShowOnboarding(false);\n  }, [setShowOnboarding]);\n\n  const { show } = useModal();\n\n  const emSize = parseInt(getComputedStyle(document.body).fontSize);\n  const pxBreakpoint = parseInt(theme.breakpoints.l) * emSize;\n  const isMobile = document.documentElement.clientWidth < pxBreakpoint;\n\n  const { show: showSidebar } = useSidebar();\n  const [actionShown, setActionShown] = useState(null);\n  const showAction = props => {\n    if (isMobile) {\n      setActionShown(props);\n    } else {\n      showSidebar(props);\n    }\n  };\n  const annualDaiSavingsRate = watch.annualDaiSavingsRate();\n  return (\n    <PageContentLayout>\n      {viewedProxyAddress === undefined ? (\n        <LoadingLayout />\n      ) : viewedProxyAddress === null && showOnboarding ? (\n        <Flex\n          height=\"70vh\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n        >\n          {viewedAddress === account?.address ? (\n            <>\n              <Text\n                style={{ fontSize: '20px', color: getColor('greyText') }}\n                mb=\"26px\"\n              >\n                {lang.formatString(\n                  lang.save.get_started_title,\n                  `${\n                    annualDaiSavingsRate\n                      ? annualDaiSavingsRate.toFixed(2)\n                      : '0.00'\n                  }%`\n                )}\n              </Text>\n              <Link\n                disabled={emergencyShutdownActive}\n                p=\"s\"\n                css={{ cursor: 'pointer' }}\n                onClick={() =>\n                  show({\n                    modalType: 'dsrdeposit',\n                    modalTemplate: 'fullscreen',\n                    modalProps: { hideOnboarding }\n                  })\n                }\n              >\n                <FilledButton className=\"button_p\">{lang.actions.get_started}</FilledButton>\n              </Link>\n            </>\n          ) : (\n            <Text.p mb=\"s\">{lang.save.no_savings}</Text.p>\n          )}\n        </Flex>\n      ) : savings && savings.fetchedSavings ? (\n        <>\n          <Text style={{ fontSize: '24px', color: getColor('whiteText') }}>\n            {lang.save.title}\n          </Text>\n          <Grid\n            py=\"m\"\n            gridColumnGap=\"l\"\n            gridTemplateColumns={{\n              0: '1fr',\n              1: '1fr',\n              xl: '1fr 1fr'\n            }}\n          >\n            <DSRInfo\n              key={`${viewedAddress}.${savings.proxyAddress}`}\n              isMobile={isMobile}\n              savings={savings}\n            />\n            <CdpViewCard title={lang.save.deposit_withdraw}>\n              <ActionContainerRow\n                title={lang.save.deposit_btn_cta}\n                button={\n                  <ActionButton\n                    data-testid={'sidebar-deposit-button'}\n                    disabled={\n                      !account ||\n                      viewedAddress !== account?.address ||\n                      emergencyShutdownActive\n                    }\n                    onClick={() => {\n                      trackBtnClick('Deposit');\n                      showAction({ type: 'dsrdeposit', props: { savings } });\n                    }}\n                  >\n                    {lang.actions.deposit}\n                  </ActionButton>\n                }\n              />\n              <ActionContainerRow\n                title={lang.save.withdraw_btn_cta}\n                button={\n                  <ActionButton\n                    disabled={!account || viewedAddress !== account?.address}\n                    data-testid={'sidebar-withdraw-button'}\n                    onClick={() => {\n                      trackBtnClick('Withdraw');\n                      showAction({ type: 'dsrwithdraw', props: { savings } });\n                    }}\n                  >\n                    {lang.actions.withdraw}\n                  </ActionButton>\n                }\n              />\n            </CdpViewCard>\n          </Grid>\n          {FeatureFlags.FF_DSR_HISTORY && (\n            <History\n              title={lang.save.tx_history}\n              rows={events}\n              network={network}\n              isLoading={isLoading}\n              emptyTableMessage={lang.save.start_earning}\n            />\n          )}\n        </>\n      ) : (\n        <LoadingLayout />\n      )}\n      {actionShown && (\n        <FullScreenAction {...actionShown} reset={() => setActionShown(null)} />\n      )}\n    </PageContentLayout>\n  );\n}\n\nexport default Save;\n"]},"metadata":{},"sourceType":"module"}