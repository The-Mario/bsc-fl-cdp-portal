{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"Invalid address for proxyOwner: \", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"Invalid address for userVaultsList: \", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"Invalid address for savings: \", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"Invalid address for daiLockedInDsr: \", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"Invalid address for walletRewardAmount: \", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { createCurrency, createCurrencyRatio } from '@makerdao/currency';\nimport { collateralValue as calcCollateralValue, collateralAmountByValue as calcCollateralAmountByValue, daiAvailable as calcDaiAvailable, collateralizationRatio as calcCollateralizationRatio, liquidationPrice as calcLiquidationPrice, minSafeCollateralAmount as calcMinSafeCollateralAmount } from '../math';\nimport { USD, USDFL, DSR_USDFL, FL, defaultCdpTypes, ALLOWANCE_AMOUNT } from '../';\nimport BigNumber from 'bignumber.js';\nimport { DEBT_CEILING, RATIO_DAI_USD, LIQUIDATION_RATIO, PRICE_WITH_SAFETY_MARGIN, COLLATERAL_TYPE_PRICE, VAULT_TYPE, VAULT_ADDRESS, VAULT_OWNER, VAULT_EXTERNAL_OWNER, ENCUMBERED_COLLATERAL, ENCUMBERED_DEBT, SAVINGS_DAI, TOTAL_SAVINGS_DAI, PROXY_ADDRESS, DEBT_SCALING_FACTOR, DEBT_VALUE, COLLATERALIZATION_RATIO, COLLATERAL_AMOUNT, COLLATERAL_VALUE, LIQUIDATION_PRICE, DAI_AVAILABLE, MIN_SAFE_COLLATERAL_AMOUNT, COLLATERAL_AVAILABLE_AMOUNT, COLLATERAL_AVAILABLE_VALUE, UNLOCKED_COLLATERAL, SAVINGS_RATE_ACCUMULATOR, DAI_LOCKED_IN_DSR, TOKEN_BALANCE, LIQUIDATION_PENALTY, ANNUAL_STABILITY_FEE, TOKEN_ALLOWANCE, DEBT_FLOOR, PROXY_OWNER, ANNUAL_DAI_SAVINGS_RATE, DAI_SAVINGS_RATE, DATE_EARNINGS_LAST_ACCRUED, USER_VAULT_IDS, USER_VAULT_ADDRESSES, USER_VAULT_TYPES, VAULT, TOTAL_ENCUMBERED_DEBT, ADAPTER_BALANCE, COLLATERAL_DEBT, COLLATERAL_TYPE_COLLATERALIZATION, COLLATERAL_TYPE_DATA, COLLATERAL_DEBT_AVAILABLE, REWARD_TOKEN_ALLOWANCE_BY_ADDRESS, REWARD_PAIRINFO, REWARD_WALLET_REWARD_PAIR_INFO, REWARD_PAIRINFO_GEM, REWARD_PAIRINFO_AVAIL, REWARD_PAIRINFO_AVAILVALUE, REWARD_PAIRINFO_LOCKED, REWARD_PAIRINFO_LOCKEDVALUE, REWARD_AMOUNT, REWARD_GOV_TOKEN_CONTRACT, REWARD_REWARD_CONTRACT, USER_VAULTS_LOCKED_VALUE, REWARD_FAIR_DISTRIBUTION_MAX_VALUE, REWARD_FAIR_DISTRIBUTION_TIME, REWARD_START_TIME, REWARD_GET_AMOUNTS_OUT, REWARD_GET_AMOUNTS_IN, REWARD_GET_UNI_PRICE, REWARD_GET_FL_PRICE, REWARD_GET_APY_BY_PRICE, REWARD_GET_APY, REWARD_GET_PROFIT } from './_constants';\nimport { validateAddress, validateVaultId } from './_validators';\nexport var collateralTypePrice = {\n  generate: function generate(collateralTypeName) {\n    return {\n      dependencies: [[RATIO_DAI_USD], [PRICE_WITH_SAFETY_MARGIN, collateralTypeName], [LIQUIDATION_RATIO, collateralTypeName]],\n      computed: function computed(ratioDaiUsd, priceWithSafetyMargin, liquidationRatio) {\n        var _collateralTypeName$s = collateralTypeName.split('-'),\n            _collateralTypeName$s2 = _slicedToArray(_collateralTypeName$s, 1),\n            symbol = _collateralTypeName$s2[0];\n\n        var currency = createCurrency(symbol);\n        var ratio = createCurrencyRatio(USD, currency);\n        var price = priceWithSafetyMargin.times(ratioDaiUsd.toNumber()).times(liquidationRatio.toNumber());\n        return ratio(price);\n      }\n    };\n  }\n};\nexport var collateralTypesPrices = {\n  generate: function generate(types) {\n    return {\n      dependencies: function dependencies() {\n        return types.map(function (collateralTypeName) {\n          return [COLLATERAL_TYPE_PRICE, collateralTypeName];\n        });\n      },\n      computed: function computed() {\n        for (var _len = arguments.length, prices = new Array(_len), _key = 0; _key < _len; _key++) {\n          prices[_key] = arguments[_key];\n        }\n\n        return prices;\n      }\n    };\n  }\n};\nexport var defaultCollateralTypesPrices = {\n  generate: function generate() {\n    return {\n      dependencies: function dependencies() {\n        return defaultCdpTypes.map(function (_ref) {\n          var collateralTypeName = _ref.ilk;\n          return [COLLATERAL_TYPE_PRICE, collateralTypeName];\n        });\n      },\n      computed: function computed() {\n        for (var _len2 = arguments.length, prices = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          prices[_key2] = arguments[_key2];\n        }\n\n        return prices;\n      }\n    };\n  }\n};\nexport var vaultTypeAndAddress = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[VAULT_TYPE, id], [VAULT_ADDRESS, id]],\n      computed: function computed(vaultType, vaultAddress) {\n        return [vaultType, vaultAddress];\n      }\n    };\n  }\n};\nexport var vaultExternalOwner = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[PROXY_OWNER, [VAULT_OWNER, id]]],\n      computed: function computed(owner) {\n        return owner;\n      }\n    };\n  }\n};\nexport var vaultCollateralAndDebt = {\n  generate: function generate(vaultType, vaultAddress) {\n    return {\n      dependencies: [[ENCUMBERED_COLLATERAL, vaultType, vaultAddress], [ENCUMBERED_DEBT, vaultType, vaultAddress]],\n      computed: function computed(encumberedCollateral, encumberedDebt) {\n        return [encumberedCollateral, encumberedDebt];\n      }\n    };\n  }\n}; // TODO This should also account for unencumbered collateral which is collateral on the\n// join adapter\n\nexport var collateralAmount = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[VAULT_TYPE, id], [ENCUMBERED_COLLATERAL, [VAULT_TYPE, id], [VAULT_ADDRESS, id]]],\n      computed: function computed(vaultType, encumberedCollateral) {\n        var _vaultType$split = vaultType.split('-'),\n            _vaultType$split2 = _slicedToArray(_vaultType$split, 1),\n            symbol = _vaultType$split2[0];\n\n        var currency = createCurrency(symbol);\n        return currency(encumberedCollateral);\n      }\n    };\n  }\n};\nexport var collateralValue = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]], [COLLATERAL_AMOUNT, id]],\n      computed: function computed(collateralTypePrice, collateralAmount) {\n        return calcCollateralValue(collateralAmount, collateralTypePrice);\n      }\n    };\n  }\n};\nexport var debtValue = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[ENCUMBERED_DEBT, [VAULT_TYPE, id], [VAULT_ADDRESS, id]], [DEBT_SCALING_FACTOR, [VAULT_TYPE, id]]],\n      computed: function computed(encumberedDebt, debtScalingFactor) {\n        return USDFL(encumberedDebt).times(debtScalingFactor);\n      }\n    };\n  }\n};\nexport var collateralizationRatio = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[COLLATERAL_VALUE, id], [DEBT_VALUE, id]],\n      computed: function computed(collateralValue, debtValue) {\n        return calcCollateralizationRatio(collateralValue, debtValue);\n      }\n    };\n  }\n};\nexport var liquidationPrice = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[COLLATERAL_AMOUNT, id], [DEBT_VALUE, id], [LIQUIDATION_RATIO, [VAULT_TYPE, id]]],\n      computed: function computed(collateralAmount, debtValue, liquidationRatio) {\n        return calcLiquidationPrice(collateralAmount, debtValue, liquidationRatio);\n      }\n    };\n  }\n};\nexport var daiAvailable = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[COLLATERAL_VALUE, id], [DEBT_VALUE, id], [LIQUIDATION_RATIO, [VAULT_TYPE, id]]],\n      computed: function computed(collateralValue, debtValue, liquidationRatio) {\n        return calcDaiAvailable(collateralValue, debtValue, liquidationRatio);\n      }\n    };\n  }\n};\nexport var minSafeCollateralAmount = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[DEBT_VALUE, id], [LIQUIDATION_RATIO, [VAULT_TYPE, id]], [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]]],\n      computed: function computed(debtValue, liquidationRatio, price) {\n        return calcMinSafeCollateralAmount(debtValue, liquidationRatio, price);\n      }\n    };\n  }\n};\nexport var collateralAvailableAmount = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[COLLATERAL_AMOUNT, id], [MIN_SAFE_COLLATERAL_AMOUNT, id]],\n      computed: function computed(collateralAmount, minSafeCollateralAmount) {\n        if (minSafeCollateralAmount.toBigNumber().gt(collateralAmount.toBigNumber())) {\n          return createCurrency(collateralAmount.symbol)(0);\n        } else {\n          return collateralAmount.minus(minSafeCollateralAmount);\n        }\n      }\n    };\n  }\n};\nexport var collateralAvailableValue = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[COLLATERAL_AVAILABLE_AMOUNT, id], [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]]],\n      computed: function computed(collateralAvailableAmount, collateralTypePrice) {\n        return calcCollateralValue(collateralAvailableAmount, collateralTypePrice);\n      }\n    };\n  }\n};\nexport var collateralTypeData = {\n  generate: function generate(collateralTypeName) {\n    return {\n      dependencies: [[COLLATERAL_TYPE_PRICE, collateralTypeName], [ANNUAL_STABILITY_FEE, collateralTypeName], [LIQUIDATION_PENALTY, collateralTypeName], [LIQUIDATION_RATIO, collateralTypeName], [PRICE_WITH_SAFETY_MARGIN, collateralTypeName], [DEBT_FLOOR, collateralTypeName], [COLLATERAL_DEBT_AVAILABLE, collateralTypeName]],\n      computed: function computed(collateralTypePrice, annualStabilityFee, liquidationPenalty, liquidationRatio, priceWithSafetyMargin, debtFloor, collateralDebtAvailable) {\n        return {\n          symbol: collateralTypeName,\n          collateralTypePrice: collateralTypePrice,\n          annualStabilityFee: annualStabilityFee,\n          liquidationRatio: liquidationRatio,\n          liquidationPenalty: liquidationPenalty,\n          priceWithSafetyMargin: priceWithSafetyMargin,\n          debtFloor: debtFloor,\n          collateralDebtAvailable: collateralDebtAvailable,\n          calculateCollateralizationRatio: function calculateCollateralizationRatio(collateralAmount, debtValue) {\n            return calcCollateralizationRatio(this.collateralTypePrice.times(collateralAmount), debtValue).times(100).toNumber();\n          },\n          calculateliquidationPrice: function calculateliquidationPrice(collateralAmount, debtValue) {\n            return calcLiquidationPrice(collateralAmount, debtValue, this.liquidationRatio);\n          },\n          calculateMaxDai: function calculateMaxDai(collateralAmount) {\n            return priceWithSafetyMargin.times(collateralAmount);\n          },\n          collateralValueForAmount: function collateralValueForAmount(amount) {\n            return calcCollateralValue(amount, collateralTypePrice.toBigNumber());\n          },\n          collateralAmountByValue: function collateralAmountByValue(value) {\n            return calcCollateralAmountByValue(value, collateralTypePrice.toBigNumber());\n          }\n        };\n      }\n    };\n  }\n};\nexport var collateralTypesData = {\n  generate: function generate(types) {\n    return {\n      dependencies: function dependencies() {\n        return types.map(function (collateralTypeName) {\n          return [COLLATERAL_TYPE_DATA, collateralTypeName];\n        });\n      },\n      computed: function computed() {\n        for (var _len3 = arguments.length, collateralTypes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          collateralTypes[_key3] = arguments[_key3];\n        }\n\n        return collateralTypes;\n      }\n    };\n  }\n};\nexport var vault = {\n  generate: function generate(id) {\n    return {\n      dependencies: [[VAULT_TYPE, id], [VAULT_ADDRESS, id], [VAULT_OWNER, id], [VAULT_EXTERNAL_OWNER, id], [ENCUMBERED_COLLATERAL, [VAULT_TYPE, id], [VAULT_ADDRESS, id]], [ENCUMBERED_DEBT, [VAULT_TYPE, id], [VAULT_ADDRESS, id]], [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]], [DEBT_VALUE, id], [COLLATERALIZATION_RATIO, id], [COLLATERAL_AMOUNT, id], [COLLATERAL_VALUE, id], [LIQUIDATION_PRICE, id], [DAI_AVAILABLE, id], [COLLATERAL_AVAILABLE_AMOUNT, id], [COLLATERAL_AVAILABLE_VALUE, id], [UNLOCKED_COLLATERAL, [VAULT_TYPE, id], [VAULT_ADDRESS, id]], [LIQUIDATION_RATIO, [VAULT_TYPE, id]], [LIQUIDATION_PENALTY, [VAULT_TYPE, id]], [ANNUAL_STABILITY_FEE, [VAULT_TYPE, id]], [DEBT_FLOOR, [VAULT_TYPE, id]], [MIN_SAFE_COLLATERAL_AMOUNT, id], [COLLATERAL_DEBT_AVAILABLE, [VAULT_TYPE, id]]],\n      computed: function computed(vaultType, vaultAddress, ownerAddress, externalOwnerAddress, encumberedCollateral, encumberedDebt, collateralTypePrice, debtValue, collateralizationRatio, collateralAmount, collateralValue, liquidationPrice, daiAvailable, collateralAvailableAmount, collateralAvailableValue, unlockedCollateral, liquidationRatio, liquidationPenalty, annualStabilityFee, debtFloor, minSafeCollateralAmount, collateralDebtAvailable) {\n        return {\n          id: parseInt(id),\n          vaultType: vaultType,\n          vaultAddress: vaultAddress,\n          ownerAddress: ownerAddress,\n          externalOwnerAddress: externalOwnerAddress,\n          encumberedCollateral: encumberedCollateral,\n          encumberedDebt: encumberedDebt,\n          collateralTypePrice: collateralTypePrice,\n          debtValue: debtValue,\n          collateralizationRatio: collateralizationRatio,\n          collateralAmount: collateralAmount,\n          collateralValue: collateralValue,\n          liquidationPrice: liquidationPrice,\n          daiAvailable: daiAvailable,\n          collateralAvailableAmount: collateralAvailableAmount,\n          collateralAvailableValue: collateralAvailableValue,\n          unlockedCollateral: unlockedCollateral,\n          liquidationRatio: liquidationRatio,\n          liquidationPenalty: liquidationPenalty,\n          annualStabilityFee: annualStabilityFee,\n          debtFloor: debtFloor,\n          minSafeCollateralAmount: minSafeCollateralAmount,\n          collateralDebtAvailable: collateralDebtAvailable,\n          calculateLiquidationPrice: function calculateLiquidationPrice() {\n            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref2$collateralAmoun = _ref2.collateralAmount,\n                collateralAmount = _ref2$collateralAmoun === void 0 ? this.collateralAmount : _ref2$collateralAmoun,\n                _ref2$debtValue = _ref2.debtValue,\n                debtValue = _ref2$debtValue === void 0 ? this.debtValue : _ref2$debtValue,\n                _ref2$liquidationRati = _ref2.liquidationRatio,\n                liquidationRatio = _ref2$liquidationRati === void 0 ? this.liquidationRatio : _ref2$liquidationRati;\n\n            if (!collateralAmount || !debtValue || !liquidationRatio) return;\n            return calcLiquidationPrice(collateralAmount, debtValue, liquidationRatio);\n          },\n          collateralValueForAmount: function collateralValueForAmount(amount) {\n            return calcCollateralValue(amount, collateralTypePrice.toBigNumber());\n          },\n          collateralAmountByValue: function collateralAmountByValue(value) {\n            return calcCollateralAmountByValue(value, collateralTypePrice.toBigNumber());\n          },\n          calculateCollateralizationRatio: function calculateCollateralizationRatio() {\n            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref3$collateralValue = _ref3.collateralValue,\n                collateralValue = _ref3$collateralValue === void 0 ? this.collateralValue : _ref3$collateralValue,\n                _ref3$debtValue = _ref3.debtValue,\n                debtValue = _ref3$debtValue === void 0 ? this.debtValue : _ref3$debtValue;\n\n            if (!collateralValue || !debtValue) return;\n            return calcCollateralizationRatio(collateralValue, debtValue).times(100).toNumber();\n          }\n        };\n      }\n    };\n  },\n  validate: {\n    args: validateVaultId\n  }\n};\nexport var walletRewardAmount = {\n  generate: function generate(address) {\n    return {\n      dependencies: [[REWARD_AMOUNT, [PROXY_ADDRESS, address]]],\n      computed: function computed(amount) {\n        return amount;\n      }\n    };\n  },\n  validate: {\n    args: validateAddress(_templateObject(), 'address')\n  }\n};\nexport var rewardContract = {\n  generate: function generate(hiRisk) {\n    return {\n      dependencies: function dependencies(_ref4) {\n        var get = _ref4.get;\n        return [[/*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var contractAddress;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return get('smartContract').getContractAddress(hiRisk ? 'FL_REWARDER_GOV_USD_HOLDER' : 'FL_REWARDER_STABLES_HOLDER');\n\n                case 2:\n                  contractAddress = _context.sent;\n                  return _context.abrupt(\"return\", contractAddress);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))]];\n      },\n      computed: function computed(address) {\n        return address;\n      }\n    };\n  }\n};\nexport var walletRewardPairInfo = {\n  generate: function generate(name, address, hiRisk) {\n    return {\n      dependencies: [[REWARD_PAIRINFO_GEM, name, address, hiRisk], [REWARD_PAIRINFO_AVAIL, name, address, hiRisk], [REWARD_PAIRINFO_AVAILVALUE, name, address, hiRisk], [REWARD_PAIRINFO_LOCKED, name, address, hiRisk], [REWARD_PAIRINFO_LOCKEDVALUE, name, address, hiRisk], [REWARD_TOKEN_ALLOWANCE_BY_ADDRESS, address, [REWARD_REWARD_CONTRACT, hiRisk], [REWARD_PAIRINFO_GEM, name, address, hiRisk]]],\n      computed: function computed(gem, avail, availvalue, locked, lockedvalue, allowance) {\n        return {\n          name: name,\n          hiRisk: hiRisk,\n          gem: gem,\n          avail: avail,\n          availvalue: availvalue,\n          locked: locked,\n          lockedvalue: lockedvalue,\n          allowance: allowance\n        };\n      }\n    };\n  }\n};\nexport var walletRewardPairInfos = {\n  generate: function generate(rewardList, address, hiRisk) {\n    return {\n      dependencies: rewardList.map(function (name) {\n        return [REWARD_WALLET_REWARD_PAIR_INFO, name, address, hiRisk];\n      }),\n      computed: function computed() {\n        for (var _len4 = arguments.length, infos = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          infos[_key4] = arguments[_key4];\n        }\n\n        return infos;\n      }\n    };\n  }\n};\nexport var daiLockedInDsr = {\n  generate: function generate(address) {\n    return {\n      dependencies: [[SAVINGS_DAI, [PROXY_ADDRESS, address]], [SAVINGS_RATE_ACCUMULATOR]],\n      computed: function computed(savingsDai, savingsRateAccumulator) {\n        return DSR_USDFL(savingsDai.times(savingsRateAccumulator));\n      }\n    };\n  },\n  validate: {\n    args: validateAddress(_templateObject2(), 'address')\n  }\n};\nexport var totalDaiLockedInDsr = {\n  generate: function generate() {\n    return {\n      dependencies: [[TOTAL_SAVINGS_DAI], [SAVINGS_RATE_ACCUMULATOR]],\n      computed: function computed(totalSavingsDai, savingsRateAccumulator) {\n        return DSR_USDFL(totalSavingsDai.times(savingsRateAccumulator));\n      }\n    };\n  }\n};\nexport var balance = {\n  generate: function generate(symbol, address) {\n    return {\n      dependencies: function dependencies() {\n        if (symbol === 'DSR-USDFL') {\n          return [[DAI_LOCKED_IN_DSR, address]];\n        }\n\n        return [[TOKEN_BALANCE, address, symbol]];\n      },\n      computed: function computed(v) {\n        return v;\n      }\n    };\n  }\n};\nexport var allowance = {\n  generate: function generate(symbol, address) {\n    return {\n      dependencies: [symbol === 'ETH' ? [[ALLOWANCE_AMOUNT]] : [TOKEN_ALLOWANCE, address, [PROXY_ADDRESS, address], symbol]],\n      computed: function computed(v) {\n        return v.isEqualTo(ALLOWANCE_AMOUNT);\n      }\n    };\n  }\n};\nexport var savings = {\n  generate: function generate(address) {\n    return {\n      dependencies: [[ANNUAL_DAI_SAVINGS_RATE], [DAI_SAVINGS_RATE], [DATE_EARNINGS_LAST_ACCRUED], [DAI_LOCKED_IN_DSR, address], [PROXY_ADDRESS, address], [SAVINGS_RATE_ACCUMULATOR], [SAVINGS_DAI, [PROXY_ADDRESS, address]]],\n      computed: function computed(annualDaiSavingsRate, daiSavingsRate, dateEarningsLastAccrued, daiLockedInDsr, proxyAddress, savingsRateAccumulator, savingsDai) {\n        return {\n          annualDaiSavingsRate: annualDaiSavingsRate,\n          daiSavingsRate: daiSavingsRate,\n          dateEarningsLastAccrued: dateEarningsLastAccrued,\n          daiLockedInDsr: daiLockedInDsr,\n          proxyAddress: proxyAddress,\n          savingsRateAccumulator: savingsRateAccumulator,\n          savingsDai: savingsDai\n        };\n      }\n    };\n  },\n  validate: {\n    args: validateAddress(_templateObject3(), 'address')\n  }\n};\nexport var userVaultsList = {\n  generate: function generate(address) {\n    return {\n      dependencies: function dependencies(_ref6) {\n        var get = _ref6.get;\n        var cdpManagerAddress = get('smartContract').getContractAddress('CDP_MANAGER');\n        return [[USER_VAULT_IDS, cdpManagerAddress, [PROXY_ADDRESS, address]], [USER_VAULT_ADDRESSES, cdpManagerAddress, [PROXY_ADDRESS, address]], [USER_VAULT_TYPES, cdpManagerAddress, [PROXY_ADDRESS, address]]];\n      },\n      computed: function computed(ids, addresses, types) {\n        return ids.reduce(function (acc, id, idx) {\n          return [].concat(_toConsumableArray(acc), [{\n            vaultId: id,\n            vaultAddress: addresses[idx],\n            vaultType: types[idx]\n          }]);\n        }, []);\n      }\n    };\n  },\n  validate: {\n    args: validateAddress(_templateObject4(), 'address')\n  }\n};\nexport var userVaultsData = {\n  generate: function generate(ids) {\n    return {\n      dependencies: ids.map(function (id) {\n        return [VAULT, id];\n      }),\n      computed: function computed() {\n        for (var _len5 = arguments.length, vaults = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          vaults[_key5] = arguments[_key5];\n        }\n\n        return vaults;\n      }\n    };\n  }\n};\nexport var userVaultsLockedValue = {\n  generate: function generate(ids) {\n    return {\n      dependencies: ids.map(function (id) {\n        return [VAULT, id];\n      }),\n      computed: function computed() {\n        for (var _len6 = arguments.length, vaults = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          vaults[_key6] = arguments[_key6];\n        }\n\n        return vaults.reduce(function (acc, _ref7) {\n          var collateralValue = _ref7.collateralValue;\n          return collateralValue ? acc.plus(collateralValue.toBigNumber()) : acc;\n        }, BigNumber(0));\n      }\n    };\n  }\n};\nexport var fairDistribAllowToLockValue = {\n  generate: function generate(ids, addValue, curTime) {\n    return {\n      dependencies: function dependencies() {\n        return [[REWARD_FAIR_DISTRIBUTION_MAX_VALUE], [REWARD_FAIR_DISTRIBUTION_TIME], [REWARD_START_TIME]].concat(ids.map(function (id) {\n          return [VAULT, id];\n        }));\n      },\n      computed: function computed(maxValue, duration, startTime) {\n        console.log('fairDistribAllowToLockValue time', curTime, duration.plus(startTime).toNumber(), duration.toNumber(), startTime.toNumber());\n        if (BigNumber(curTime) > duration.plus(startTime)) return true;\n\n        for (var _len7 = arguments.length, vaults = new Array(_len7 > 3 ? _len7 - 3 : 0), _key7 = 3; _key7 < _len7; _key7++) {\n          vaults[_key7 - 3] = arguments[_key7];\n        }\n\n        var locked = vaults.reduce(function (acc, _ref8) {\n          var collateralValue = _ref8.collateralValue;\n          return collateralValue ? acc.plus(collateralValue.toBigNumber()) : acc;\n        }, BigNumber(0));\n        console.log('fairDistribAllowToLockValue', BigNumber(addValue).toNumber(), locked.toNumber(), maxValue.toNumber());\n        return BigNumber(addValue).plus(locked) < maxValue - 100;\n      }\n    };\n  }\n};\nexport var collateralDebt = {\n  generate: function generate(collateralTypeName) {\n    return {\n      dependencies: [[TOTAL_ENCUMBERED_DEBT, collateralTypeName], [DEBT_SCALING_FACTOR, collateralTypeName]],\n      computed: function computed(totalEncumberedDebt, debtScalingFactor) {\n        return USDFL(totalEncumberedDebt).times(debtScalingFactor);\n      }\n    };\n  }\n};\nexport var collateralDebtCeilings = {\n  generate: function generate(cdpTypes) {\n    return {\n      dependencies: function dependencies() {\n        return cdpTypes.map(function (type) {\n          return [DEBT_CEILING, type];\n        });\n      },\n      computed: function computed() {\n        for (var _len8 = arguments.length, ceilings = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n          ceilings[_key8] = arguments[_key8];\n        }\n\n        return cdpTypes.reduce(function (acc, cdpType, idx) {\n          return _objectSpread({}, acc, _defineProperty({}, cdpType, ceilings[idx]));\n        }, {});\n      }\n    };\n  }\n};\nexport var collateralDebtAvailable = {\n  generate: function generate(collateralTypeName) {\n    return {\n      dependencies: [[COLLATERAL_DEBT, collateralTypeName], [DEBT_CEILING, collateralTypeName]],\n      computed: function computed(collateralDebt, debtCeiling) {\n        collateralDebt = collateralDebt.toBigNumber().decimalPlaces(18, BigNumber.ROUND_DOWN);\n        return debtCeiling.minus(collateralDebt);\n      }\n    };\n  }\n};\nexport var collateralTypeCollateralization = {\n  generate: function generate(collateralTypeName) {\n    var percentage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return {\n      dependencies: [[COLLATERAL_DEBT, collateralTypeName], [COLLATERAL_TYPE_PRICE, collateralTypeName], [ADAPTER_BALANCE, collateralTypeName]],\n      computed: function computed(debt, price, amount) {\n        var collateral = calcCollateralValue(amount, price.toBigNumber());\n        var ratio = calcCollateralizationRatio(collateral, debt.toBigNumber()).times(100);\n        return percentage ? ratio : {\n          collateralValue: collateral,\n          debtValue: debt\n        };\n      }\n    };\n  }\n};\nexport var systemCollateralization = {\n  generate: function generate(vaultTypes) {\n    return {\n      dependencies: vaultTypes.map(function (vaultType) {\n        return [COLLATERAL_TYPE_COLLATERALIZATION, vaultType, false];\n      }),\n      computed: function computed() {\n        for (var _len9 = arguments.length, collateralizationValues = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n          collateralizationValues[_key9] = arguments[_key9];\n        }\n\n        var _collateralizationVal = collateralizationValues.reduce(function (acc, _ref9) {\n          var collateralValue = _ref9.collateralValue,\n              debtValue = _ref9.debtValue;\n          return {\n            totalCollateralValue: acc.totalCollateralValue.plus(collateralValue.toBigNumber()),\n            totalDebtValue: acc.totalDebtValue.plus(debtValue.toBigNumber())\n          };\n        }, {\n          totalCollateralValue: BigNumber(0),\n          totalDebtValue: BigNumber(0)\n        }),\n            totalCollateralValue = _collateralizationVal.totalCollateralValue,\n            totalDebtValue = _collateralizationVal.totalDebtValue;\n\n        return calcCollateralizationRatio(totalCollateralValue, totalDebtValue).times(100);\n      }\n    };\n  }\n};\nexport var getUniPrice = {\n  generate: function generate(t0, t1, amount) {\n    return {\n      dependencies: [[REWARD_GET_AMOUNTS_OUT, amount, t1, t0], [REWARD_GET_AMOUNTS_IN, amount, t0, t1]],\n      computed: function computed(amountOut, amountIn) {\n        return (amountOut + amountIn) / (2.0 * amount);\n      }\n    };\n  }\n};\nexport var getFLPrice = {\n  generate: function generate() {\n    var inWei = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return {\n      dependencies: function dependencies(_ref10) {\n        var get = _ref10.get;\n        var cdpFLAddress = get('smartContract').getContractAddress('MCD_GOV');\n        var cdpUSDFLAddress = get('smartContract').getContractAddress('MCD_DAI');\n        return [[REWARD_GET_UNI_PRICE, cdpUSDFLAddress, cdpFLAddress, 1000]];\n      },\n      computed: function computed(price) {\n        return inWei ? BigNumber(price).shiftedBy(18).toFixed() : price;\n      }\n    };\n  }\n};\nexport var getProfit = {\n  generate: function generate(amount, hiRisk) {\n    return {\n      dependencies: [[REWARD_GET_APY_BY_PRICE, hiRisk, amount, [REWARD_GET_FL_PRICE, false]]],\n      computed: function computed(apy) {\n        return apy;\n      }\n    };\n  }\n};\nexport var getAPY = {\n  generate: function generate(hiRisk) {\n    return {\n      dependencies: [[REWARD_GET_PROFIT, 10000, hiRisk]],\n      computed: function computed(apy) {\n        var f = hiRisk ? 1.91 : 1.0; //handle X2 boost for new risk pools\n\n        return apy * f / 10000.0;\n      }\n    };\n  }\n};\nexport var proxyOwner = {\n  generate: function generate(address) {\n    return {\n      dependencies: function dependencies(_ref11) {\n        var get = _ref11.get;\n        return [[/*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return get('smartContract').get('transactionManager').get('proxy').getOwner(address);\n\n                case 3:\n                  return _context2.abrupt(\"return\", _context2.sent);\n\n                case 6:\n                  _context2.prev = 6;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  return _context2.abrupt(\"return\", null);\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 6]]);\n        }))]];\n      },\n      computed: function computed(owner) {\n        return owner;\n      }\n    };\n  },\n  validate: {\n    args: validateAddress(_templateObject5(), 'address')\n  }\n};\nvar _default = {\n  collateralTypePrice: collateralTypePrice,\n  collateralTypesPrices: collateralTypesPrices,\n  defaultCollateralTypesPrices: defaultCollateralTypesPrices,\n  vaultTypeAndAddress: vaultTypeAndAddress,\n  vaultExternalOwner: vaultExternalOwner,\n  vaultCollateralAndDebt: vaultCollateralAndDebt,\n  vault: vault,\n  collateralAmount: collateralAmount,\n  collateralValue: collateralValue,\n  debtValue: debtValue,\n  collateralizationRatio: collateralizationRatio,\n  liquidationPrice: liquidationPrice,\n  daiAvailable: daiAvailable,\n  minSafeCollateralAmount: minSafeCollateralAmount,\n  collateralAvailableAmount: collateralAvailableAmount,\n  collateralAvailableValue: collateralAvailableValue,\n  daiLockedInDsr: daiLockedInDsr,\n  totalDaiLockedInDsr: totalDaiLockedInDsr,\n  balance: balance,\n  allowance: allowance,\n  savings: savings,\n  userVaultsList: userVaultsList,\n  userVaultsData: userVaultsData,\n  collateralDebt: collateralDebt,\n  collateralTypeCollateralization: collateralTypeCollateralization,\n  systemCollateralization: systemCollateralization,\n  proxyOwner: proxyOwner,\n  collateralTypeData: collateralTypeData,\n  collateralTypesData: collateralTypesData,\n  collateralDebtCeilings: collateralDebtCeilings,\n  collateralDebtAvailable: collateralDebtAvailable,\n  walletRewardAmount: walletRewardAmount,\n  walletRewardPairInfo: walletRewardPairInfo,\n  walletRewardPairInfos: walletRewardPairInfos,\n  rewardContract: rewardContract,\n  userVaultsLockedValue: userVaultsLockedValue,\n  fairDistribAllowToLockValue: fairDistribAllowToLockValue,\n  getUniPrice: getUniPrice,\n  getFLPrice: getFLPrice,\n  getAPY: getAPY,\n  getProfit: getProfit\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(collateralTypePrice, \"collateralTypePrice\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralTypesPrices, \"collateralTypesPrices\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(defaultCollateralTypesPrices, \"defaultCollateralTypesPrices\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(vaultTypeAndAddress, \"vaultTypeAndAddress\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(vaultExternalOwner, \"vaultExternalOwner\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(vaultCollateralAndDebt, \"vaultCollateralAndDebt\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralAmount, \"collateralAmount\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralValue, \"collateralValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(debtValue, \"debtValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralizationRatio, \"collateralizationRatio\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(liquidationPrice, \"liquidationPrice\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(daiAvailable, \"daiAvailable\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(minSafeCollateralAmount, \"minSafeCollateralAmount\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralAvailableAmount, \"collateralAvailableAmount\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralAvailableValue, \"collateralAvailableValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralTypeData, \"collateralTypeData\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralTypesData, \"collateralTypesData\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(vault, \"vault\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(walletRewardAmount, \"walletRewardAmount\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(rewardContract, \"rewardContract\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(walletRewardPairInfo, \"walletRewardPairInfo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(walletRewardPairInfos, \"walletRewardPairInfos\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(daiLockedInDsr, \"daiLockedInDsr\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(totalDaiLockedInDsr, \"totalDaiLockedInDsr\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(balance, \"balance\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(allowance, \"allowance\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(savings, \"savings\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(userVaultsList, \"userVaultsList\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(userVaultsData, \"userVaultsData\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(userVaultsLockedValue, \"userVaultsLockedValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(fairDistribAllowToLockValue, \"fairDistribAllowToLockValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralDebt, \"collateralDebt\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralDebtCeilings, \"collateralDebtCeilings\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralDebtAvailable, \"collateralDebtAvailable\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(collateralTypeCollateralization, \"collateralTypeCollateralization\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(systemCollateralization, \"systemCollateralization\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(getUniPrice, \"getUniPrice\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(getFLPrice, \"getFLPrice\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(getProfit, \"getProfit\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(getAPY, \"getAPY\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(proxyOwner, \"proxyOwner\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/computed.js"],"names":["createCurrency","createCurrencyRatio","collateralValue","calcCollateralValue","collateralAmountByValue","calcCollateralAmountByValue","daiAvailable","calcDaiAvailable","collateralizationRatio","calcCollateralizationRatio","liquidationPrice","calcLiquidationPrice","minSafeCollateralAmount","calcMinSafeCollateralAmount","USD","USDFL","DSR_USDFL","FL","defaultCdpTypes","ALLOWANCE_AMOUNT","BigNumber","DEBT_CEILING","RATIO_DAI_USD","LIQUIDATION_RATIO","PRICE_WITH_SAFETY_MARGIN","COLLATERAL_TYPE_PRICE","VAULT_TYPE","VAULT_ADDRESS","VAULT_OWNER","VAULT_EXTERNAL_OWNER","ENCUMBERED_COLLATERAL","ENCUMBERED_DEBT","SAVINGS_DAI","TOTAL_SAVINGS_DAI","PROXY_ADDRESS","DEBT_SCALING_FACTOR","DEBT_VALUE","COLLATERALIZATION_RATIO","COLLATERAL_AMOUNT","COLLATERAL_VALUE","LIQUIDATION_PRICE","DAI_AVAILABLE","MIN_SAFE_COLLATERAL_AMOUNT","COLLATERAL_AVAILABLE_AMOUNT","COLLATERAL_AVAILABLE_VALUE","UNLOCKED_COLLATERAL","SAVINGS_RATE_ACCUMULATOR","DAI_LOCKED_IN_DSR","TOKEN_BALANCE","LIQUIDATION_PENALTY","ANNUAL_STABILITY_FEE","TOKEN_ALLOWANCE","DEBT_FLOOR","PROXY_OWNER","ANNUAL_DAI_SAVINGS_RATE","DAI_SAVINGS_RATE","DATE_EARNINGS_LAST_ACCRUED","USER_VAULT_IDS","USER_VAULT_ADDRESSES","USER_VAULT_TYPES","VAULT","TOTAL_ENCUMBERED_DEBT","ADAPTER_BALANCE","COLLATERAL_DEBT","COLLATERAL_TYPE_COLLATERALIZATION","COLLATERAL_TYPE_DATA","COLLATERAL_DEBT_AVAILABLE","REWARD_TOKEN_ALLOWANCE_BY_ADDRESS","REWARD_PAIRINFO","REWARD_WALLET_REWARD_PAIR_INFO","REWARD_PAIRINFO_GEM","REWARD_PAIRINFO_AVAIL","REWARD_PAIRINFO_AVAILVALUE","REWARD_PAIRINFO_LOCKED","REWARD_PAIRINFO_LOCKEDVALUE","REWARD_AMOUNT","REWARD_GOV_TOKEN_CONTRACT","REWARD_REWARD_CONTRACT","USER_VAULTS_LOCKED_VALUE","REWARD_FAIR_DISTRIBUTION_MAX_VALUE","REWARD_FAIR_DISTRIBUTION_TIME","REWARD_START_TIME","REWARD_GET_AMOUNTS_OUT","REWARD_GET_AMOUNTS_IN","REWARD_GET_UNI_PRICE","REWARD_GET_FL_PRICE","REWARD_GET_APY_BY_PRICE","REWARD_GET_APY","REWARD_GET_PROFIT","validateAddress","validateVaultId","collateralTypePrice","generate","collateralTypeName","dependencies","computed","ratioDaiUsd","priceWithSafetyMargin","liquidationRatio","split","symbol","currency","ratio","price","times","toNumber","collateralTypesPrices","types","map","prices","defaultCollateralTypesPrices","ilk","vaultTypeAndAddress","id","vaultType","vaultAddress","vaultExternalOwner","owner","vaultCollateralAndDebt","encumberedCollateral","encumberedDebt","collateralAmount","debtValue","debtScalingFactor","collateralAvailableAmount","toBigNumber","gt","minus","collateralAvailableValue","collateralTypeData","annualStabilityFee","liquidationPenalty","debtFloor","collateralDebtAvailable","calculateCollateralizationRatio","calculateliquidationPrice","calculateMaxDai","collateralValueForAmount","amount","value","collateralTypesData","collateralTypes","vault","ownerAddress","externalOwnerAddress","unlockedCollateral","parseInt","calculateLiquidationPrice","validate","args","walletRewardAmount","address","rewardContract","hiRisk","get","getContractAddress","contractAddress","walletRewardPairInfo","name","gem","avail","availvalue","locked","lockedvalue","allowance","walletRewardPairInfos","rewardList","infos","daiLockedInDsr","savingsDai","savingsRateAccumulator","totalDaiLockedInDsr","totalSavingsDai","balance","v","isEqualTo","savings","annualDaiSavingsRate","daiSavingsRate","dateEarningsLastAccrued","proxyAddress","userVaultsList","cdpManagerAddress","ids","addresses","reduce","acc","idx","vaultId","userVaultsData","vaults","userVaultsLockedValue","plus","fairDistribAllowToLockValue","addValue","curTime","concat","maxValue","duration","startTime","console","log","collateralDebt","totalEncumberedDebt","collateralDebtCeilings","cdpTypes","type","ceilings","cdpType","debtCeiling","decimalPlaces","ROUND_DOWN","collateralTypeCollateralization","percentage","debt","collateral","systemCollateralization","vaultTypes","collateralizationValues","totalCollateralValue","totalDebtValue","getUniPrice","t0","t1","amountOut","amountIn","getFLPrice","inWei","cdpFLAddress","cdpUSDFLAddress","shiftedBy","toFixed","getProfit","apy","getAPY","f","proxyOwner","getOwner"],"mappings":"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","sourcesContent":["import { createCurrency, createCurrencyRatio } from '@makerdao/currency';\nimport {\n  collateralValue as calcCollateralValue,\n  collateralAmountByValue as calcCollateralAmountByValue,\n  daiAvailable as calcDaiAvailable,\n  collateralizationRatio as calcCollateralizationRatio,\n  liquidationPrice as calcLiquidationPrice,\n  minSafeCollateralAmount as calcMinSafeCollateralAmount\n} from '../math';\nimport {\n  USD,\n  USDFL,\n  DSR_USDFL,\n  FL,\n  defaultCdpTypes,\n  ALLOWANCE_AMOUNT\n} from '../';\nimport BigNumber from 'bignumber.js';\nimport {\n  DEBT_CEILING,\n  RATIO_DAI_USD,\n  LIQUIDATION_RATIO,\n  PRICE_WITH_SAFETY_MARGIN,\n  COLLATERAL_TYPE_PRICE,\n  VAULT_TYPE,\n  VAULT_ADDRESS,\n  VAULT_OWNER,\n  VAULT_EXTERNAL_OWNER,\n  ENCUMBERED_COLLATERAL,\n  ENCUMBERED_DEBT,\n  SAVINGS_DAI,\n  TOTAL_SAVINGS_DAI,\n  PROXY_ADDRESS,\n  DEBT_SCALING_FACTOR,\n  DEBT_VALUE,\n  COLLATERALIZATION_RATIO,\n  COLLATERAL_AMOUNT,\n  COLLATERAL_VALUE,\n  LIQUIDATION_PRICE,\n  DAI_AVAILABLE,\n  MIN_SAFE_COLLATERAL_AMOUNT,\n  COLLATERAL_AVAILABLE_AMOUNT,\n  COLLATERAL_AVAILABLE_VALUE,\n  UNLOCKED_COLLATERAL,\n  SAVINGS_RATE_ACCUMULATOR,\n  DAI_LOCKED_IN_DSR,\n  TOKEN_BALANCE,\n  LIQUIDATION_PENALTY,\n  ANNUAL_STABILITY_FEE,\n  TOKEN_ALLOWANCE,\n  DEBT_FLOOR,\n  PROXY_OWNER,\n  ANNUAL_DAI_SAVINGS_RATE,\n  DAI_SAVINGS_RATE,\n  DATE_EARNINGS_LAST_ACCRUED,\n  USER_VAULT_IDS,\n  USER_VAULT_ADDRESSES,\n  USER_VAULT_TYPES,\n  VAULT,\n  TOTAL_ENCUMBERED_DEBT,\n  ADAPTER_BALANCE,\n  COLLATERAL_DEBT,\n  COLLATERAL_TYPE_COLLATERALIZATION,\n  COLLATERAL_TYPE_DATA,\n  COLLATERAL_DEBT_AVAILABLE,\n  REWARD_TOKEN_ALLOWANCE_BY_ADDRESS,\n  REWARD_PAIRINFO,\n  REWARD_WALLET_REWARD_PAIR_INFO,\n  REWARD_PAIRINFO_GEM,\n  REWARD_PAIRINFO_AVAIL,\n  REWARD_PAIRINFO_AVAILVALUE,\n  REWARD_PAIRINFO_LOCKED,\n  REWARD_PAIRINFO_LOCKEDVALUE,\n  REWARD_AMOUNT,\n  REWARD_GOV_TOKEN_CONTRACT,\n  REWARD_REWARD_CONTRACT,\n  USER_VAULTS_LOCKED_VALUE,\n  REWARD_FAIR_DISTRIBUTION_MAX_VALUE,\n  REWARD_FAIR_DISTRIBUTION_TIME,\n  REWARD_START_TIME,\n  REWARD_GET_AMOUNTS_OUT,\n  REWARD_GET_AMOUNTS_IN,\n  REWARD_GET_UNI_PRICE,\n  REWARD_GET_FL_PRICE,\n  REWARD_GET_APY_BY_PRICE,\n  REWARD_GET_APY,\n  REWARD_GET_PROFIT\n} from './_constants';\nimport { validateAddress, validateVaultId } from './_validators';\n\nexport const collateralTypePrice = {\n  generate: collateralTypeName => ({\n    dependencies: [\n      [RATIO_DAI_USD],\n      [PRICE_WITH_SAFETY_MARGIN, collateralTypeName],\n      [LIQUIDATION_RATIO, collateralTypeName]\n    ],\n    computed: (ratioDaiUsd, priceWithSafetyMargin, liquidationRatio) => {\n      const [symbol] = collateralTypeName.split('-');\n      const currency = createCurrency(symbol);\n      const ratio = createCurrencyRatio(USD, currency);\n      const price = priceWithSafetyMargin\n        .times(ratioDaiUsd.toNumber())\n        .times(liquidationRatio.toNumber());\n      return ratio(price);\n    }\n  })\n};\n\nexport const collateralTypesPrices = {\n  generate: types => ({\n    dependencies: () =>\n      types.map(collateralTypeName => [\n        COLLATERAL_TYPE_PRICE,\n        collateralTypeName\n      ]),\n    computed: (...prices) => {\n      return prices;\n    }\n  })\n};\n\nexport const defaultCollateralTypesPrices = {\n  generate: () => ({\n    dependencies: () =>\n      defaultCdpTypes.map(({ ilk: collateralTypeName }) => [\n        COLLATERAL_TYPE_PRICE,\n        collateralTypeName\n      ]),\n    computed: (...prices) => prices\n  })\n};\n\nexport const vaultTypeAndAddress = {\n  generate: id => ({\n    dependencies: [\n      [VAULT_TYPE, id],\n      [VAULT_ADDRESS, id]\n    ],\n    computed: (vaultType, vaultAddress) => [vaultType, vaultAddress]\n  })\n};\n\nexport const vaultExternalOwner = {\n  generate: id => ({\n    dependencies: [[PROXY_OWNER, [VAULT_OWNER, id]]],\n    computed: owner => owner\n  })\n};\n\nexport const vaultCollateralAndDebt = {\n  generate: (vaultType, vaultAddress) => ({\n    dependencies: [\n      [ENCUMBERED_COLLATERAL, vaultType, vaultAddress],\n      [ENCUMBERED_DEBT, vaultType, vaultAddress]\n    ],\n    computed: (encumberedCollateral, encumberedDebt) => [\n      encumberedCollateral,\n      encumberedDebt\n    ]\n  })\n};\n\n// TODO This should also account for unencumbered collateral which is collateral on the\n// join adapter\nexport const collateralAmount = {\n  generate: id => ({\n    dependencies: [\n      [VAULT_TYPE, id],\n      [ENCUMBERED_COLLATERAL, [VAULT_TYPE, id], [VAULT_ADDRESS, id]]\n    ],\n    computed: (vaultType, encumberedCollateral) => {\n      const [symbol] = vaultType.split('-');\n      const currency = createCurrency(symbol);\n      return currency(encumberedCollateral);\n    }\n  })\n};\n\nexport const collateralValue = {\n  generate: id => ({\n    dependencies: [\n      [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]],\n      [COLLATERAL_AMOUNT, id]\n    ],\n    computed: (collateralTypePrice, collateralAmount) =>\n      calcCollateralValue(collateralAmount, collateralTypePrice)\n  })\n};\n\nexport const debtValue = {\n  generate: id => ({\n    dependencies: [\n      [ENCUMBERED_DEBT, [VAULT_TYPE, id], [VAULT_ADDRESS, id]],\n      [DEBT_SCALING_FACTOR, [VAULT_TYPE, id]]\n    ],\n    computed: (encumberedDebt, debtScalingFactor) => {\n      return USDFL(encumberedDebt).times(debtScalingFactor);\n    }\n  })\n};\n\nexport const collateralizationRatio = {\n  generate: id => ({\n    dependencies: [\n      [COLLATERAL_VALUE, id],\n      [DEBT_VALUE, id]\n    ],\n    computed: (collateralValue, debtValue) =>\n      calcCollateralizationRatio(collateralValue, debtValue)\n  })\n};\n\nexport const liquidationPrice = {\n  generate: id => ({\n    dependencies: [\n      [COLLATERAL_AMOUNT, id],\n      [DEBT_VALUE, id],\n      [LIQUIDATION_RATIO, [VAULT_TYPE, id]]\n    ],\n    computed: (collateralAmount, debtValue, liquidationRatio) =>\n      calcLiquidationPrice(collateralAmount, debtValue, liquidationRatio)\n  })\n};\n\nexport const daiAvailable = {\n  generate: id => ({\n    dependencies: [\n      [COLLATERAL_VALUE, id],\n      [DEBT_VALUE, id],\n      [LIQUIDATION_RATIO, [VAULT_TYPE, id]]\n    ],\n    computed: (collateralValue, debtValue, liquidationRatio) =>\n      calcDaiAvailable(collateralValue, debtValue, liquidationRatio)\n  })\n};\n\nexport const minSafeCollateralAmount = {\n  generate: id => ({\n    dependencies: [\n      [DEBT_VALUE, id],\n      [LIQUIDATION_RATIO, [VAULT_TYPE, id]],\n      [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]]\n    ],\n    computed: (debtValue, liquidationRatio, price) =>\n      calcMinSafeCollateralAmount(debtValue, liquidationRatio, price)\n  })\n};\n\nexport const collateralAvailableAmount = {\n  generate: id => ({\n    dependencies: [\n      [COLLATERAL_AMOUNT, id],\n      [MIN_SAFE_COLLATERAL_AMOUNT, id]\n    ],\n    computed: (collateralAmount, minSafeCollateralAmount) => {\n      if (\n        minSafeCollateralAmount.toBigNumber().gt(collateralAmount.toBigNumber())\n      ) {\n        return createCurrency(collateralAmount.symbol)(0);\n      } else {\n        return collateralAmount.minus(minSafeCollateralAmount);\n      }\n    }\n  })\n};\n\nexport const collateralAvailableValue = {\n  generate: id => ({\n    dependencies: [\n      [COLLATERAL_AVAILABLE_AMOUNT, id],\n      [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]]\n    ],\n    computed: (collateralAvailableAmount, collateralTypePrice) =>\n      calcCollateralValue(collateralAvailableAmount, collateralTypePrice)\n  })\n};\n\nexport const collateralTypeData = {\n  generate: collateralTypeName => ({\n    dependencies: [\n      [COLLATERAL_TYPE_PRICE, collateralTypeName],\n      [ANNUAL_STABILITY_FEE, collateralTypeName],\n      [LIQUIDATION_PENALTY, collateralTypeName],\n      [LIQUIDATION_RATIO, collateralTypeName],\n      [PRICE_WITH_SAFETY_MARGIN, collateralTypeName],\n      [DEBT_FLOOR, collateralTypeName],\n      [COLLATERAL_DEBT_AVAILABLE, collateralTypeName]\n    ],\n    computed: (\n      collateralTypePrice,\n      annualStabilityFee,\n      liquidationPenalty,\n      liquidationRatio,\n      priceWithSafetyMargin,\n      debtFloor,\n      collateralDebtAvailable\n    ) => ({\n      symbol: collateralTypeName,\n      collateralTypePrice,\n      annualStabilityFee,\n      liquidationRatio,\n      liquidationPenalty,\n      priceWithSafetyMargin,\n      debtFloor,\n      collateralDebtAvailable,\n      calculateCollateralizationRatio(collateralAmount, debtValue) {\n        return calcCollateralizationRatio(\n          this.collateralTypePrice.times(collateralAmount),\n          debtValue\n        )\n          .times(100)\n          .toNumber();\n      },\n      calculateliquidationPrice(collateralAmount, debtValue) {\n        return calcLiquidationPrice(\n          collateralAmount,\n          debtValue,\n          this.liquidationRatio\n        );\n      },\n      calculateMaxDai(collateralAmount) {\n        return priceWithSafetyMargin.times(collateralAmount);\n      },\n      collateralValueForAmount(amount) {\n        return calcCollateralValue(amount, collateralTypePrice.toBigNumber());\n      },\n      collateralAmountByValue(value) {\n        return calcCollateralAmountByValue(\n          value,\n          collateralTypePrice.toBigNumber()\n        );\n      }\n    })\n  })\n};\n\nexport const collateralTypesData = {\n  generate: types => ({\n    dependencies: () =>\n      types.map(collateralTypeName => [\n        COLLATERAL_TYPE_DATA,\n        collateralTypeName\n      ]),\n    computed: (...collateralTypes) => collateralTypes\n  })\n};\n\nexport const vault = {\n  generate: id => ({\n    dependencies: [\n      [VAULT_TYPE, id],\n      [VAULT_ADDRESS, id],\n      [VAULT_OWNER, id],\n      [VAULT_EXTERNAL_OWNER, id],\n      [ENCUMBERED_COLLATERAL, [VAULT_TYPE, id], [VAULT_ADDRESS, id]],\n      [ENCUMBERED_DEBT, [VAULT_TYPE, id], [VAULT_ADDRESS, id]],\n      [COLLATERAL_TYPE_PRICE, [VAULT_TYPE, id]],\n      [DEBT_VALUE, id],\n      [COLLATERALIZATION_RATIO, id],\n      [COLLATERAL_AMOUNT, id],\n      [COLLATERAL_VALUE, id],\n      [LIQUIDATION_PRICE, id],\n      [DAI_AVAILABLE, id],\n      [COLLATERAL_AVAILABLE_AMOUNT, id],\n      [COLLATERAL_AVAILABLE_VALUE, id],\n      [UNLOCKED_COLLATERAL, [VAULT_TYPE, id], [VAULT_ADDRESS, id]],\n      [LIQUIDATION_RATIO, [VAULT_TYPE, id]],\n      [LIQUIDATION_PENALTY, [VAULT_TYPE, id]],\n      [ANNUAL_STABILITY_FEE, [VAULT_TYPE, id]],\n      [DEBT_FLOOR, [VAULT_TYPE, id]],\n      [MIN_SAFE_COLLATERAL_AMOUNT, id],\n      [COLLATERAL_DEBT_AVAILABLE, [VAULT_TYPE, id]]\n    ],\n    computed: (\n      vaultType,\n      vaultAddress,\n      ownerAddress,\n      externalOwnerAddress,\n      encumberedCollateral,\n      encumberedDebt,\n      collateralTypePrice,\n      debtValue,\n      collateralizationRatio,\n      collateralAmount,\n      collateralValue,\n      liquidationPrice,\n      daiAvailable,\n      collateralAvailableAmount,\n      collateralAvailableValue,\n      unlockedCollateral,\n      liquidationRatio,\n      liquidationPenalty,\n      annualStabilityFee,\n      debtFloor,\n      minSafeCollateralAmount,\n      collateralDebtAvailable\n    ) => ({\n      id: parseInt(id),\n      vaultType,\n      vaultAddress,\n      ownerAddress,\n      externalOwnerAddress,\n      encumberedCollateral,\n      encumberedDebt,\n      collateralTypePrice,\n      debtValue,\n      collateralizationRatio,\n      collateralAmount,\n      collateralValue,\n      liquidationPrice,\n      daiAvailable,\n      collateralAvailableAmount,\n      collateralAvailableValue,\n      unlockedCollateral,\n      liquidationRatio,\n      liquidationPenalty,\n      annualStabilityFee,\n      debtFloor,\n      minSafeCollateralAmount,\n      collateralDebtAvailable,\n      calculateLiquidationPrice({\n        collateralAmount = this.collateralAmount,\n        debtValue = this.debtValue,\n        liquidationRatio = this.liquidationRatio\n      } = {}) {\n        if (!collateralAmount || !debtValue || !liquidationRatio) return;\n        return calcLiquidationPrice(\n          collateralAmount,\n          debtValue,\n          liquidationRatio\n        );\n      },\n      collateralValueForAmount(amount) {\n        return calcCollateralValue(amount, collateralTypePrice.toBigNumber());\n      },\n      collateralAmountByValue(value) {\n        return calcCollateralAmountByValue(\n          value,\n          collateralTypePrice.toBigNumber()\n        );\n      },\n      calculateCollateralizationRatio({\n        collateralValue = this.collateralValue,\n        debtValue = this.debtValue\n      } = {}) {\n        if (!collateralValue || !debtValue) return;\n        return calcCollateralizationRatio(collateralValue, debtValue)\n          .times(100)\n          .toNumber();\n      }\n    })\n  }),\n  validate: {\n    args: validateVaultId\n  }\n};\n\nexport const walletRewardAmount = {\n  generate: address => ({\n    dependencies: [[REWARD_AMOUNT, [PROXY_ADDRESS, address]]],\n    computed: amount => {\n      return amount;\n    }\n  }),\n  validate: {\n    args: validateAddress`Invalid address for walletRewardAmount: ${'address'}`\n  }\n};\n\nexport const rewardContract = {\n  generate: hiRisk => ({\n    dependencies: ({ get }) => [\n      [\n        async () => {\n          const contractAddress = await get('smartContract').getContractAddress(\n            hiRisk ? 'FL_REWARDER_GOV_USD_HOLDER' : 'FL_REWARDER_STABLES_HOLDER'\n          );\n          return contractAddress;\n        }\n      ]\n    ],\n    computed: address => address\n  })\n};\n\nexport const walletRewardPairInfo = {\n  generate: (name, address, hiRisk) => ({\n    dependencies: [\n      [REWARD_PAIRINFO_GEM, name, address, hiRisk],\n      [REWARD_PAIRINFO_AVAIL, name, address, hiRisk],\n      [REWARD_PAIRINFO_AVAILVALUE, name, address, hiRisk],\n      [REWARD_PAIRINFO_LOCKED, name, address, hiRisk],\n      [REWARD_PAIRINFO_LOCKEDVALUE, name, address, hiRisk],\n      [\n        REWARD_TOKEN_ALLOWANCE_BY_ADDRESS,\n        address,\n        [REWARD_REWARD_CONTRACT, hiRisk],\n        [REWARD_PAIRINFO_GEM, name, address, hiRisk]\n      ]\n    ],\n\n    computed: (gem, avail, availvalue, locked, lockedvalue, allowance) => {\n      return {\n        name,\n        hiRisk,\n        gem,\n        avail,\n        availvalue,\n        locked,\n        lockedvalue,\n        allowance\n      };\n    }\n  })\n};\n\nexport const walletRewardPairInfos = {\n  generate: (rewardList, address, hiRisk) => ({\n    dependencies: rewardList.map(name => [\n      REWARD_WALLET_REWARD_PAIR_INFO,\n      name,\n      address,\n      hiRisk\n    ]),\n    computed: (...infos) => infos\n  })\n};\n\nexport const daiLockedInDsr = {\n  generate: address => ({\n    dependencies: [\n      [SAVINGS_DAI, [PROXY_ADDRESS, address]],\n      [SAVINGS_RATE_ACCUMULATOR]\n    ],\n    computed: (savingsDai, savingsRateAccumulator) => {\n      return DSR_USDFL(savingsDai.times(savingsRateAccumulator));\n    }\n  }),\n  validate: {\n    args: validateAddress`Invalid address for daiLockedInDsr: ${'address'}`\n  }\n};\n\nexport const totalDaiLockedInDsr = {\n  generate: () => ({\n    dependencies: [[TOTAL_SAVINGS_DAI], [SAVINGS_RATE_ACCUMULATOR]],\n    computed: (totalSavingsDai, savingsRateAccumulator) => {\n      return DSR_USDFL(totalSavingsDai.times(savingsRateAccumulator));\n    }\n  })\n};\n\nexport const balance = {\n  generate: (symbol, address) => ({\n    dependencies: () => {\n      if (symbol === 'DSR-USDFL') {\n        return [[DAI_LOCKED_IN_DSR, address]];\n      }\n      return [[TOKEN_BALANCE, address, symbol]];\n    },\n    computed: v => v\n  })\n};\n\nexport const allowance = {\n  generate: (symbol, address) => ({\n    dependencies: [\n      symbol === 'ETH'\n        ? [[ALLOWANCE_AMOUNT]]\n        : [TOKEN_ALLOWANCE, address, [PROXY_ADDRESS, address], symbol]\n    ],\n    computed: v => v.isEqualTo(ALLOWANCE_AMOUNT)\n  })\n};\n\nexport const savings = {\n  generate: address => ({\n    dependencies: [\n      [ANNUAL_DAI_SAVINGS_RATE],\n      [DAI_SAVINGS_RATE],\n      [DATE_EARNINGS_LAST_ACCRUED],\n      [DAI_LOCKED_IN_DSR, address],\n      [PROXY_ADDRESS, address],\n      [SAVINGS_RATE_ACCUMULATOR],\n      [SAVINGS_DAI, [PROXY_ADDRESS, address]]\n    ],\n    computed: (\n      annualDaiSavingsRate,\n      daiSavingsRate,\n      dateEarningsLastAccrued,\n      daiLockedInDsr,\n      proxyAddress,\n      savingsRateAccumulator,\n      savingsDai\n    ) => ({\n      annualDaiSavingsRate,\n      daiSavingsRate,\n      dateEarningsLastAccrued,\n      daiLockedInDsr,\n      proxyAddress,\n      savingsRateAccumulator,\n      savingsDai\n    })\n  }),\n  validate: {\n    args: validateAddress`Invalid address for savings: ${'address'}`\n  }\n};\n\nexport const userVaultsList = {\n  generate: address => ({\n    dependencies: ({ get }) => {\n      const cdpManagerAddress = get('smartContract').getContractAddress(\n        'CDP_MANAGER'\n      );\n      return [\n        [USER_VAULT_IDS, cdpManagerAddress, [PROXY_ADDRESS, address]],\n        [USER_VAULT_ADDRESSES, cdpManagerAddress, [PROXY_ADDRESS, address]],\n        [USER_VAULT_TYPES, cdpManagerAddress, [PROXY_ADDRESS, address]]\n      ];\n    },\n    computed: (ids, addresses, types) =>\n      ids.reduce(\n        (acc, id, idx) => [\n          ...acc,\n          {\n            vaultId: id,\n            vaultAddress: addresses[idx],\n            vaultType: types[idx]\n          }\n        ],\n        []\n      )\n  }),\n  validate: {\n    args: validateAddress`Invalid address for userVaultsList: ${'address'}`\n  }\n};\n\nexport const userVaultsData = {\n  generate: ids => ({\n    dependencies: ids.map(id => [VAULT, id]),\n    computed: (...vaults) => vaults\n  })\n};\n\nexport const userVaultsLockedValue = {\n  generate: ids => ({\n    dependencies: ids.map(id => [VAULT, id]),\n    computed: (...vaults) => {\n      return vaults.reduce(\n        (acc, { collateralValue }) =>\n          collateralValue ? acc.plus(collateralValue.toBigNumber()) : acc,\n        BigNumber(0)\n      );\n    }\n  })\n};\n\nexport const fairDistribAllowToLockValue = {\n  generate: (ids, addValue, curTime) => ({\n    dependencies: () =>\n      [\n        [REWARD_FAIR_DISTRIBUTION_MAX_VALUE],\n        [REWARD_FAIR_DISTRIBUTION_TIME],\n        [REWARD_START_TIME]\n      ].concat(ids.map(id => [VAULT, id])),\n    computed: (maxValue, duration, startTime, ...vaults) => {\n      console.log(\n        'fairDistribAllowToLockValue time',\n        curTime,\n        duration.plus(startTime).toNumber(),\n        duration.toNumber(),\n        startTime.toNumber()\n      );\n      if (BigNumber(curTime) > duration.plus(startTime)) return true;\n\n      const locked = vaults.reduce(\n        (acc, { collateralValue }) =>\n          collateralValue ? acc.plus(collateralValue.toBigNumber()) : acc,\n        BigNumber(0)\n      );\n      console.log(\n        'fairDistribAllowToLockValue',\n        BigNumber(addValue).toNumber(),\n        locked.toNumber(),\n        maxValue.toNumber()\n      );\n      return BigNumber(addValue).plus(locked) < maxValue - 100;\n    }\n  })\n};\n\nexport const collateralDebt = {\n  generate: collateralTypeName => ({\n    dependencies: [\n      [TOTAL_ENCUMBERED_DEBT, collateralTypeName],\n      [DEBT_SCALING_FACTOR, collateralTypeName]\n    ],\n    computed: (totalEncumberedDebt, debtScalingFactor) => {\n      return USDFL(totalEncumberedDebt).times(debtScalingFactor);\n    }\n  })\n};\n\nexport const collateralDebtCeilings = {\n  generate: cdpTypes => ({\n    dependencies: () => cdpTypes.map(type => [DEBT_CEILING, type]),\n    computed: (...ceilings) => {\n      return cdpTypes.reduce(\n        (acc, cdpType, idx) => ({\n          ...acc,\n          [cdpType]: ceilings[idx]\n        }),\n        {}\n      );\n    }\n  })\n};\n\nexport const collateralDebtAvailable = {\n  generate: collateralTypeName => ({\n    dependencies: [\n      [COLLATERAL_DEBT, collateralTypeName],\n      [DEBT_CEILING, collateralTypeName]\n    ],\n    computed: (collateralDebt, debtCeiling) => {\n      collateralDebt = collateralDebt\n        .toBigNumber()\n        .decimalPlaces(18, BigNumber.ROUND_DOWN);\n\n      return debtCeiling.minus(collateralDebt);\n    }\n  })\n};\n\nexport const collateralTypeCollateralization = {\n  generate: (collateralTypeName, percentage = true) => ({\n    dependencies: [\n      [COLLATERAL_DEBT, collateralTypeName],\n      [COLLATERAL_TYPE_PRICE, collateralTypeName],\n      [ADAPTER_BALANCE, collateralTypeName]\n    ],\n    computed: (debt, price, amount) => {\n      const collateral = calcCollateralValue(amount, price.toBigNumber());\n      const ratio = calcCollateralizationRatio(\n        collateral,\n        debt.toBigNumber()\n      ).times(100);\n      return percentage\n        ? ratio\n        : { collateralValue: collateral, debtValue: debt };\n    }\n  })\n};\n\nexport const systemCollateralization = {\n  generate: vaultTypes => ({\n    dependencies: vaultTypes.map(vaultType => [\n      COLLATERAL_TYPE_COLLATERALIZATION,\n      vaultType,\n      false\n    ]),\n    computed: (...collateralizationValues) => {\n      const {\n        totalCollateralValue,\n        totalDebtValue\n      } = collateralizationValues.reduce(\n        (acc, { collateralValue, debtValue }) => ({\n          totalCollateralValue: acc.totalCollateralValue.plus(\n            collateralValue.toBigNumber()\n          ),\n          totalDebtValue: acc.totalDebtValue.plus(debtValue.toBigNumber())\n        }),\n        {\n          totalCollateralValue: BigNumber(0),\n          totalDebtValue: BigNumber(0)\n        }\n      );\n\n      return calcCollateralizationRatio(\n        totalCollateralValue,\n        totalDebtValue\n      ).times(100);\n    }\n  })\n};\n\nexport const getUniPrice = {\n  generate: (t0, t1, amount) => ({\n    dependencies: [\n      [REWARD_GET_AMOUNTS_OUT, amount, t1, t0],\n      [REWARD_GET_AMOUNTS_IN, amount, t0, t1]\n    ],\n    computed: (amountOut, amountIn) => {\n      return (amountOut + amountIn) / (2.0 * amount);\n    }\n  })\n};\n\nexport const getFLPrice = {\n  generate: (inWei = false) => ({\n    dependencies: ({ get }) => {\n      const cdpFLAddress = get('smartContract').getContractAddress('MCD_GOV');\n      const cdpUSDFLAddress = get('smartContract').getContractAddress(\n        'MCD_DAI'\n      );\n      return [[REWARD_GET_UNI_PRICE, cdpUSDFLAddress, cdpFLAddress, 1000]];\n    },\n    computed: price =>\n      inWei\n        ? BigNumber(price)\n            .shiftedBy(18)\n            .toFixed()\n        : price\n  })\n};\n\nexport const getProfit = {\n  generate: (amount, hiRisk) => ({\n    dependencies: [\n      [REWARD_GET_APY_BY_PRICE, hiRisk, amount, [REWARD_GET_FL_PRICE, false]]\n    ],\n\n    computed: apy => apy\n  })\n};\n\nexport const getAPY = {\n  generate: hiRisk => ({\n    dependencies: [[REWARD_GET_PROFIT, 10000, hiRisk]],\n\n    computed: apy => {\n      const f = hiRisk ? 1.91 : 1.0; //handle X2 boost for new risk pools\n      return (apy * f) / 10000.0;\n    }\n  })\n};\n\nexport const proxyOwner = {\n  generate: address => ({\n    dependencies: ({ get }) => [\n      [\n        async () => {\n          try {\n            return await get('smartContract')\n              .get('transactionManager')\n              .get('proxy')\n              .getOwner(address);\n          } catch (e) {\n            return null;\n          }\n        }\n      ]\n    ],\n    computed: owner => owner\n  }),\n  validate: {\n    args: validateAddress`Invalid address for proxyOwner: ${'address'}`\n  }\n};\n\nexport default {\n  collateralTypePrice,\n  collateralTypesPrices,\n  defaultCollateralTypesPrices,\n  vaultTypeAndAddress,\n  vaultExternalOwner,\n  vaultCollateralAndDebt,\n  vault,\n  collateralAmount,\n  collateralValue,\n  debtValue,\n  collateralizationRatio,\n  liquidationPrice,\n  daiAvailable,\n  minSafeCollateralAmount,\n  collateralAvailableAmount,\n  collateralAvailableValue,\n  daiLockedInDsr,\n  totalDaiLockedInDsr,\n  balance,\n  allowance,\n  savings,\n  userVaultsList,\n  userVaultsData,\n  collateralDebt,\n  collateralTypeCollateralization,\n  systemCollateralization,\n  proxyOwner,\n  collateralTypeData,\n  collateralTypesData,\n  collateralDebtCeilings,\n  collateralDebtAvailable,\n  walletRewardAmount,\n  walletRewardPairInfo,\n  walletRewardPairInfos,\n  rewardContract,\n  userVaultsLockedValue,\n  fairDistribAllowToLockValue,\n  getUniPrice,\n  getFLPrice,\n  getAPY,\n  getProfit\n};\n"]},"metadata":{},"sourceType":"module"}