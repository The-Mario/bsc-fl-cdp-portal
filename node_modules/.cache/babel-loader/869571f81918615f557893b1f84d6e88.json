{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _validate;\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { toHex, fromRay } from '../utils';\nimport { createCurrencyRatio } from '@makerdao/currency';\nimport { USDFL, USD } from '..';\nimport { PRICE_FEED_ADDRESS, LIQUIDATION_RATIO, RATIO_DAI_USD } from './_constants';\n\nvar validateCollateralTypeName = function validateCollateralTypeName(name) {\n  return !name && 'Invalid collateral type name';\n};\n\nvar validatePriceFeedAddressResult = function validatePriceFeedAddressResult(result, _ref) {\n  var _ref2 = _slicedToArray(_ref, 1),\n      name = _ref2[0];\n\n  return result === '0x0000000000000000000000000000000000000000' && \"No 111 collateral type with name \".concat(name, \" found\");\n};\n\nvar validateLiquidationRatioResult = function validateLiquidationRatioResult(result, _ref3) {\n  var _ref4 = _slicedToArray(_ref3, 1),\n      name = _ref4[0];\n\n  return !result && \"No 222 collateral type with name \".concat(name, \" found\");\n};\n\nexport var spotIlks = {\n  generate: function generate(collateralTypeName) {\n    return {\n      id: \"MCD_SPOT.ilks(\".concat(collateralTypeName, \")\"),\n      contract: 'MCD_SPOT',\n      call: ['ilks(bytes32)(address,uint256)', toHex(collateralTypeName)],\n      transforms: _defineProperty({}, LIQUIDATION_RATIO, function (liqRatio) {\n        return liqRatio.toString() !== '0' ? createCurrencyRatio(USD, USDFL)(fromRay(liqRatio)) : null;\n      })\n    };\n  },\n  validate: (_validate = {\n    args: validateCollateralTypeName\n  }, _defineProperty(_validate, PRICE_FEED_ADDRESS, validatePriceFeedAddressResult), _defineProperty(_validate, LIQUIDATION_RATIO, validateLiquidationRatioResult), _validate),\n  returns: [[PRICE_FEED_ADDRESS], [LIQUIDATION_RATIO]]\n};\nexport var spotPar = {\n  generate: function generate() {\n    return {\n      id: 'MCD_SPOT.par()',\n      contract: 'MCD_SPOT',\n      call: ['par()(uint256)']\n    };\n  },\n  returns: [[RATIO_DAI_USD, function (v) {\n    return createCurrencyRatio(USDFL, USD)(fromRay(v));\n  }]]\n};\nvar _default = {\n  spotIlks: spotIlks,\n  spotPar: spotPar\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(validateCollateralTypeName, \"validateCollateralTypeName\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js\");\n  reactHotLoader.register(validatePriceFeedAddressResult, \"validatePriceFeedAddressResult\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js\");\n  reactHotLoader.register(validateLiquidationRatioResult, \"validateLiquidationRatioResult\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js\");\n  reactHotLoader.register(spotIlks, \"spotIlks\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js\");\n  reactHotLoader.register(spotPar, \"spotPar\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/spot.js"],"names":["toHex","fromRay","createCurrencyRatio","USDFL","USD","PRICE_FEED_ADDRESS","LIQUIDATION_RATIO","RATIO_DAI_USD","validateCollateralTypeName","name","validatePriceFeedAddressResult","result","validateLiquidationRatioResult","spotIlks","generate","collateralTypeName","id","contract","call","transforms","liqRatio","toString","validate","args","returns","spotPar","v"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,UAA/B;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,IAA3B;AAEA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,aAHF,QAIO,cAJP;;AAMA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,IAAI;AAAA,SACrC,CAACA,IAAD,IAAS,8BAD4B;AAAA,CAAvC;;AAGA,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,MAAD;AAAA;AAAA,MAAUF,IAAV;;AAAA,SACrCE,MAAM,KAAK,4CAAX,+CACoCF,IADpC,WADqC;AAAA,CAAvC;;AAIA,IAAMG,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACD,MAAD,SAAoB;AAAA;AAAA,MAAVF,IAAU;;AACzD,SAAO,CAACE,MAAD,+CAA+CF,IAA/C,WAAP;AACD,CAFD;;AAIA,OAAO,IAAMI,QAAQ,GAAG;AACtBC,EAAAA,QAAQ,EAAE,kBAAAC,kBAAkB;AAAA,WAAK;AAC/BC,MAAAA,EAAE,0BAAmBD,kBAAnB,MAD6B;AAE/BE,MAAAA,QAAQ,EAAE,UAFqB;AAG/BC,MAAAA,IAAI,EAAE,CAAC,gCAAD,EAAmClB,KAAK,CAACe,kBAAD,CAAxC,CAHyB;AAI/BI,MAAAA,UAAU,sBACPb,iBADO,EACa,UAAAc,QAAQ;AAAA,eAC3BA,QAAQ,CAACC,QAAT,OAAwB,GAAxB,GACInB,mBAAmB,CAACE,GAAD,EAAMD,KAAN,CAAnB,CAAgCF,OAAO,CAACmB,QAAD,CAAvC,CADJ,GAEI,IAHuB;AAAA,OADrB;AAJqB,KAAL;AAAA,GADN;AAYtBE,EAAAA,QAAQ;AACNC,IAAAA,IAAI,EAAEf;AADA,gCAELH,kBAFK,EAEgBK,8BAFhB,8BAGLJ,iBAHK,EAGeM,8BAHf,aAZc;AAiBtBY,EAAAA,OAAO,EAAE,CAAC,CAACnB,kBAAD,CAAD,EAAuB,CAACC,iBAAD,CAAvB;AAjBa,CAAjB;AAoBP,OAAO,IAAMmB,OAAO,GAAG;AACrBX,EAAAA,QAAQ,EAAE;AAAA,WAAO;AACfE,MAAAA,EAAE,EAAE,gBADW;AAEfC,MAAAA,QAAQ,EAAE,UAFK;AAGfC,MAAAA,IAAI,EAAE,CAAC,gBAAD;AAHS,KAAP;AAAA,GADW;AAMrBM,EAAAA,OAAO,EAAE,CAAC,CAACjB,aAAD,EAAgB,UAAAmB,CAAC;AAAA,WAAIxB,mBAAmB,CAACC,KAAD,EAAQC,GAAR,CAAnB,CAAgCH,OAAO,CAACyB,CAAD,CAAvC,CAAJ;AAAA,GAAjB,CAAD;AANY,CAAhB;eASQ;AACbb,EAAAA,QAAQ,EAARA,QADa;AAEbY,EAAAA,OAAO,EAAPA;AAFa,C;AAAf;;;;;;;;;;0BAxCMjB,0B;0BAGAE,8B;0BAIAE,8B;0BAIOC,Q;0BAoBAY,O","sourcesContent":["import { toHex, fromRay } from '../utils';\nimport { createCurrencyRatio } from '@makerdao/currency';\nimport { USDFL, USD } from '..';\n\nimport {\n  PRICE_FEED_ADDRESS,\n  LIQUIDATION_RATIO,\n  RATIO_DAI_USD\n} from './_constants';\n\nconst validateCollateralTypeName = name =>\n  !name && 'Invalid collateral type name';\n\nconst validatePriceFeedAddressResult = (result, [name]) =>\n  result === '0x0000000000000000000000000000000000000000' &&\n  `No 111 collateral type with name ${name} found`;\n\nconst validateLiquidationRatioResult = (result, [name]) => {\n  return !result && `No 222 collateral type with name ${name} found`;\n};\n\nexport const spotIlks = {\n  generate: collateralTypeName => ({\n    id: `MCD_SPOT.ilks(${collateralTypeName})`,\n    contract: 'MCD_SPOT',\n    call: ['ilks(bytes32)(address,uint256)', toHex(collateralTypeName)],\n    transforms: {\n      [LIQUIDATION_RATIO]: liqRatio =>\n        liqRatio.toString() !== '0'\n          ? createCurrencyRatio(USD, USDFL)(fromRay(liqRatio))\n          : null\n    }\n  }),\n  validate: {\n    args: validateCollateralTypeName,\n    [PRICE_FEED_ADDRESS]: validatePriceFeedAddressResult,\n    [LIQUIDATION_RATIO]: validateLiquidationRatioResult\n  },\n  returns: [[PRICE_FEED_ADDRESS], [LIQUIDATION_RATIO]]\n};\n\nexport const spotPar = {\n  generate: () => ({\n    id: 'MCD_SPOT.par()',\n    contract: 'MCD_SPOT',\n    call: ['par()(uint256)']\n  }),\n  returns: [[RATIO_DAI_USD, v => createCurrencyRatio(USDFL, USD)(fromRay(v))]]\n};\n\nexport default {\n  spotIlks,\n  spotPar\n};\n"]},"metadata":{},"sourceType":"module"}