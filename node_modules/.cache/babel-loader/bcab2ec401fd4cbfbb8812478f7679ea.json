{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Flex, Grid, Text } from '@makerdao/ui-components-core';\nimport ButtonCard from './ButtonCard';\nimport { BreakableText } from './Typography';\nimport { ReactComponent as LedgerLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/ledger.svg\";\nimport { ReactComponent as Cross } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/cross.svg\";\nimport lang from 'languages'; // hack to get around button padding for now\n\nvar StyledLedgerLogo = styled(LedgerLogo).withConfig({\n  displayName: \"LedgerType__StyledLedgerLogo\",\n  componentId: \"sc-1r7psu4-0\"\n})([\"max-width:16px;max-height:16px;\"]);\nexport var LEDGER_LIVE_PATH = \"44'/60'/0'\";\nvar LEDGER_LEGACY_PATH = \"44'/60'/0'/0\";\n\nvar _StyledBox = styled(Box).withConfig({\n  displayName: \"LedgerType___StyledBox\",\n  componentId: \"sc-1r7psu4-1\"\n})({\n  cursor: 'pointer'\n});\n\nfunction LedgerType(_ref) {\n  var onClose = _ref.onClose,\n      onPathSelect = _ref.onPathSelect;\n  return /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    px: \"m\",\n    py: \"s\",\n    width: ['auto', '52rem'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledBox, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cross, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text.h3, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, lang.formatString(lang.overview_page.connect_ledgers_choice, 'Ledger Live', 'Legacy')), /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonCard, {\n    icon: /*#__PURE__*/React.createElement(StyledLedgerLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }),\n    onClick: function onClick() {\n      return onPathSelect(LEDGER_LIVE_PATH);\n    },\n    title: \"Ledger live\",\n    subtitle: /*#__PURE__*/React.createElement(BreakableText, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, \"m/44'/60'/0'/x\"),\n    buttonText: lang.connect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ButtonCard, {\n    icon: /*#__PURE__*/React.createElement(StyledLedgerLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }),\n    onClick: function onClick() {\n      return onPathSelect(LEDGER_LEGACY_PATH);\n    },\n    title: \"Ledger legacy\",\n    subtitle: /*#__PURE__*/React.createElement(BreakableText, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"m/44'/x'/0/0\"),\n    buttonText: lang.connect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    justifySelf: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary-outline\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, lang.overview_page.select_another_wallet))));\n}\n\nvar _default = LedgerType;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StyledLedgerLogo, \"StyledLedgerLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js\");\n  reactHotLoader.register(LEDGER_LIVE_PATH, \"LEDGER_LIVE_PATH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js\");\n  reactHotLoader.register(LEDGER_LEGACY_PATH, \"LEDGER_LEGACY_PATH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js\");\n  reactHotLoader.register(LedgerType, \"LedgerType\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/LedgerType.js"],"names":["React","styled","Box","Button","Flex","Grid","Text","ButtonCard","BreakableText","lang","StyledLedgerLogo","LedgerLogo","LEDGER_LIVE_PATH","LEDGER_LEGACY_PATH","cursor","LedgerType","onClose","onPathSelect","formatString","overview_page","connect_ledgers_choice","connect","select_another_wallet"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { Box, Button, Flex, Grid, Text } from '@makerdao/ui-components-core';\nimport ButtonCard from './ButtonCard';\n\nimport { BreakableText } from './Typography';\nimport { ReactComponent as LedgerLogo } from 'images/ledger.svg';\nimport { ReactComponent as Cross } from 'images/cross.svg';\nimport lang from 'languages';\n\n// hack to get around button padding for now\nconst StyledLedgerLogo = styled(LedgerLogo)`\n  max-width: 16px;\n  max-height: 16px;\n`;\n\nexport const LEDGER_LIVE_PATH = \"44'/60'/0'\";\nconst LEDGER_LEGACY_PATH = \"44'/60'/0'/0\";\n\nfunction LedgerType({ onClose, onPathSelect }) {\n  return (\n    <Grid gridRowGap=\"m\" px=\"m\" py=\"s\" width={['auto', '52rem']}>\n      <Flex justifyContent=\"flex-end\">\n        <Box onClick={onClose} css={{ cursor: 'pointer' }}>\n          <Cross />\n        </Box>\n      </Flex>\n      <Grid gridRowGap=\"m\">\n        <Text.h3 textAlign=\"center\">\n          {lang.formatString(\n            lang.overview_page.connect_ledgers_choice,\n            'Ledger Live',\n            'Legacy'\n          )}\n        </Text.h3>\n\n        <Grid gridRowGap=\"s\">\n          <ButtonCard\n            icon={<StyledLedgerLogo />}\n            onClick={() => onPathSelect(LEDGER_LIVE_PATH)}\n            title=\"Ledger live\"\n            subtitle={\n              <BreakableText color=\"grey\">{\"m/44'/60'/0'/x\"}</BreakableText>\n            }\n            buttonText={lang.connect}\n          />\n          <ButtonCard\n            icon={<StyledLedgerLogo />}\n            onClick={() => onPathSelect(LEDGER_LEGACY_PATH)}\n            title=\"Ledger legacy\"\n            subtitle={\n              <BreakableText color=\"grey\">{\"m/44'/x'/0/0\"}</BreakableText>\n            }\n            buttonText={lang.connect}\n          />\n        </Grid>\n\n        <Box justifySelf=\"center\">\n          <Button variant=\"secondary-outline\" onClick={onClose}>\n            {lang.overview_page.select_another_wallet}\n          </Button>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default LedgerType;\n"]},"metadata":{},"sourceType":"module"}