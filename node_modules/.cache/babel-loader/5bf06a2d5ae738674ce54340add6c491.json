{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/SidebarProvider.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { createContext, useReducer } from 'react';\nimport sidebars from 'components/Sidebars';\nvar initialState = {\n  type: '',\n  props: {}\n};\n\nvar reducer = function reducer(state, _ref) {\n  var type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case 'show':\n      return _objectSpread({}, state, {}, payload);\n\n    case 'reset':\n      return _objectSpread({}, initialState);\n\n    default:\n      return;\n  }\n};\n\nvar SidebarStateContext = createContext(initialState);\n\nfunction SidebarProvider(_ref2) {\n  var children = _ref2.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      type = _useReducer2$.type,\n      props = _useReducer2$.props,\n      dispatch = _useReducer2[1];\n\n  var reset = function reset() {\n    return dispatch({\n      type: 'reset'\n    });\n  };\n\n  var show = function show(_ref3) {\n    var type = _ref3.type,\n        props = _ref3.props,\n        template = _ref3.template;\n    dispatch({\n      type: 'show',\n      payload: {\n        type: type,\n        props: props,\n        template: template\n      }\n    });\n  };\n\n  var current = {\n    component: sidebars[type],\n    props: _objectSpread({}, props, {\n      reset: reset\n    })\n  };\n  return /*#__PURE__*/React.createElement(SidebarStateContext.Provider, {\n    value: {\n      show: show,\n      reset: reset,\n      current: current\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n__signature__(SidebarProvider, \"useReducer{[{ type, props }, dispatch](initialState)}\");\n\nexport { SidebarStateContext, SidebarProvider };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/SidebarProvider.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/SidebarProvider.js\");\n  reactHotLoader.register(SidebarStateContext, \"SidebarStateContext\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/SidebarProvider.js\");\n  reactHotLoader.register(SidebarProvider, \"SidebarProvider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/SidebarProvider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/SidebarProvider.js"],"names":["React","createContext","useReducer","sidebars","initialState","type","props","reducer","state","payload","SidebarStateContext","SidebarProvider","children","dispatch","reset","show","template","current","component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,QAA8B;AAAA,MAApBH,IAAoB,QAApBA,IAAoB;AAAA,MAAdI,OAAc,QAAdA,OAAc;;AAC5C,UAAQJ,IAAR;AACE,SAAK,MAAL;AACE,+BAAYG,KAAZ,MAAsBC,OAAtB;;AACF,SAAK,OAAL;AACE,+BAAYL,YAAZ;;AACF;AACE;AANJ;AAQD,CATD;;AAWA,IAAMM,mBAAmB,GAAGT,aAAa,CAACG,YAAD,CAAzC;;AAEA,SAASO,eAAT,QAAuC;AAAA,MAAZC,QAAY,SAAZA,QAAY;;AAAA,oBACDV,UAAU,CAACK,OAAD,EAAUH,YAAV,CADT;AAAA;AAAA;AAAA,MAC5BC,IAD4B,iBAC5BA,IAD4B;AAAA,MACtBC,KADsB,iBACtBA,KADsB;AAAA,MACbO,QADa;;AAErC,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMD,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd;AAAA,GAAd;;AACA,MAAMU,IAAI,GAAG,SAAPA,IAAO,QAA+B;AAAA,QAA5BV,IAA4B,SAA5BA,IAA4B;AAAA,QAAtBC,KAAsB,SAAtBA,KAAsB;AAAA,QAAfU,QAAe,SAAfA,QAAe;AAC1CH,IAAAA,QAAQ,CAAC;AAAER,MAAAA,IAAI,EAAE,MAAR;AAAgBI,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,KAAK,EAALA,KAAR;AAAeU,QAAAA,QAAQ,EAARA;AAAf;AAAzB,KAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,OAAO,GAAG;AAAEC,IAAAA,SAAS,EAAEf,QAAQ,CAACE,IAAD,CAArB;AAA6BC,IAAAA,KAAK,oBAAOA,KAAP;AAAcQ,MAAAA,KAAK,EAALA;AAAd;AAAlC,GAAhB;AAEA,sBACE,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAJA,IAAF;AAAQD,MAAAA,KAAK,EAALA,KAAR;AAAeG,MAAAA,OAAO,EAAPA;AAAf,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD;;cAdQD,e;;AAgBT,SAASD,mBAAT,EAA8BC,eAA9B;;;;;;;;;;0BA/BMP,Y;0BAEAG,O;0BAWAG,mB;0BAEGC,e","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport sidebars from 'components/Sidebars';\n\nconst initialState = { type: '', props: {} };\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'show':\n      return { ...state, ...payload };\n    case 'reset':\n      return { ...initialState };\n    default:\n      return;\n  }\n};\n\nconst SidebarStateContext = createContext(initialState);\n\nfunction SidebarProvider({ children }) {\n  const [{ type, props }, dispatch] = useReducer(reducer, initialState);\n  const reset = () => dispatch({ type: 'reset' });\n  const show = ({ type, props, template }) => {\n    dispatch({ type: 'show', payload: { type, props, template } });\n  };\n\n  const current = { component: sidebars[type], props: { ...props, reset } };\n\n  return (\n    <SidebarStateContext.Provider value={{ show, reset, current }}>\n      {children}\n    </SidebarStateContext.Provider>\n  );\n}\n\nexport { SidebarStateContext, SidebarProvider };\n"]},"metadata":{},"sourceType":"module"}