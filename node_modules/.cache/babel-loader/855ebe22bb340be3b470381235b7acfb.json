{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport useMaker from 'hooks/useMaker';\nimport { showWalletTokens } from 'references/config';\nimport { watch } from 'hooks/useObservable';\nimport BigNumber from 'bignumber.js';\n\nvar useWalletBalances = function useWalletBalances() {\n  var defaultValues = showWalletTokens.reduce(function (acc, token) {\n    acc[token] = BigNumber(0);\n    return acc;\n  }, {});\n\n  var _useMaker = useMaker(),\n      account = _useMaker.account;\n\n  var symbols = showWalletTokens.filter(function (v) {\n    return v !== 'DSR';\n  });\n  var dsrBalance = watch.daiLockedInDsr(account === null || account === void 0 ? void 0 : account.address);\n  var tokenBalances = watch.tokenBalances(account === null || account === void 0 ? void 0 : account.address, symbols);\n  return (tokenBalances === null || tokenBalances === void 0 ? void 0 : tokenBalances.reduce(function (acc, tokenBalance) {\n    acc[tokenBalance.symbol] = tokenBalance.toBigNumber();\n    return acc;\n  }, {\n    DSR: dsrBalance === null || dsrBalance === void 0 ? void 0 : dsrBalance.toBigNumber()\n  })) || defaultValues;\n};\n\n__signature__(useWalletBalances, \"useMaker{{ account }}\", function () {\n  return [useMaker];\n});\n\nvar _default = useWalletBalances;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useWalletBalances, \"useWalletBalances\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useWalletBalances.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useWalletBalances.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useWalletBalances.js"],"names":["useMaker","showWalletTokens","watch","BigNumber","useWalletBalances","defaultValues","reduce","acc","token","account","symbols","filter","v","dsrBalance","daiLockedInDsr","address","tokenBalances","tokenBalance","symbol","toBigNumber","DSR"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,MAAMC,aAAa,GAAGJ,gBAAgB,CAACK,MAAjB,CAAwB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC5DD,IAAAA,GAAG,CAACC,KAAD,CAAH,GAAaL,SAAS,CAAC,CAAD,CAAtB;AACA,WAAOI,GAAP;AACD,GAHqB,EAGnB,EAHmB,CAAtB;;AAD8B,kBAMVP,QAAQ,EANE;AAAA,MAMtBS,OANsB,aAMtBA,OANsB;;AAO9B,MAAMC,OAAO,GAAGT,gBAAgB,CAACU,MAAjB,CAAwB,UAAAC,CAAC;AAAA,WAAIA,CAAC,KAAK,KAAV;AAAA,GAAzB,CAAhB;AACA,MAAMC,UAAU,GAAGX,KAAK,CAACY,cAAN,CAAqBL,OAArB,aAAqBA,OAArB,uBAAqBA,OAAO,CAAEM,OAA9B,CAAnB;AAEA,MAAMC,aAAa,GAAGd,KAAK,CAACc,aAAN,CAAoBP,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEM,OAA7B,EAAsCL,OAAtC,CAAtB;AACA,SACE,CAAAM,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEV,MAAf,CACE,UAACC,GAAD,EAAMU,YAAN,EAAuB;AACrBV,IAAAA,GAAG,CAACU,YAAY,CAACC,MAAd,CAAH,GAA2BD,YAAY,CAACE,WAAb,EAA3B;AACA,WAAOZ,GAAP;AACD,GAJH,EAKE;AAAEa,IAAAA,GAAG,EAAEP,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEM,WAAZ;AAAP,GALF,MAMKd,aAPP;AASD,CApBD;;cAAMD,iB;UAMgBJ,Q;;;eAgBPI,iB;AAAf;;;;;;;;;;0BAtBMA,iB","sourcesContent":["import useMaker from 'hooks/useMaker';\nimport { showWalletTokens } from 'references/config';\nimport { watch } from 'hooks/useObservable';\nimport BigNumber from 'bignumber.js';\n\nconst useWalletBalances = () => {\n  const defaultValues = showWalletTokens.reduce((acc, token) => {\n    acc[token] = BigNumber(0);\n    return acc;\n  }, {});\n\n  const { account } = useMaker();\n  const symbols = showWalletTokens.filter(v => v !== 'DSR');\n  const dsrBalance = watch.daiLockedInDsr(account?.address);\n\n  const tokenBalances = watch.tokenBalances(account?.address, symbols);\n  return (\n    tokenBalances?.reduce(\n      (acc, tokenBalance) => {\n        acc[tokenBalance.symbol] = tokenBalance.toBigNumber();\n        return acc;\n      },\n      { DSR: dsrBalance?.toBigNumber() }\n    ) || defaultValues\n  );\n};\n\nexport default useWalletBalances;\n"]},"metadata":{},"sourceType":"module"}