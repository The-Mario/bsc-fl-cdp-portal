{"ast":null,"code":"import _classCallCheck from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { LocalService } from '@makerdao/services-core';\n\nvar CacheService = /*#__PURE__*/function (_LocalService) {\n  _inherits(CacheService, _LocalService);\n\n  var _super = _createSuper(CacheService);\n\n  function CacheService() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cache';\n\n    _classCallCheck(this, CacheService);\n\n    return _super.call(this, name);\n  }\n\n  _createClass(CacheService, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (settings.storage) {\n        this._storage = settings.storage;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this._storage;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return !!this._storage && key in this._storage;\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch(key) {\n      return this._storage ? this._storage[key] : undefined;\n    }\n  }, {\n    key: \"store\",\n    value: function store(key, value) {\n      if (this._storage) this._storage[key] = value;\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return CacheService;\n}(LocalService);\n\nexport { CacheService as default };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CacheService, \"CacheService\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/CacheService.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/CacheService.js"],"names":["LocalService","CacheService","name","settings","storage","_storage","key","undefined","value"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,yBAA7B;;IAEqBC,Y;;;;;AACnB,0BAA4B;AAAA,QAAhBC,IAAgB,uEAAT,OAAS;;AAAA;;AAAA,6BACpBA,IADoB;AAE3B;;;;iCAEyB;AAAA,UAAfC,QAAe,uEAAJ,EAAI;;AACxB,UAAIA,QAAQ,CAACC,OAAb,EAAsB;AACpB,aAAKC,QAAL,GAAgBF,QAAQ,CAACC,OAAzB;AACD;AACF;;;gCAEW;AACV,aAAO,CAAC,CAAC,KAAKC,QAAd;AACD;;;wBAEGC,G,EAAK;AACP,aAAO,CAAC,CAAC,KAAKD,QAAP,IAAmBC,GAAG,IAAI,KAAKD,QAAtC;AACD;;;0BAEKC,G,EAAK;AACT,aAAO,KAAKD,QAAL,GAAgB,KAAKA,QAAL,CAAcC,GAAd,CAAhB,GAAqCC,SAA5C;AACD;;;0BAEKD,G,EAAKE,K,EAAO;AAChB,UAAI,KAAKH,QAAT,EAAmB,KAAKA,QAAL,CAAcC,GAAd,IAAqBE,KAArB;AACpB;;;;;;;;;;;EAzBuCR,Y;;SAArBC,Y;;;;;;;;;;0BAAAA,Y","sourcesContent":["import { LocalService } from '@makerdao/services-core';\n\nexport default class CacheService extends LocalService {\n  constructor(name = 'cache') {\n    super(name);\n  }\n\n  initialize(settings = {}) {\n    if (settings.storage) {\n      this._storage = settings.storage;\n    }\n  }\n\n  isEnabled() {\n    return !!this._storage;\n  }\n\n  has(key) {\n    return !!this._storage && key in this._storage;\n  }\n\n  fetch(key) {\n    return this._storage ? this._storage[key] : undefined;\n  }\n\n  store(key, value) {\n    if (this._storage) this._storage[key] = value;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}