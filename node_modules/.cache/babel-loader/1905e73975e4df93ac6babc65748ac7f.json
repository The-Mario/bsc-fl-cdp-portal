{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { getCurrency, ETH } from '../Currency';\nimport tracksTransactions from '../../utils/tracksTransactions';\nvar EtherToken = (_class = /*#__PURE__*/function () {\n  function EtherToken(web3Service, gasService, transactionManager) {\n    _classCallCheck(this, EtherToken);\n\n    this._web3 = web3Service;\n    this._gasService = gasService;\n    this._transactionManager = transactionManager;\n  } // eslint-disable-next-line\n\n\n  _createClass(EtherToken, [{\n    key: \"allowance\",\n    value: function allowance(tokenOwner, spender) {\n      return Promise.resolve(Number.MAX_SAFE_INTEGER);\n    }\n  }, {\n    key: \"balance\",\n    value: function balance() {\n      return this.balanceOf(this._web3.currentAddress());\n    }\n  }, {\n    key: \"balanceOf\",\n    value: function () {\n      var _balanceOf = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(owner) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = ETH;\n                _context.next = 3;\n                return this._web3.getBalance(owner);\n\n              case 3:\n                _context.t1 = _context.sent;\n                return _context.abrupt(\"return\", _context.t0.wei.call(_context.t0, _context.t1));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function balanceOf(_x) {\n        return _balanceOf.apply(this, arguments);\n      }\n\n      return balanceOf;\n    }() // eslint-disable-next-line\n\n  }, {\n    key: \"approve\",\n    value: function approve(spender, value) {\n      return Promise.resolve(true);\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"approveUnlimited\",\n    value: function approveUnlimited(spender) {\n      return Promise.resolve(true);\n    }\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(toAddress, amount, options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.transferFrom(this._web3.currentAddress(), toAddress, amount, options));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function transfer(_x2, _x3, _x4) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n  }, {\n    key: \"transferFrom\",\n    value: function () {\n      var _transferFrom = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(fromAddress, toAddress, amount, _ref) {\n        var _ref$unit, unit, promise;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _ref$unit = _ref.unit, unit = _ref$unit === void 0 ? ETH : _ref$unit, promise = _ref.promise;\n                return _context3.abrupt(\"return\", this._transactionManager.sendTransaction({\n                  from: fromAddress,\n                  to: toAddress,\n                  value: getCurrency(amount, unit).toFixed('wei')\n                }, {\n                  metadata: {\n                    action: {\n                      name: 'transfer',\n                      from: fromAddress,\n                      to: toAddress,\n                      amount: getCurrency(amount, unit)\n                    }\n                  },\n                  promise: promise\n                }));\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function transferFrom(_x5, _x6, _x7, _x8) {\n        return _transferFrom.apply(this, arguments);\n      }\n\n      return transferFrom;\n    }()\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return EtherToken;\n}(), (_applyDecoratedDescriptor(_class.prototype, \"transfer\", [tracksTransactions], Object.getOwnPropertyDescriptor(_class.prototype, \"transfer\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"transferFrom\", [tracksTransactions], Object.getOwnPropertyDescriptor(_class.prototype, \"transferFrom\"), _class.prototype)), _class);\nexport { EtherToken as default };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(EtherToken, \"EtherToken\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/tokens/EtherToken.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/tokens/EtherToken.js"],"names":["getCurrency","ETH","tracksTransactions","EtherToken","web3Service","gasService","transactionManager","_web3","_gasService","_transactionManager","tokenOwner","spender","Promise","resolve","Number","MAX_SAFE_INTEGER","balanceOf","currentAddress","owner","getBalance","wei","value","toAddress","amount","options","transferFrom","fromAddress","unit","promise","sendTransaction","from","to","toFixed","metadata","action","name"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,GAAtB,QAAiC,aAAjC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;IAEqBC,U;AACnB,sBAAYC,WAAZ,EAAyBC,UAAzB,EAAqCC,kBAArC,EAAyD;AAAA;;AACvD,SAAKC,KAAL,GAAaH,WAAb;AACA,SAAKI,WAAL,GAAmBH,UAAnB;AACA,SAAKI,mBAAL,GAA2BH,kBAA3B;AACD,G,CAED;;;;;8BACUI,U,EAAYC,O,EAAS;AAC7B,aAAOC,OAAO,CAACC,OAAR,CAAgBC,MAAM,CAACC,gBAAvB,CAAP;AACD;;;8BAES;AACR,aAAO,KAAKC,SAAL,CAAe,KAAKT,KAAL,CAAWU,cAAX,EAAf,CAAP;AACD;;;;iGAEeC,K;;;;;8BACPjB,G;;uBAAc,KAAKM,KAAL,CAAWY,UAAX,CAAsBD,KAAtB,C;;;;6DAAVE,G;;;;;;;;;;;;;;;QAGb;;;;4BACQT,O,EAASU,K,EAAO;AACtB,aAAOT,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,K,CAED;;;;qCACiBF,O,EAAS;AACxB,aAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD;;;;iGAGcS,S,EAAWC,M,EAAQC,O;;;;;kDACzB,KAAKC,YAAL,CACL,KAAKlB,KAAL,CAAWU,cAAX,EADK,EAELK,SAFK,EAGLC,MAHK,EAILC,OAJK,C;;;;;;;;;;;;;;;;;;;qGASUE,W,EAAaJ,S,EAAWC,M;;;;;;;iCAAUI,I,EAAAA,I,0BAAO1B,G,cAAK2B,O,QAAAA,O;kDACxD,KAAKnB,mBAAL,CAAyBoB,eAAzB,CACL;AACEC,kBAAAA,IAAI,EAAEJ,WADR;AAEEK,kBAAAA,EAAE,EAAET,SAFN;AAGED,kBAAAA,KAAK,EAAErB,WAAW,CAACuB,MAAD,EAASI,IAAT,CAAX,CAA0BK,OAA1B,CAAkC,KAAlC;AAHT,iBADK,EAML;AACEC,kBAAAA,QAAQ,EAAE;AACRC,oBAAAA,MAAM,EAAE;AACNC,sBAAAA,IAAI,EAAE,UADA;AAENL,sBAAAA,IAAI,EAAEJ,WAFA;AAGNK,sBAAAA,EAAE,EAAET,SAHE;AAINC,sBAAAA,MAAM,EAAEvB,WAAW,CAACuB,MAAD,EAASI,IAAT;AAJb;AADA,mBADZ;AASEC,kBAAAA,OAAO,EAAPA;AATF,iBANK,C;;;;;;;;;;;;;;;;;;;;;;;;;;+DAZR1B,kB,kJAUAA,kB;SAxCkBC,U;;;;;;;;;;0BAAAA,U","sourcesContent":["import { getCurrency, ETH } from '../Currency';\nimport tracksTransactions from '../../utils/tracksTransactions';\n\nexport default class EtherToken {\n  constructor(web3Service, gasService, transactionManager) {\n    this._web3 = web3Service;\n    this._gasService = gasService;\n    this._transactionManager = transactionManager;\n  }\n\n  // eslint-disable-next-line\n  allowance(tokenOwner, spender) {\n    return Promise.resolve(Number.MAX_SAFE_INTEGER);\n  }\n\n  balance() {\n    return this.balanceOf(this._web3.currentAddress());\n  }\n\n  async balanceOf(owner) {\n    return ETH.wei(await this._web3.getBalance(owner));\n  }\n\n  // eslint-disable-next-line\n  approve(spender, value) {\n    return Promise.resolve(true);\n  }\n\n  // eslint-disable-next-line\n  approveUnlimited(spender) {\n    return Promise.resolve(true);\n  }\n\n  @tracksTransactions\n  async transfer(toAddress, amount, options) {\n    return this.transferFrom(\n      this._web3.currentAddress(),\n      toAddress,\n      amount,\n      options\n    );\n  }\n\n  @tracksTransactions\n  async transferFrom(fromAddress, toAddress, amount, { unit = ETH, promise }) {\n    return this._transactionManager.sendTransaction(\n      {\n        from: fromAddress,\n        to: toAddress,\n        value: getCurrency(amount, unit).toFixed('wei')\n      },\n      {\n        metadata: {\n          action: {\n            name: 'transfer',\n            from: fromAddress,\n            to: toAddress,\n            amount: getCurrency(amount, unit)\n          }\n        },\n        promise\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}