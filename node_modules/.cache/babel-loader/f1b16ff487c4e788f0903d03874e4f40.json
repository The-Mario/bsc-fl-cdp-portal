{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport tokens from '../../contracts/tokens';\nimport values from 'lodash/values';\nimport { createCurrency, createCurrencyRatio, createGetCurrency } from '@makerdao/currency';\nexport var currencies = values(tokens).reduce(function (output, symbol) {\n  output[symbol] = createCurrency(symbol);\n  return output;\n}, {\n  USD: createCurrency('USD')\n});\nexport var getCurrency = createGetCurrency(currencies); // we export both the currencies object and the individual currencies because\n// the latter is convenient when you know what you want to use, and the former\n// is convenient when you are picking a currency based on a symbol from input\n\nexport var ETH = currencies.ETH;\nexport var FL = currencies.FL;\nexport var PETH = currencies.PETH;\nexport var WETH = currencies.WETH;\nexport var USD = currencies.USD;\nexport var USD_ETH = createCurrencyRatio(USD, ETH);\nexport var USD_FL = createCurrencyRatio(USD, FL);\nexport var USD_PETH = createCurrencyRatio(USD, PETH);\nexport var USD_WETH = createCurrencyRatio(USD, WETH);\nObject.assign(currencies, {\n  USD_ETH: USD_ETH,\n  USD_FL: USD_FL,\n  USD_PETH: USD_PETH,\n  USD_WETH: USD_WETH\n});\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(currencies, \"currencies\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(getCurrency, \"getCurrency\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(ETH, \"ETH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(FL, \"FL\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(PETH, \"PETH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(WETH, \"WETH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(USD, \"USD\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(USD_ETH, \"USD_ETH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(USD_FL, \"USD_FL\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(USD_PETH, \"USD_PETH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n  reactHotLoader.register(USD_WETH, \"USD_WETH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/Currency.js"],"names":["tokens","values","createCurrency","createCurrencyRatio","createGetCurrency","currencies","reduce","output","symbol","USD","getCurrency","ETH","FL","PETH","WETH","USD_ETH","USD_FL","USD_PETH","USD_WETH","Object","assign"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SACEC,cADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,oBAJP;AAMA,OAAO,IAAMC,UAAU,GAAGJ,MAAM,CAACD,MAAD,CAAN,CAAeM,MAAf,CACxB,UAACC,MAAD,EAASC,MAAT,EAAoB;AAClBD,EAAAA,MAAM,CAACC,MAAD,CAAN,GAAiBN,cAAc,CAACM,MAAD,CAA/B;AACA,SAAOD,MAAP;AACD,CAJuB,EAKxB;AACEE,EAAAA,GAAG,EAAEP,cAAc,CAAC,KAAD;AADrB,CALwB,CAAnB;AAUP,OAAO,IAAMQ,WAAW,GAAGN,iBAAiB,CAACC,UAAD,CAArC,C,CAEP;AACA;AACA;;AAEA,OAAO,IAAMM,GAAG,GAAGN,UAAU,CAACM,GAAvB;AACP,OAAO,IAAMC,EAAE,GAAGP,UAAU,CAACO,EAAtB;AACP,OAAO,IAAMC,IAAI,GAAGR,UAAU,CAACQ,IAAxB;AACP,OAAO,IAAMC,IAAI,GAAGT,UAAU,CAACS,IAAxB;AACP,OAAO,IAAML,GAAG,GAAGJ,UAAU,CAACI,GAAvB;AAEP,OAAO,IAAMM,OAAO,GAAGZ,mBAAmB,CAACM,GAAD,EAAME,GAAN,CAAnC;AACP,OAAO,IAAMK,MAAM,GAAGb,mBAAmB,CAACM,GAAD,EAAMG,EAAN,CAAlC;AACP,OAAO,IAAMK,QAAQ,GAAGd,mBAAmB,CAACM,GAAD,EAAMI,IAAN,CAApC;AACP,OAAO,IAAMK,QAAQ,GAAGf,mBAAmB,CAACM,GAAD,EAAMK,IAAN,CAApC;AAEPK,MAAM,CAACC,MAAP,CAAcf,UAAd,EAA0B;AACxBU,EAAAA,OAAO,EAAPA,OADwB;AAExBC,EAAAA,MAAM,EAANA,MAFwB;AAGxBC,EAAAA,QAAQ,EAARA,QAHwB;AAIxBC,EAAAA,QAAQ,EAARA;AAJwB,CAA1B;;;;;;;;;;0BA3Bab,U;0BAUAK,W;0BAMAC,G;0BACAC,E;0BACAC,I;0BACAC,I;0BACAL,G;0BAEAM,O;0BACAC,M;0BACAC,Q;0BACAC,Q","sourcesContent":["import tokens from '../../contracts/tokens';\nimport values from 'lodash/values';\n\nimport {\n  createCurrency,\n  createCurrencyRatio,\n  createGetCurrency\n} from '@makerdao/currency';\n\nexport const currencies = values(tokens).reduce(\n  (output, symbol) => {\n    output[symbol] = createCurrency(symbol);\n    return output;\n  },\n  {\n    USD: createCurrency('USD')\n  }\n);\n\nexport const getCurrency = createGetCurrency(currencies);\n\n// we export both the currencies object and the individual currencies because\n// the latter is convenient when you know what you want to use, and the former\n// is convenient when you are picking a currency based on a symbol from input\n\nexport const ETH = currencies.ETH;\nexport const FL = currencies.FL;\nexport const PETH = currencies.PETH;\nexport const WETH = currencies.WETH;\nexport const USD = currencies.USD;\n\nexport const USD_ETH = createCurrencyRatio(USD, ETH);\nexport const USD_FL = createCurrencyRatio(USD, FL);\nexport const USD_PETH = createCurrencyRatio(USD, PETH);\nexport const USD_WETH = createCurrencyRatio(USD, WETH);\n\nObject.assign(currencies, {\n  USD_ETH,\n  USD_FL,\n  USD_PETH,\n  USD_WETH\n});\n"]},"metadata":{},"sourceType":"module"}