{"ast":null,"code":"import _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreate.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useReducer, useMemo } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport StepperUI from 'components/StepperUI';\nimport StepperHeader from 'components/StepperHeader';\nimport { CDPCreateSelectCollateral, CDPCreateSetAllowance, CDPCreateConfirmCDP, CDPCreateDeposit } from 'components/CDPCreateScreens';\nimport useLanguage from 'hooks/useLanguage';\nimport { TxLifecycle } from 'utils/constants';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport { watch } from 'hooks/useObservable';\nimport useCdpTypes from '../hooks/useCdpTypes';\nimport useMaker from 'hooks/useMaker';\nimport useProxy from 'hooks/useProxy';\nvar initialState = {\n  step: 0,\n  selectedIlk: {\n    userGemBalance: '',\n    currency: null,\n    gem: null,\n    symbol: undefined\n  },\n  gemsToLock: '',\n  setMax: false,\n  daiToDraw: '',\n  txState: ''\n};\n\nfunction reducer(state, action) {\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case 'increment-step':\n      return _objectSpread({}, state, {\n        step: state.step + (payload && payload.by || 1)\n      });\n\n    case 'decrement-step':\n      return _objectSpread({}, state, {\n        step: state.step - (payload && payload.by || 1)\n      });\n\n    case 'set-ilk':\n      return _objectSpread({}, state, {\n        selectedIlk: {\n          gem: payload.gem,\n          symbol: payload.symbol,\n          userGemBalance: payload.gemBalance,\n          currency: payload.currency\n        }\n      });\n\n    case 'reset-ilk':\n      return _objectSpread({}, state, {\n        selectedIlk: {}\n      });\n\n    case 'form/set-gemsToLock':\n      return _objectSpread({}, state, {\n        gemsToLock: payload.value,\n        setMax: false\n      });\n\n    case 'form/set-setMax':\n      return _objectSpread({}, state, {\n        gemsToLock: payload.value,\n        setMax: true\n      });\n\n    case 'form/set-daiToDraw':\n      return _objectSpread({}, state, {\n        daiToDraw: payload.value\n      });\n\n    case 'transaction-confirmed':\n      return _objectSpread({}, state, {\n        txState: TxLifecycle.CONFIRMED\n      });\n\n    case 'reset':\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n}\n\nfunction CDPCreate(_ref) {\n  var _selectedIlk$currency,\n      _this = this;\n\n  var onClose = _ref.onClose;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      account = _useMaker.account;\n\n  var _useProxy = useProxy(),\n      proxyAddress = _useProxy.proxyAddress;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      step = _useReducer2$.step,\n      selectedIlk = _useReducer2$.selectedIlk,\n      cdpParams = _objectWithoutProperties(_useReducer2$, [\"step\", \"selectedIlk\"]),\n      dispatch = _useReducer2[1];\n\n  var _useCdpTypes = useCdpTypes(),\n      cdpTypesList = _useCdpTypes.cdpTypesList;\n\n  var collateralTypesData = watch.collateralTypesData(cdpTypesList);\n  var userVaultsList = watch.userVaultsList(account === null || account === void 0 ? void 0 : account.address);\n  var userVaultIds = userVaultsList ? userVaultsList.map(function (_ref2) {\n    var vaultId = _ref2.vaultId;\n    return vaultId;\n  }) : [];\n\n  function fairDistribAllowToLockValue(addValue) {\n    var ids = userVaultIds;\n    var curTime = Math.round(new Date().getTime() / 1000);\n    var r = watch.fairDistribAllowToLockValue(ids, addValue, curTime);\n    if (r === undefined) return true;\n    return r;\n  }\n\n  console.log(watch.collateralTypesData);\n  console.log(cdpTypesList);\n  console.log(collateralTypesData);\n\n  var _useTokenAllowance = useTokenAllowance(selectedIlk === null || selectedIlk === void 0 ? void 0 : (_selectedIlk$currency = selectedIlk.currency) === null || _selectedIlk$currency === void 0 ? void 0 : _selectedIlk$currency.symbol),\n      hasAllowance = _useTokenAllowance.hasAllowance,\n      hasSufficientAllowance = _useTokenAllowance.hasSufficientAllowance;\n\n  var balances = useWalletBalances();\n  var rawUserVaultsList = watch.userVaultsList(account === null || account === void 0 ? void 0 : account.address);\n  var isFirstVault = (rawUserVaultsList === null || rawUserVaultsList === void 0 ? void 0 : rawUserVaultsList.length) === 0 ? true : false;\n  var screens = useMemo(function () {\n    return [[lang.cdp_create.screen_titles.select_collateral, function (props) {\n      return /*#__PURE__*/React.createElement(CDPCreateSelectCollateral, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 18\n        }\n      }));\n    }], [lang.cdp_create.screen_titles.vault_management, function (props) {\n      return /*#__PURE__*/React.createElement(CDPCreateSetAllowance, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 18\n        }\n      }));\n    }], [lang.cdp_create.screen_titles.generate_dai, function (props) {\n      return /*#__PURE__*/React.createElement(CDPCreateDeposit, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 18\n        }\n      }));\n    }], [lang.cdp_create.screen_titles.confirmation, function (props) {\n      return /*#__PURE__*/React.createElement(CDPCreateConfirmCDP, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 18\n        }\n      }));\n    }]];\n  }, [lang]);\n  var screenProps = {\n    selectedIlk: selectedIlk,\n    cdpParams: cdpParams,\n    isFirstVault: isFirstVault,\n    dispatch: dispatch,\n    hasSufficientAllowance: hasSufficientAllowance,\n    hasAllowance: hasAllowance,\n    proxyAddress: proxyAddress,\n    balances: balances,\n    collateralTypesData: collateralTypesData,\n    onClose: onClose,\n    fairDistribAllowToLockValue: fairDistribAllowToLockValue\n  };\n  return /*#__PURE__*/React.createElement(StepperUI, {\n    step: step,\n    steps: screens.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          title = _ref4[0];\n\n      return title;\n    }),\n    renderStepperHeader: function renderStepperHeader() {\n      return /*#__PURE__*/React.createElement(StepperHeader, {\n        onClose: onClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 34\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, screens.map(function (_ref5, screenIndex) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        getComponent = _ref6[1];\n\n    return getComponent(_objectSpread({}, screenProps, {\n      screenIndex: screenIndex,\n      key: screenIndex\n    }));\n  }));\n}\n\n__signature__(CDPCreate, \"useLanguage{{ lang }}\\nuseMaker{{ account }}\\nuseProxy{{ proxyAddress }}\\nuseReducer{[{ step, selectedIlk, ...cdpParams }, dispatch](initialState)}\\nuseCdpTypes{{ cdpTypesList }}\\nuseTokenAllowance{{ hasAllowance, hasSufficientAllowance }}\\nuseWalletBalances{balances}\\nuseMemo{screens}\", function () {\n  return [useLanguage, useMaker, useProxy, useCdpTypes, useTokenAllowance, useWalletBalances];\n});\n\nvar _default = hot(CDPCreate);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreate.js\");\n  reactHotLoader.register(reducer, \"reducer\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreate.js\");\n  reactHotLoader.register(CDPCreate, \"CDPCreate\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreate.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreate.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreate.js"],"names":["React","useReducer","useMemo","hot","StepperUI","StepperHeader","CDPCreateSelectCollateral","CDPCreateSetAllowance","CDPCreateConfirmCDP","CDPCreateDeposit","useLanguage","TxLifecycle","useTokenAllowance","useWalletBalances","watch","useCdpTypes","useMaker","useProxy","initialState","step","selectedIlk","userGemBalance","currency","gem","symbol","undefined","gemsToLock","setMax","daiToDraw","txState","reducer","state","action","type","payload","by","gemBalance","value","CONFIRMED","CDPCreate","onClose","lang","account","proxyAddress","cdpParams","dispatch","cdpTypesList","collateralTypesData","userVaultsList","address","userVaultIds","map","vaultId","fairDistribAllowToLockValue","addValue","ids","curTime","Math","round","Date","getTime","r","console","log","hasAllowance","hasSufficientAllowance","balances","rawUserVaultsList","isFirstVault","length","screens","cdp_create","screen_titles","select_collateral","props","vault_management","generate_dai","confirmation","screenProps","title","screenIndex","getComponent","key"],"mappings":"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","sourcesContent":["import React, { useReducer, useMemo } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport StepperUI from 'components/StepperUI';\nimport StepperHeader from 'components/StepperHeader';\nimport {\n  CDPCreateSelectCollateral,\n  CDPCreateSetAllowance,\n  CDPCreateConfirmCDP,\n  CDPCreateDeposit\n} from 'components/CDPCreateScreens';\nimport useLanguage from 'hooks/useLanguage';\nimport { TxLifecycle } from 'utils/constants';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport { watch } from 'hooks/useObservable';\nimport useCdpTypes from '../hooks/useCdpTypes';\nimport useMaker from 'hooks/useMaker';\nimport useProxy from 'hooks/useProxy';\n\nconst initialState = {\n  step: 0,\n  selectedIlk: {\n    userGemBalance: '',\n    currency: null,\n    gem: null,\n    symbol: undefined\n  },\n  gemsToLock: '',\n  setMax: false,\n  daiToDraw: '',\n  txState: ''\n};\n\nfunction reducer(state, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case 'increment-step':\n      return {\n        ...state,\n        step: state.step + ((payload && payload.by) || 1)\n      };\n    case 'decrement-step':\n      return {\n        ...state,\n        step: state.step - ((payload && payload.by) || 1)\n      };\n    case 'set-ilk':\n      return {\n        ...state,\n        selectedIlk: {\n          gem: payload.gem,\n          symbol: payload.symbol,\n          userGemBalance: payload.gemBalance,\n          currency: payload.currency\n        }\n      };\n    case 'reset-ilk':\n      return {\n        ...state,\n        selectedIlk: {}\n      };\n    case 'form/set-gemsToLock':\n      return { ...state, gemsToLock: payload.value,  setMax: false };\n    case 'form/set-setMax':\n      return { ...state, gemsToLock: payload.value, setMax: true };\n    case 'form/set-daiToDraw':\n      return { ...state, daiToDraw: payload.value};\n    case 'transaction-confirmed':\n      return { ...state, txState: TxLifecycle.CONFIRMED };\n    case 'reset':\n      return { ...initialState };\n    default:\n      return state;\n  }\n}\n\nfunction CDPCreate({ onClose }) {\n  const { lang } = useLanguage();\n  const { account } = useMaker();\n  const { proxyAddress } = useProxy();\n  let [{ step, selectedIlk, ...cdpParams }, dispatch] = useReducer(\n    reducer,\n    initialState\n  );\n  const { cdpTypesList } = useCdpTypes();\n  const collateralTypesData = watch.collateralTypesData(cdpTypesList);\n\n  const userVaultsList = watch.userVaultsList(account?.address);\n  const userVaultIds = userVaultsList\n    ? userVaultsList.map(({ vaultId }) => vaultId)\n    : [];\n\n  function fairDistribAllowToLockValue(addValue) {\n    const ids = userVaultIds;\n    const curTime = Math.round(new Date().getTime() / 1000);\n    const r = watch.fairDistribAllowToLockValue(ids, addValue, curTime);\n    if (r === undefined) return true;\n    return r;\n  }\n\n  console.log(watch.collateralTypesData);\n\n  console.log(cdpTypesList);\n  console.log(collateralTypesData);\n\n  const { hasAllowance, hasSufficientAllowance } = useTokenAllowance(\n    selectedIlk?.currency?.symbol\n  );\n\n  const balances = useWalletBalances();\n\n  const rawUserVaultsList = watch.userVaultsList(account?.address);\n  const isFirstVault = rawUserVaultsList?.length === 0 ? true : false;\n\n  const screens = useMemo(\n    () => [\n      [\n        lang.cdp_create.screen_titles.select_collateral,\n        props => <CDPCreateSelectCollateral {...props} />\n      ],\n      [\n        lang.cdp_create.screen_titles.vault_management,\n        props => <CDPCreateSetAllowance {...props} />\n      ],\n      [\n        lang.cdp_create.screen_titles.generate_dai,\n        props => <CDPCreateDeposit {...props} />\n      ],\n      [\n        lang.cdp_create.screen_titles.confirmation,\n        props => <CDPCreateConfirmCDP {...props} />\n      ]\n    ],\n    [lang]\n  );\n\n  const screenProps = {\n    selectedIlk,\n    cdpParams,\n    isFirstVault,\n    dispatch,\n    hasSufficientAllowance,\n    hasAllowance,\n    proxyAddress,\n    balances,\n    collateralTypesData,\n    onClose,\n    fairDistribAllowToLockValue\n  };\n\n  return (\n    <StepperUI\n      step={step}\n      steps={screens.map(([title]) => title)}\n      renderStepperHeader={() => <StepperHeader onClose={onClose} />}\n    >\n      {screens.map(([, getComponent], screenIndex) =>\n        getComponent({ ...screenProps, screenIndex, key: screenIndex })\n      )}\n    </StepperUI>\n  );\n}\n\nexport default hot(CDPCreate);\n"]},"metadata":{},"sourceType":"module"}