{"ast":null,"code":"'use strict';\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar createPayload = require('../util/create-payload.js');\n\nmodule.exports = SubProvider; // this is the base class for a subprovider -- mostly helpers\n\nfunction SubProvider() {}\n\nSubProvider.prototype.setEngine = function (engine) {\n  var self = this;\n  if (self.engine) return;\n  self.engine = engine;\n  engine.on('block', function (block) {\n    self.currentBlock = block;\n  });\n};\n\nSubProvider.prototype.handleRequest = function (payload, next, end) {\n  throw new Error('Subproviders should override `handleRequest`.');\n};\n\nSubProvider.prototype.emitPayload = function (payload, cb) {\n  var self = this;\n  self.engine.sendAsync(createPayload(payload), cb);\n};\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SubProvider, \"SubProvider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/web3-provider-engine/dist/es5/subproviders/subprovider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}