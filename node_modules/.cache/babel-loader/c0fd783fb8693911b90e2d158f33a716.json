{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { toHex, fromRay, fromWei } from '../utils';\nimport BigNumber from 'bignumber.js';\nimport { WAD } from '../constants';\nimport { LIQUIDATOR_ADDRESS, LIQUIDATION_PENALTY, MAX_AUCTION_LOT_SIZE } from './_constants';\n\nvar validateCollateralTypeName = function validateCollateralTypeName(name) {\n  return !name && 'Invalid collateral type name';\n};\n\nexport var catIlks = {\n  generate: function generate(collateralTypeName) {\n    return {\n      id: \"MCD_CAT.ilks(\".concat(collateralTypeName, \")\"),\n      contract: 'MCD_CAT',\n      call: ['ilks(bytes32)(address,uint256,uint256)', toHex(collateralTypeName)]\n    };\n  },\n  validate: {\n    args: validateCollateralTypeName\n  },\n  returns: [[LIQUIDATOR_ADDRESS], [LIQUIDATION_PENALTY, function (v) {\n    return fromWei(BigNumber(v).minus(WAD));\n  }], [MAX_AUCTION_LOT_SIZE, function (v) {\n    return BigNumber(v).shiftedBy(-18);\n  }]]\n};\nvar _default = {\n  catIlks: catIlks\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(validateCollateralTypeName, \"validateCollateralTypeName\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cat.js\");\n  reactHotLoader.register(catIlks, \"catIlks\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cat.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cat.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cat.js"],"names":["toHex","fromRay","fromWei","BigNumber","WAD","LIQUIDATOR_ADDRESS","LIQUIDATION_PENALTY","MAX_AUCTION_LOT_SIZE","validateCollateralTypeName","name","catIlks","generate","collateralTypeName","id","contract","call","validate","args","returns","v","minus","shiftedBy"],"mappings":";;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,OAAhB,EAAyBC,OAAzB,QAAwC,UAAxC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,oBAHF,QAIO,cAJP;;AAMA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,IAAI;AAAA,SACrC,CAACA,IAAD,IAAS,8BAD4B;AAAA,CAAvC;;AAGA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,QAAQ,EAAE,kBAAAC,kBAAkB;AAAA,WAAK;AAC/BC,MAAAA,EAAE,yBAAkBD,kBAAlB,MAD6B;AAE/BE,MAAAA,QAAQ,EAAE,SAFqB;AAG/BC,MAAAA,IAAI,EAAE,CAAC,wCAAD,EAA2Cf,KAAK,CAACY,kBAAD,CAAhD;AAHyB,KAAL;AAAA,GADP;AAMrBI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAET;AADE,GANW;AASrBU,EAAAA,OAAO,EAAE,CACP,CAACb,kBAAD,CADO,EAEP,CAACC,mBAAD,EAAsB,UAAAa,CAAC;AAAA,WAAIjB,OAAO,CAACC,SAAS,CAACgB,CAAD,CAAT,CAAaC,KAAb,CAAmBhB,GAAnB,CAAD,CAAX;AAAA,GAAvB,CAFO,EAGP,CAACG,oBAAD,EAAuB,UAAAY,CAAC;AAAA,WAAIhB,SAAS,CAACgB,CAAD,CAAT,CAAaE,SAAb,CAAuB,CAAC,EAAxB,CAAJ;AAAA,GAAxB,CAHO;AATY,CAAhB;eAgBQ;AACbX,EAAAA,OAAO,EAAPA;AADa,C;AAAf;;;;;;;;;;0BAnBMF,0B;0BAGOE,O","sourcesContent":["import { toHex, fromRay, fromWei } from '../utils';\nimport BigNumber from 'bignumber.js';\nimport { WAD } from '../constants';\n\nimport {\n  LIQUIDATOR_ADDRESS,\n  LIQUIDATION_PENALTY,\n  MAX_AUCTION_LOT_SIZE\n} from './_constants';\n\nconst validateCollateralTypeName = name =>\n  !name && 'Invalid collateral type name';\n\nexport const catIlks = {\n  generate: collateralTypeName => ({\n    id: `MCD_CAT.ilks(${collateralTypeName})`,\n    contract: 'MCD_CAT',\n    call: ['ilks(bytes32)(address,uint256,uint256)', toHex(collateralTypeName)]\n  }),\n  validate: {\n    args: validateCollateralTypeName\n  },\n  returns: [\n    [LIQUIDATOR_ADDRESS],\n    [LIQUIDATION_PENALTY, v => fromWei(BigNumber(v).minus(WAD))],\n    [MAX_AUCTION_LOT_SIZE, v => BigNumber(v).shiftedBy(-18)]\n  ]\n};\n\nexport default {\n  catIlks\n};\n"]},"metadata":{},"sourceType":"module"}