{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateSelectCollateral.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Box, Grid, Table, Radio, Overflow, Card } from '@makerdao/ui-components-core';\nimport { TextBlock } from 'components/Typography';\nimport { formatter } from 'utils/ui';\nimport useCdpTypes from 'hooks/useCdpTypes';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport ScreenFooter from '../ScreenFooter';\nimport ScreenHeader from '../ScreenHeader';\nimport BigNumber from 'bignumber.js';\nimport { getColor } from 'styles/theme';\nimport { ReactComponent as ExternalLinkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/external-link.svg\";\n\nvar CDPCreateSelectCollateralSidebar = function CDPCreateSelectCollateralSidebar() {\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  return /*#__PURE__*/React.createElement(Box, {\n    px: \"l\",\n    py: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: {\n      s: 'minmax(0, 1fr)',\n      l: '1fr'\n    },\n    gridGap: \"m\",\n    gridColumnGap: \"50px\",\n    my: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, [[lang.stability_fee, lang.cdp_create.stability_fee_description]].map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        title = _ref2[0],\n        text = _ref2[1];\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      mb: \"m\",\n      key: title,\n      gridColumnGap: \"xs\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextBlock, {\n      style: {\n        fontSize: '18px',\n        color: getColor('whiteText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, title), /*#__PURE__*/React.createElement(TextBlock, {\n      style: {\n        fontSize: '14px',\n        color: getColor('greyText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, text));\n  })));\n};\n\n__signature__(CDPCreateSelectCollateralSidebar, \"useLanguage{{ lang }}\", function () {\n  return [useLanguage];\n});\n\nvar _StyledRadio = _styled(Radio).withConfig({\n  displayName: \"CDPCreateSelectCollateral___StyledRadio\",\n  componentId: \"sc-160gw9m-0\"\n})({\n  appearance: 'none'\n});\n\nvar _StyledTd = _styled(\"td\").withConfig({\n  displayName: \"CDPCreateSelectCollateral___StyledTd\",\n  componentId: \"sc-160gw9m-1\"\n})([\"text-align:right\"]);\n\nfunction IlkTableRow(_ref3) {\n  var ilk = _ref3.ilk,\n      checked = _ref3.checked,\n      gemBalance = _ref3.gemBalance,\n      isFirstVault = _ref3.isFirstVault,\n      dispatch = _ref3.dispatch,\n      ilkData = _ref3.ilkData;\n\n  var _useAnalytics = useAnalytics('SelectCollateral', 'VaultCreate'),\n      trackInputChange = _useAnalytics.trackInputChange;\n\n  var annualStabilityFee = ilkData.annualStabilityFee,\n      collateralValueForAmount = ilkData.collateralValueForAmount;\n\n  function selectIlk() {\n    return _selectIlk.apply(this, arguments);\n  }\n\n  function _selectIlk() {\n    _selectIlk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              trackInputChange('CollateralType', {\n                selectedCollateral: ilk.symbol,\n                isFirstVault: isFirstVault\n              });\n              dispatch({\n                type: 'set-ilk',\n                payload: {\n                  gem: ilk.gem,\n                  symbol: ilk.symbol,\n                  gemBalance: gemBalance,\n                  currency: ilk.currency\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _selectIlk.apply(this, arguments);\n  }\n\n  var disabled = ilk.gem === 'TUSD';\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    style: disabled ? {\n      color: '#6F7A96',\n      borderColor: getColor('border')\n    } : {\n      whiteSpace: 'nowrap',\n      borderColor: getColor('border')\n    },\n    onClick: function onClick() {\n      return !disabled && selectIlk();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledRadio, {\n    disabled: disabled,\n    checked: checked,\n    readOnly: true,\n    mr: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, ilk.symbol), disabled && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: '11px',\n      paddingBottom: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Unavailable due to a token upgrade\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#00dcdc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"\".concat(ilk.link).concat(ilk.token1, \"/\").concat(ilk.token2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, ilk.platform, \" \", /*#__PURE__*/React.createElement(ExternalLinkIcon, {\n    style: {\n      fill: '#00dcdc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 28\n    }\n  })))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, formatter(annualStabilityFee, {\n    percentage: true,\n    rounding: BigNumber.ROUND_HALF_UP\n  }), ' ', \"%\"), /*#__PURE__*/React.createElement(_StyledTd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"\".concat(formatter(collateralValueForAmount(gemBalance)), \"  USD\")));\n}\n\n__signature__(IlkTableRow, \"useAnalytics{{ trackInputChange }}\", function () {\n  return [useAnalytics];\n});\n\nvar _StyledTable = _styled(Table).withConfig({\n  displayName: \"CDPCreateSelectCollateral___StyledTable\",\n  componentId: \"sc-160gw9m-2\"\n})([\"th{color:\", \";}td{padding-right:10px;color:\", \";}\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n});\n\nvar _StyledTr = _styled(\"tr\").withConfig({\n  displayName: \"CDPCreateSelectCollateral___StyledTr\",\n  componentId: \"sc-160gw9m-3\"\n})([\"white-space:nowrap;\"]);\n\nvar _StyledTh = _styled(\"th\").withConfig({\n  displayName: \"CDPCreateSelectCollateral___StyledTh\",\n  componentId: \"sc-160gw9m-4\"\n})([\"text-align:right\"]);\n\nvar CDPCreateSelectCollateral = function CDPCreateSelectCollateral(_ref4) {\n  var selectedIlk = _ref4.selectedIlk,\n      isFirstVault = _ref4.isFirstVault,\n      hasAllowance = _ref4.hasAllowance,\n      proxyAddress = _ref4.proxyAddress,\n      balances = _ref4.balances,\n      collateralTypesData = _ref4.collateralTypesData,\n      dispatch = _ref4.dispatch,\n      onClose = _ref4.onClose;\n\n  var _useAnalytics2 = useAnalytics('SelectCollateral', 'VaultCreate'),\n      trackBtnClick = _useAnalytics2.trackBtnClick;\n\n  var _useLanguage2 = useLanguage(),\n      lang = _useLanguage2.lang;\n\n  var _useCdpTypes = useCdpTypes(),\n      cdpTypes = _useCdpTypes.cdpTypes;\n\n  var hasAllowanceAndProxy = hasAllowance && !!proxyAddress;\n  return /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"1040px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeader, {\n    title: lang.cdp_create.select_title,\n    title2: lang.cdp_create.select_title2,\n    text: lang.cdp_create.select_text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    style: {\n      background: getColor('cardBg'),\n      padding: '30px',\n      borderRadius: '13px'\n    },\n    gridTemplateColumns: {\n      s: 'minmax(0, 1fr)',\n      l: '1fr'\n    },\n    gridGap: \"m\",\n    my: \"l\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    px: \"l\",\n    py: \"l\",\n    style: {\n      background: getColor('cardBg'),\n      borderColor: getColor('border')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Overflow, {\n    x: \"scroll\",\n    y: \"visible\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_StyledTable, {\n    width: \"100%\",\n    _css: getColor('greyText'),\n    _css2: getColor('whiteText'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_StyledTr, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, lang.collateral_type), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, lang.link_pool), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, lang.stability_fee), /*#__PURE__*/React.createElement(_StyledTh, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, lang.your_balance))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, cdpTypes.map(function (ilk) {\n    return collateralTypesData && balances[ilk.gem] && /*#__PURE__*/React.createElement(IlkTableRow, {\n      key: ilk.symbol,\n      checked: ilk.symbol === selectedIlk.symbol,\n      dispatch: dispatch,\n      ilk: ilk,\n      gemBalance: balances[ilk.gem],\n      isFirstVault: isFirstVault,\n      ilkData: collateralTypesData.find(function (x) {\n        return x.symbol === ilk.symbol;\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    });\n  })))))), /*#__PURE__*/React.createElement(CDPCreateSelectCollateralSidebar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ScreenFooter, {\n    onNext: function onNext() {\n      trackBtnClick('Next', {\n        selectedCollateral: selectedIlk.symbol,\n        isFirstVault: isFirstVault\n      });\n      dispatch({\n        type: 'increment-step',\n        payload: {\n          by: hasAllowanceAndProxy ? 2 : 1\n        }\n      });\n    },\n    onBack: function onBack() {\n      onClose();\n    },\n    canGoBack: true,\n    canProgress: !!selectedIlk.symbol,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(CDPCreateSelectCollateral, \"useAnalytics{{ trackBtnClick }}\\nuseLanguage{{ lang }}\\nuseCdpTypes{{ cdpTypes }}\", function () {\n  return [useAnalytics, useLanguage, useCdpTypes];\n});\n\nvar _default = CDPCreateSelectCollateral;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CDPCreateSelectCollateralSidebar, \"CDPCreateSelectCollateralSidebar\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateSelectCollateral.js\");\n  reactHotLoader.register(IlkTableRow, \"IlkTableRow\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateSelectCollateral.js\");\n  reactHotLoader.register(CDPCreateSelectCollateral, \"CDPCreateSelectCollateral\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateSelectCollateral.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateSelectCollateral.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateSelectCollateral.js"],"names":["React","Box","Grid","Table","Radio","Overflow","Card","TextBlock","formatter","useCdpTypes","useLanguage","useAnalytics","ScreenFooter","ScreenHeader","BigNumber","getColor","CDPCreateSelectCollateralSidebar","lang","s","l","stability_fee","cdp_create","stability_fee_description","map","title","text","fontSize","color","appearance","IlkTableRow","ilk","checked","gemBalance","isFirstVault","dispatch","ilkData","trackInputChange","annualStabilityFee","collateralValueForAmount","selectIlk","selectedCollateral","symbol","type","payload","gem","currency","disabled","borderColor","whiteSpace","paddingBottom","link","token1","token2","platform","fill","percentage","rounding","ROUND_HALF_UP","CDPCreateSelectCollateral","selectedIlk","hasAllowance","proxyAddress","balances","collateralTypesData","onClose","trackBtnClick","cdpTypes","hasAllowanceAndProxy","select_title","select_title2","select_text","background","padding","borderRadius","collateral_type","link_pool","your_balance","find","x","by"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Grid,\n  Table,\n  Radio,\n  Overflow,\n  Card\n} from '@makerdao/ui-components-core';\nimport { TextBlock } from 'components/Typography';\nimport { formatter } from 'utils/ui';\nimport useCdpTypes from 'hooks/useCdpTypes';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport ScreenFooter from '../ScreenFooter';\nimport ScreenHeader from '../ScreenHeader';\nimport BigNumber from 'bignumber.js';\nimport { getColor } from 'styles/theme';\nimport { ReactComponent as ExternalLinkIcon } from 'images/external-link.svg';\n\nconst CDPCreateSelectCollateralSidebar = () => {\n  const { lang } = useLanguage();\n  return (\n    <Box px=\"l\" py=\"m\">\n      <Grid\n        gridTemplateColumns={{ s: 'minmax(0, 1fr)', l: '1fr' }}\n        gridGap=\"m\"\n        gridColumnGap=\"50px\"\n        my=\"l\"\n      >\n        {[[lang.stability_fee, lang.cdp_create.stability_fee_description]].map(\n          ([title, text]) => (\n            <Grid mb=\"m\" key={title} gridColumnGap=\"xs\">\n              <TextBlock\n                style={{ fontSize: '18px', color: getColor('whiteText') }}\n              >\n                {title}\n              </TextBlock>\n              <TextBlock\n                style={{ fontSize: '14px', color: getColor('greyText') }}\n              >\n                {text}\n              </TextBlock>\n            </Grid>\n          )\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nfunction IlkTableRow({\n  ilk,\n  checked,\n  gemBalance,\n  isFirstVault,\n  dispatch,\n  ilkData\n}) {\n  const { trackInputChange } = useAnalytics('SelectCollateral', 'VaultCreate');\n  const {\n    annualStabilityFee,\n    collateralValueForAmount\n  } = ilkData;\n\n  async function selectIlk() {\n    trackInputChange('CollateralType', {\n      selectedCollateral: ilk.symbol,\n      isFirstVault\n    });\n    dispatch({\n      type: 'set-ilk',\n      payload: {\n        gem: ilk.gem,\n        symbol: ilk.symbol,\n        gemBalance,\n        currency: ilk.currency\n      }\n    });\n  }\n  const disabled = ilk.gem === 'TUSD';\n\n  return (\n    <tr\n      style={\n        disabled\n          ? { color: '#6F7A96', borderColor: getColor('border') }\n          : { whiteSpace: 'nowrap', borderColor: getColor('border') }\n      }\n      onClick={() => !disabled && selectIlk()}\n    >\n      <td>\n        <Radio\n          disabled={disabled}\n          checked={checked}\n          readOnly\n          mr=\"xs\"\n          css={{\n            appearance: 'none'\n          }}\n        />\n      </td>\n      <td>\n        <div>{ilk.symbol}</div>\n\n        {disabled && (\n          <div style={{ fontSize: '11px', paddingBottom: '5px' }}>\n            Unavailable due to a token upgrade\n          </div>\n        )}\n      </td>\n      <td>\n        <div style={{ color: '#00dcdc' }}>\n          <a \n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`${ilk.link}${ilk.token1}/${ilk.token2}`}>\n            {ilk.platform} <ExternalLinkIcon style={{ fill: '#00dcdc' }} />\n          </a>\n        </div>\n      </td>\n      <td>\n        {formatter(annualStabilityFee, {\n          percentage: true,\n          rounding: BigNumber.ROUND_HALF_UP\n        })}{' '}\n        %\n      </td>\n      <td css=\"text-align: right\">\n        {`${formatter(collateralValueForAmount(gemBalance))}  USD`}\n      </td>\n    </tr>\n  );\n}\n\nconst CDPCreateSelectCollateral = ({\n  selectedIlk,\n  isFirstVault,\n  hasAllowance,\n  proxyAddress,\n  balances,\n  collateralTypesData,\n  dispatch,\n  onClose\n}) => {\n  const { trackBtnClick } = useAnalytics('SelectCollateral', 'VaultCreate');\n  const { lang } = useLanguage();\n  const { cdpTypes } = useCdpTypes();\n  const hasAllowanceAndProxy = hasAllowance && !!proxyAddress;\n\n  return (\n    <Box maxWidth=\"1040px\">\n      <ScreenHeader\n        title={lang.cdp_create.select_title}\n        title2={lang.cdp_create.select_title2}\n        text={lang.cdp_create.select_text}\n      ></ScreenHeader>\n      <Grid\n        style={{\n          background: getColor('cardBg'),\n          padding: '30px',\n          borderRadius: '13px'\n        }}\n        gridTemplateColumns={{ s: 'minmax(0, 1fr)', l: '1fr' }}\n        gridGap=\"m\"\n        my=\"l\"\n      >\n        <div>\n          <Card\n            px=\"l\"\n            py=\"l\"\n            style={{\n              background: getColor('cardBg'),\n              borderColor: getColor('border')\n            }}\n          >\n            <Overflow x=\"scroll\" y=\"visible\">\n              <Table\n                width=\"100%\"\n                css={`\n                  th {\n                    color: ${getColor('greyText')};\n                  }\n                  td {\n                    padding-right: 10px;\n                    color: ${getColor('whiteText')};\n                  }\n                `}\n              >\n                <thead>\n                  <tr css=\"white-space: nowrap;\">\n                    <th />\n                    <th>{lang.collateral_type}</th>\n                    <th>{lang.link_pool}</th>\n                    <th>{lang.stability_fee}</th>\n                    <th css=\"text-align: right\">{lang.your_balance}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {cdpTypes.map(\n                    ilk =>\n                      collateralTypesData &&\n                      balances[ilk.gem] && (\n                        <IlkTableRow\n                          key={ilk.symbol}\n                          checked={ilk.symbol === selectedIlk.symbol}\n                          dispatch={dispatch}\n                          ilk={ilk}\n                          gemBalance={balances[ilk.gem]}\n                          isFirstVault={isFirstVault}\n                          ilkData={collateralTypesData.find(\n                            x => x.symbol === ilk.symbol\n                          )}\n                        />\n                      )\n                  )}\n                </tbody>\n              </Table>\n            </Overflow>\n          </Card>\n        </div>\n\n        <CDPCreateSelectCollateralSidebar />\n      </Grid>\n      <ScreenFooter\n        onNext={() => {\n          trackBtnClick('Next', {\n            selectedCollateral: selectedIlk.symbol,\n            isFirstVault\n          });\n          dispatch({\n            type: 'increment-step',\n            payload: { by: hasAllowanceAndProxy ? 2 : 1 }\n          });\n        }}\n        onBack={() => {\n          onClose();\n        }}\n        canGoBack={true}\n        canProgress={!!selectedIlk.symbol}\n      />\n    </Box>\n  );\n};\nexport default CDPCreateSelectCollateral;\n"]},"metadata":{},"sourceType":"module"}