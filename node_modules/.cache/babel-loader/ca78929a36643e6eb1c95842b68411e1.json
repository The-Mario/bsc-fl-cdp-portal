{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport BigNumber from 'bignumber.js';\nimport { toHex } from '../utils';\nimport { RAY } from '../constants';\nimport { ANNUAL_STABILITY_FEE, DATE_STABILITY_FEES_LAST_LEVIED, BASE_COLLATERAL_FEE } from './_constants';\nvar secondsPerYear = 60 * 60 * 24 * 365;\nexport var jugIlks = {\n  generate: function generate(collateralTypeName) {\n    return {\n      id: \"MCD_JUG.ilks(\".concat(collateralTypeName, \")\"),\n      contract: 'MCD_JUG',\n      call: ['ilks(bytes32)(uint256,uint48)', toHex(collateralTypeName)]\n    };\n  },\n  returns: [[ANNUAL_STABILITY_FEE, function (v) {\n    v = new BigNumber(v.toString()).dividedBy(RAY);\n    BigNumber.config({\n      POW_PRECISION: 100\n    });\n    return v.pow(secondsPerYear).minus(1);\n  }], [DATE_STABILITY_FEES_LAST_LEVIED, function (val) {\n    return new Date(val * 1000);\n  }]]\n};\nexport var jugBase = {\n  generate: function generate() {\n    return {\n      id: 'MCD_JUG.base',\n      contract: 'MCD_JUG',\n      call: ['base()(uint256)']\n    };\n  },\n  returns: [[BASE_COLLATERAL_FEE, function (v) {\n    return BigNumber(v);\n  }]]\n};\nvar _default = {\n  jugIlks: jugIlks,\n  jugBase: jugBase\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(secondsPerYear, \"secondsPerYear\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/jug.js\");\n  reactHotLoader.register(jugIlks, \"jugIlks\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/jug.js\");\n  reactHotLoader.register(jugBase, \"jugBase\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/jug.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/jug.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/jug.js"],"names":["BigNumber","toHex","RAY","ANNUAL_STABILITY_FEE","DATE_STABILITY_FEES_LAST_LEVIED","BASE_COLLATERAL_FEE","secondsPerYear","jugIlks","generate","collateralTypeName","id","contract","call","returns","v","toString","dividedBy","config","POW_PRECISION","pow","minus","val","Date","jugBase"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,SACEC,oBADF,EAEEC,+BAFF,EAGEC,mBAHF,QAIO,cAJP;AAMA,IAAMC,cAAc,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,GAAtC;AAEA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,QAAQ,EAAE,kBAAAC,kBAAkB;AAAA,WAAK;AAC/BC,MAAAA,EAAE,yBAAkBD,kBAAlB,MAD6B;AAE/BE,MAAAA,QAAQ,EAAE,SAFqB;AAG/BC,MAAAA,IAAI,EAAE,CAAC,+BAAD,EAAkCX,KAAK,CAACQ,kBAAD,CAAvC;AAHyB,KAAL;AAAA,GADP;AAMrBI,EAAAA,OAAO,EAAE,CACP,CACEV,oBADF,EAEE,UAAAW,CAAC,EAAI;AACHA,IAAAA,CAAC,GAAG,IAAId,SAAJ,CAAcc,CAAC,CAACC,QAAF,EAAd,EAA4BC,SAA5B,CAAsCd,GAAtC,CAAJ;AACAF,IAAAA,SAAS,CAACiB,MAAV,CAAiB;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAjB;AACA,WAAOJ,CAAC,CAACK,GAAF,CAAMb,cAAN,EAAsBc,KAAtB,CAA4B,CAA5B,CAAP;AACD,GANH,CADO,EASP,CAAChB,+BAAD,EAAkC,UAAAiB,GAAG;AAAA,WAAI,IAAIC,IAAJ,CAASD,GAAG,GAAG,IAAf,CAAJ;AAAA,GAArC,CATO;AANY,CAAhB;AAmBP,OAAO,IAAME,OAAO,GAAG;AACrBf,EAAAA,QAAQ,EAAE;AAAA,WAAO;AACfE,MAAAA,EAAE,EAAE,cADW;AAEfC,MAAAA,QAAQ,EAAE,SAFK;AAGfC,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAHS,KAAP;AAAA,GADW;AAMrBC,EAAAA,OAAO,EAAE,CAAC,CAACR,mBAAD,EAAsB,UAAAS,CAAC;AAAA,WAAId,SAAS,CAACc,CAAD,CAAb;AAAA,GAAvB,CAAD;AANY,CAAhB;eASQ;AACbP,EAAAA,OAAO,EAAPA,OADa;AAEbgB,EAAAA,OAAO,EAAPA;AAFa,C;AAAf;;;;;;;;;;0BA9BMjB,c;0BAEOC,O;0BAmBAgB,O","sourcesContent":["import BigNumber from 'bignumber.js';\nimport { toHex } from '../utils';\nimport { RAY } from '../constants';\n\nimport {\n  ANNUAL_STABILITY_FEE,\n  DATE_STABILITY_FEES_LAST_LEVIED,\n  BASE_COLLATERAL_FEE\n} from './_constants';\n\nconst secondsPerYear = 60 * 60 * 24 * 365;\n\nexport const jugIlks = {\n  generate: collateralTypeName => ({\n    id: `MCD_JUG.ilks(${collateralTypeName})`,\n    contract: 'MCD_JUG',\n    call: ['ilks(bytes32)(uint256,uint48)', toHex(collateralTypeName)]\n  }),\n  returns: [\n    [\n      ANNUAL_STABILITY_FEE,\n      v => {\n        v = new BigNumber(v.toString()).dividedBy(RAY);\n        BigNumber.config({ POW_PRECISION: 100 });\n        return v.pow(secondsPerYear).minus(1);\n      }\n    ],\n    [DATE_STABILITY_FEES_LAST_LEVIED, val => new Date(val * 1000)]\n  ]\n};\n\nexport const jugBase = {\n  generate: () => ({\n    id: 'MCD_JUG.base',\n    contract: 'MCD_JUG',\n    call: ['base()(uint256)']\n  }),\n  returns: [[BASE_COLLATERAL_FEE, v => BigNumber(v)]]\n};\n\nexport default {\n  jugIlks,\n  jugBase\n};\n"]},"metadata":{},"sourceType":"module"}