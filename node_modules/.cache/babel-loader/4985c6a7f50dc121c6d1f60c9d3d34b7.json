{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRDepositScreens/DSRDepositConfirm.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Text, Flex, Card, Checkbox, Button, Link } from '@makerdao/ui-components-core';\nimport useMaker from 'hooks/useMaker';\nimport useLanguage from 'hooks/useLanguage';\nimport { etherscanLink } from 'utils/ethereum';\nimport { networkIdToName } from 'utils/network';\nimport ScreenFooter from '../ScreenFooter';\nimport ScreenHeader from '../ScreenHeader';\nimport { prettifyNumber } from 'utils/ui';\nimport { TxLifecycle } from 'utils/constants';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport { ReactComponent as ExternalLinkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/external-link.svg\";\nimport { ReactComponent as SpaceshipIllustration } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/spaceship.svg\";\nimport { getColor } from '../../styles/theme';\n\nvar _StyledBox = _styled(Box).withConfig({\n  displayName: \"DSRDepositConfirm___StyledBox\",\n  componentId: \"sc-2a0o6n-0\"\n})([\"margin:0 auto;\"]);\n\nvar _StyledText = _styled(Text).withConfig({\n  displayName: \"DSRDepositConfirm___StyledText\",\n  componentId: \"sc-2a0o6n-1\"\n})([\"white-space:nowrap\"]);\n\nvar DSRDepositConfirmSummary = function DSRDepositConfirmSummary(_ref) {\n  var onClose = _ref.onClose,\n      depositAmount = _ref.depositAmount,\n      capturedDispatch = _ref.capturedDispatch;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasReadTOS = _useState2[0],\n      setHasReadTOS = _useState2[1];\n\n  var rows = [[lang.save.deposit_amount, \"\".concat(prettifyNumber(depositAmount), \" USDFL\")]];\n  return /*#__PURE__*/React.createElement(_StyledBox, {\n    maxWidth: \"1040px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeader, {\n    title: lang.dsr_deposit.confirm_title,\n    text: lang.save.deposit_dai_subheading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    py: {\n      s: 'm',\n      m: 'l'\n    },\n    px: {\n      s: 'm',\n      m: 'xl'\n    },\n    my: \"l\",\n    style: {\n      color: getColor('greyText'),\n      backgroundColor: getColor('cardBg'),\n      borderColor: getColor('cardBg'),\n      borderRadius: '13px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, rows.map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        title = _ref3[0],\n        value = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: title + value,\n      mt: !!index && 's',\n      pt: !!index && 's',\n      gridTemplateColumns: \"5fr 1fr\",\n      justifyItems: \"start\",\n      borderTop: index !== 0 ? '1px solid' : null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: {\n        color: getColor('greyText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(_StyledText, {\n      fontWeight: \"bold\",\n      textAlign: {\n        s: 'right',\n        m: 'left'\n      },\n      style: {\n        color: getColor('whiteText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, value));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    justifyContent: \"center\",\n    mt: \"l\",\n    alignItems: \"center\",\n    gridColumnGap: \"xs\",\n    gridTemplateColumns: \"auto auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: hasReadTOS,\n    onChange: function onChange() {\n      return setHasReadTOS(function (state) {\n        return !state;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.terms_of_service_text, /*#__PURE__*/React.createElement(Link, {\n    href: \"/terms\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, lang.terms_of_service))))), /*#__PURE__*/React.createElement(ScreenFooter, {\n    canProgress: hasReadTOS,\n    onNext: function onNext() {\n      return capturedDispatch({\n        type: 'increment-step'\n      });\n    },\n    onBack: onClose,\n    continueText: lang.actions.deposit,\n    secondaryButtonText: lang.actions.skip,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(DSRDepositConfirmSummary, \"useLanguage{{ lang }}\\nuseState{[hasReadTOS, setHasReadTOS](false)}\", function () {\n  return [useLanguage];\n});\n\nvar _StyledBox2 = _styled(Box).withConfig({\n  displayName: \"DSRDepositConfirm___StyledBox2\",\n  componentId: \"sc-2a0o6n-2\"\n})([\"margin:0 auto;\"]);\n\nvar DSRDepositWait = function DSRDepositWait(_ref4) {\n  var hash = _ref4.hash,\n      onClose = _ref4.onClose,\n      txState = _ref4.txState;\n\n  var _useLanguage2 = useLanguage(),\n      lang = _useLanguage2.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var _useState3 = useState('8 minutes'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      waitTime = _useState4[0],\n      setWaitTime = _useState4[1];\n\n  var networkId = maker.service('web3').networkId();\n  var isTestchain = ![1, 42].includes(networkId);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var waitTime, minutes, seconds, waitTimeText;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return maker.service('gas').getWaitTime('fast');\n\n            case 2:\n              waitTime = _context.sent;\n              minutes = Math.round(waitTime);\n              seconds = Math.round(waitTime * 6) * 10;\n              waitTimeText = waitTime < 1 ? \"\".concat(seconds, \" \").concat(lang.cdp_create.seconds_wait_time) : \"\".concat(minutes, \" \").concat(minutes === 1 ? lang.cdp_create.minutes_wait_time_singular : lang.minutes_wait_time_plural);\n              setWaitTime(waitTimeText);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  });\n  return /*#__PURE__*/React.createElement(_StyledBox2, {\n    maxWidth: \"1040px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeader, {\n    title: txState === TxLifecycle.CONFIRMED ? lang.dsr_deposit.post_confirmed_title : lang.dsr_deposit.confirmed_title,\n    text: txState === TxLifecycle.CONFIRMED ? lang.cdp_create.post_confirmed_text : lang.formatString(lang.cdp_create.confirmed_text, waitTime),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    my: \"l\",\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    m: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SpaceshipIllustration, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    my: \"l\",\n    textAlign: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, isTestchain ? /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, lang.cdp_create.tx_hash), /*#__PURE__*/React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, hash)) : /*#__PURE__*/React.createElement(Link, {\n    target: \"_blank\",\n    href: etherscanLink(hash, networkIdToName(networkId)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, lang.cdp_create.view_tx_details, \" \", /*#__PURE__*/React.createElement(ExternalLinkIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 51\n    }\n  }))), /*#__PURE__*/React.createElement(Flex, {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    width: \"145px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, lang.exit)))));\n};\n\n__signature__(DSRDepositWait, \"useLanguage{{ lang }}\\nuseMaker{{ maker }}\\nuseState{[waitTime, setWaitTime]('8 minutes')}\\nuseEffect{}\", function () {\n  return [useLanguage, useMaker];\n});\n\nvar DSRDepositConfirm = function DSRDepositConfirm(_ref6) {\n  var dispatch = _ref6.dispatch,\n      onClose = _ref6.onClose,\n      depositAmount = _ref6.depositAmount,\n      txState = _ref6.txState;\n\n  var _useMaker2 = useMaker(),\n      maker = _useMaker2.maker;\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      depositDaiTxHash = _useState6[0],\n      setDepositDaiTxHash = _useState6[1];\n\n  function capturedDispatch(_x) {\n    return _capturedDispatch.apply(this, arguments);\n  }\n\n  function _capturedDispatch() {\n    _capturedDispatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n      var type, txObject, txMgr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = payload.type;\n\n              if (!(type !== 'increment-step')) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", dispatch(payload));\n\n            case 3:\n              txObject = maker.service('mcd:savings').join(USDFL(depositAmount));\n              txMgr = maker.service('transactionManager');\n              txMgr.listen(txObject, {\n                pending: function pending(tx) {\n                  return setDepositDaiTxHash(tx.hash);\n                },\n                confirmed: function confirmed() {\n                  return dispatch({\n                    type: 'transaction-confirmed'\n                  });\n                }\n              });\n              _context2.next = 8;\n              return txMgr.confirm(txObject, 1);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _capturedDispatch.apply(this, arguments);\n  }\n\n  if (depositDaiTxHash) return /*#__PURE__*/React.createElement(DSRDepositWait, {\n    hash: depositDaiTxHash,\n    onClose: onClose,\n    txState: txState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(DSRDepositConfirmSummary, {\n    capturedDispatch: capturedDispatch,\n    depositAmount: depositAmount,\n    onClose: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  });\n};\n\n__signature__(DSRDepositConfirm, \"useMaker{{ maker }}\\nuseState{[depositDaiTxHash, setDepositDaiTxHash](null)}\", function () {\n  return [useMaker];\n});\n\nvar _default = DSRDepositConfirm;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DSRDepositConfirmSummary, \"DSRDepositConfirmSummary\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRDepositScreens/DSRDepositConfirm.js\");\n  reactHotLoader.register(DSRDepositWait, \"DSRDepositWait\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRDepositScreens/DSRDepositConfirm.js\");\n  reactHotLoader.register(DSRDepositConfirm, \"DSRDepositConfirm\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRDepositScreens/DSRDepositConfirm.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRDepositScreens/DSRDepositConfirm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRDepositScreens/DSRDepositConfirm.js"],"names":["React","useState","useEffect","Box","Grid","Text","Flex","Card","Checkbox","Button","Link","useMaker","useLanguage","etherscanLink","networkIdToName","ScreenFooter","ScreenHeader","prettifyNumber","TxLifecycle","USDFL","getColor","DSRDepositConfirmSummary","onClose","depositAmount","capturedDispatch","lang","hasReadTOS","setHasReadTOS","rows","save","deposit_amount","dsr_deposit","confirm_title","deposit_dai_subheading","s","m","color","backgroundColor","borderColor","borderRadius","map","index","title","value","state","formatString","terms_of_service_text","terms_of_service","type","actions","deposit","skip","DSRDepositWait","hash","txState","maker","waitTime","setWaitTime","networkId","service","isTestchain","includes","getWaitTime","minutes","Math","round","seconds","waitTimeText","cdp_create","seconds_wait_time","minutes_wait_time_singular","minutes_wait_time_plural","CONFIRMED","post_confirmed_title","confirmed_title","post_confirmed_text","confirmed_text","tx_hash","view_tx_details","exit","DSRDepositConfirm","dispatch","depositDaiTxHash","setDepositDaiTxHash","payload","txObject","join","txMgr","listen","pending","tx","confirmed","confirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Grid,\n  Text,\n  Flex,\n  Card,\n  Checkbox,\n  Button,\n  Link\n} from '@makerdao/ui-components-core';\nimport useMaker from 'hooks/useMaker';\nimport useLanguage from 'hooks/useLanguage';\nimport { etherscanLink } from 'utils/ethereum';\nimport { networkIdToName } from 'utils/network';\nimport ScreenFooter from '../ScreenFooter';\nimport ScreenHeader from '../ScreenHeader';\nimport { prettifyNumber } from 'utils/ui';\nimport { TxLifecycle } from 'utils/constants';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\n\nimport { ReactComponent as ExternalLinkIcon } from 'images/external-link.svg';\nimport { ReactComponent as SpaceshipIllustration } from 'images/spaceship.svg';\nimport { getColor } from '../../styles/theme';\n\nconst DSRDepositConfirmSummary = ({\n  onClose,\n  depositAmount,\n  capturedDispatch\n}) => {\n  const { lang } = useLanguage();\n  const [hasReadTOS, setHasReadTOS] = useState(false);\n\n  const rows = [\n    [lang.save.deposit_amount, `${prettifyNumber(depositAmount)} USDFL`]\n  ];\n  return (\n    <Box\n      maxWidth=\"1040px\"\n      css={`\n        margin: 0 auto;\n      `}\n    >\n      <ScreenHeader\n        title={lang.dsr_deposit.confirm_title}\n        text={lang.save.deposit_dai_subheading}\n      />\n      <Card\n        py={{ s: 'm', m: 'l' }}\n        px={{ s: 'm', m: 'xl' }}\n        my=\"l\"\n        style={{\n          color: getColor('greyText'),\n          backgroundColor: getColor('cardBg'),\n          borderColor: getColor('cardBg'),\n          borderRadius: '13px'\n        }}\n      >\n        <Grid>\n          {rows.map(([title, value], index) => {\n            return (\n              <Grid\n                key={title + value}\n                mt={!!index && 's'}\n                pt={!!index && 's'}\n                gridTemplateColumns=\"5fr 1fr\"\n                justifyItems=\"start\"\n                borderTop={index !== 0 ? '1px solid' : null}\n              >\n                <Text style={{ color: getColor('greyText') }}>{title}</Text>\n                <Text\n                  fontWeight=\"bold\"\n                  css=\"white-space: nowrap\"\n                  textAlign={{ s: 'right', m: 'left' }}\n                  style={{ color: getColor('whiteText') }}\n                >\n                  {value}\n                </Text>\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Grid\n          justifyContent=\"center\"\n          mt=\"l\"\n          alignItems=\"center\"\n          gridColumnGap=\"xs\"\n          gridTemplateColumns=\"auto auto\"\n        >\n          <Checkbox\n            checked={hasReadTOS}\n            onChange={() => setHasReadTOS(state => !state)}\n          />\n          <Text style={{ color: getColor('greyText') }}>\n            {lang.formatString(\n              lang.terms_of_service_text,\n              <Link href=\"/terms\" target=\"_blank\">\n                {lang.terms_of_service}\n              </Link>\n            )}\n          </Text>\n        </Grid>\n      </Card>\n      <ScreenFooter\n        canProgress={hasReadTOS}\n        onNext={() => capturedDispatch({ type: 'increment-step' })}\n        onBack={onClose}\n        continueText={lang.actions.deposit}\n        secondaryButtonText={lang.actions.skip}\n      />\n    </Box>\n  );\n};\n\nconst DSRDepositWait = ({ hash, onClose, txState }) => {\n  const { lang } = useLanguage();\n  const { maker } = useMaker();\n  const [waitTime, setWaitTime] = useState('8 minutes');\n\n  const networkId = maker.service('web3').networkId();\n  const isTestchain = ![1, 42].includes(networkId);\n  useEffect(() => {\n    (async () => {\n      // this is the default transaction speed\n      const waitTime = await maker.service('gas').getWaitTime('fast');\n      const minutes = Math.round(waitTime);\n      const seconds = Math.round(waitTime * 6) * 10;\n\n      const waitTimeText =\n        waitTime < 1\n          ? `${seconds} ${lang.cdp_create.seconds_wait_time}`\n          : `${minutes} ${\n              minutes === 1\n                ? lang.cdp_create.minutes_wait_time_singular\n                : lang.minutes_wait_time_plural\n            }`;\n\n      setWaitTime(waitTimeText);\n    })();\n  });\n\n  return (\n    <Box\n      maxWidth=\"1040px\"\n      css={`\n        margin: 0 auto;\n      `}\n    >\n      <ScreenHeader\n        title={\n          txState === TxLifecycle.CONFIRMED\n            ? lang.dsr_deposit.post_confirmed_title\n            : lang.dsr_deposit.confirmed_title\n        }\n        text={\n          txState === TxLifecycle.CONFIRMED\n            ? lang.cdp_create.post_confirmed_text\n            : lang.formatString(lang.cdp_create.confirmed_text, waitTime)\n        }\n      />\n      <Flex my=\"l\" justifyContent=\"center\">\n        <Grid gridRowGap=\"s\">\n          <Box m=\"auto\">\n            <SpaceshipIllustration />\n          </Box>\n          <Box my=\"l\" textAlign=\"center\">\n            {isTestchain ? (\n              <Grid gridRowGap=\"s\">\n                <Text>{lang.cdp_create.tx_hash}</Text>\n                <Text>{hash}</Text>\n              </Grid>\n            ) : (\n              <Link\n                target=\"_blank\"\n                href={etherscanLink(hash, networkIdToName(networkId))}\n              >\n                {lang.cdp_create.view_tx_details} <ExternalLinkIcon />\n              </Link>\n            )}\n          </Box>\n          <Flex textAlign=\"center\" justifyContent=\"center\">\n            <Button onClick={onClose} width=\"145px\">\n              {lang.exit}\n            </Button>\n          </Flex>\n        </Grid>\n      </Flex>\n    </Box>\n  );\n};\n\nconst DSRDepositConfirm = ({ dispatch, onClose, depositAmount, txState }) => {\n  const { maker } = useMaker();\n\n  const [depositDaiTxHash, setDepositDaiTxHash] = useState(null);\n\n  async function capturedDispatch(payload) {\n    const { type } = payload;\n    if (type !== 'increment-step') return dispatch(payload);\n\n    const txObject = maker.service('mcd:savings').join(USDFL(depositAmount));\n\n    const txMgr = maker.service('transactionManager');\n    txMgr.listen(txObject, {\n      pending: tx => setDepositDaiTxHash(tx.hash),\n      confirmed: () => dispatch({ type: 'transaction-confirmed' })\n    });\n    await txMgr.confirm(txObject, 1);\n  }\n\n  if (depositDaiTxHash)\n    return (\n      <DSRDepositWait\n        hash={depositDaiTxHash}\n        onClose={onClose}\n        txState={txState}\n      />\n    );\n\n  return (\n    <DSRDepositConfirmSummary\n      capturedDispatch={capturedDispatch}\n      depositAmount={depositAmount}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default DSRDepositConfirm;\n"]},"metadata":{},"sourceType":"module"}