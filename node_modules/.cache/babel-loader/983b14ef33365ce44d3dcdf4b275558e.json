{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport ethAbi from 'web3-eth-abi';\nimport padStart from 'lodash/padStart';\nimport padEnd from 'lodash/padEnd';\nimport orderBy from 'lodash/orderBy';\nimport flatten from 'lodash/flatten';\nimport BigNumber from 'bignumber.js';\nimport { bytesToString, parseWeiNumeric, numberFromNumeric } from './utils';\n\nvar formatAddress = function formatAddress(v) {\n  return '0x' + v.slice(26).toLowerCase();\n};\n\nvar funcSigTopic = function funcSigTopic(v) {\n  return padEnd(ethAbi.encodeFunctionSignature(v), 66, '0');\n};\n\nvar EVENT_GIVE = funcSigTopic('give(uint256,address)');\nvar EVENT_DAI_ADAPTER_EXIT = funcSigTopic('exit(address,uint256)');\nvar EVENT_DAI_ADAPTER_JOIN = funcSigTopic('join(address,uint256)');\nvar EVENT_POT_JOIN = funcSigTopic('join(uint256)');\nvar EVENT_POT_EXIT = funcSigTopic('exit(uint256)');\nvar EVENT_VAT_FROB = funcSigTopic('frob(bytes32,address,address,address,int256,int256)');\nvar EVENT_MANAGER_FROB = funcSigTopic('frob(uint256,int256,int256)');\n\nvar decodeManagerFrob = function decodeManagerFrob(data) {\n  var sig = ethAbi.encodeFunctionSignature('frob(uint256,int256,int256)').slice(2);\n  var decoded = ethAbi.decodeParameters(['uint256', // id\n  'int256', // dink\n  'int256' // dart\n  ], '0x' + data.replace(new RegExp('^.+?' + sig), ''));\n  return {\n    id: decoded[0].toString(),\n    dink: decoded[1],\n    dart: decoded[2] // can't be used directly because would need to be scaled up using vat.ilks[ilk].rate\n\n  };\n};\n\nvar decodeVatFrob = function decodeVatFrob(data) {\n  var sig = ethAbi.encodeFunctionSignature('frob(bytes32,address,address,address,int256,int256)').slice(2);\n  var decoded = ethAbi.decodeParameters(['bytes32', // ilk\n  'address', // u (urnHandler)\n  'address', // v (urnHandler)\n  'address', // w (urnHandler)\n  'int256', // dink\n  'int256' // dart\n  ], '0x' + data.replace(new RegExp('^.+?' + sig), ''));\n  return {\n    ilk: bytesToString(decoded[0].toString()),\n    urnHandler: decoded[1].toString(),\n    dink: decoded[4].toString(),\n    dart: decoded[5].toString()\n  };\n};\n\nexport default function getEventHistory(_x, _x2, _x3) {\n  return _getEventHistory.apply(this, arguments);\n}\n\nfunction _getEventHistory() {\n  _getEventHistory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(cdpManager, managedCdp, cache) {\n    var MCD_JOIN_DAI, CDP_MANAGER, MCD_VAT, MCD_CAT, id, web3, utils, fromBlock, promisesBlockTimestamp, getBlockTimestamp, urnHandler, ilk, NewCdp, Bite, lookups;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            MCD_JOIN_DAI = cdpManager.get('smartContract').getContractAddress('MCD_JOIN_DAI');\n            CDP_MANAGER = cdpManager.get('smartContract').getContractAddress('CDP_MANAGER');\n            MCD_VAT = cdpManager.get('smartContract').getContractAddress('MCD_VAT');\n            MCD_CAT = cdpManager.get('smartContract').getContractAddress('MCD_CAT');\n            id = managedCdp.id;\n\n            if (!cache[id]) {\n              _context5.next = 7;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", cache[id]);\n\n          case 7:\n            web3 = cdpManager.get('web3');\n            utils = web3._web3.utils; // 8600000 is 2019-09-22 on mainnet and 2018-09-04 on kovan\n\n            fromBlock = [1, 42].includes(web3.network) ? 8600000 : 1;\n            promisesBlockTimestamp = {};\n\n            getBlockTimestamp = function getBlockTimestamp(block) {\n              if (!promisesBlockTimestamp[block]) {\n                promisesBlockTimestamp[block] = web3.getBlock(block, false);\n              }\n\n              return promisesBlockTimestamp[block];\n            };\n\n            _context5.next = 14;\n            return cdpManager.getUrn(id);\n\n          case 14:\n            urnHandler = _context5.sent.toLowerCase();\n            ilk = managedCdp.ilk;\n            NewCdp = cdpManager.get('smartContract').getContract('CDP_MANAGER').interface.events.NewCdp;\n            Bite = cdpManager.get('smartContract').getContract('MCD_CAT').interface.events.Bite;\n            lookups = [{\n              request: web3.getPastLogs({\n                address: CDP_MANAGER,\n                topics: [utils.keccak256(utils.toHex(NewCdp.signature)), null, null, '0x' + padStart(id.toString(16), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function result(r) {\n                return r.map(function (_ref) {\n                  var block = _ref.blockNumber,\n                      txHash = _ref.transactionHash;\n                  return {\n                    type: 'OPEN',\n                    order: 0,\n                    block: block,\n                    txHash: txHash,\n                    id: id,\n                    ilk: ilk\n                  };\n                });\n              }\n            }, {\n              request: web3.getPastLogs({\n                address: CDP_MANAGER,\n                topics: [EVENT_MANAGER_FROB, null, '0x' + padStart(id.toString(16), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function () {\n                var _result = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(r) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.abrupt(\"return\", r.reduce( /*#__PURE__*/function () {\n                            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(acc, _ref2) {\n                              var block, data, topics, _decodeManagerFrob, dart, _acc, proxy, joinDaiEvents;\n\n                              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                while (1) {\n                                  switch (_context.prev = _context.next) {\n                                    case 0:\n                                      block = _ref2.blockNumber, data = _ref2.data, topics = _ref2.topics;\n                                      _decodeManagerFrob = decodeManagerFrob(data), dart = _decodeManagerFrob.dart;\n                                      _context.next = 4;\n                                      return acc;\n\n                                    case 4:\n                                      acc = _context.sent;\n                                      dart = new BigNumber(dart); // Imprecise debt amount frobbed (not scaled by vat.ilks[ilk].rate)\n\n                                      if (!(dart.lt(0) || dart.gt(0))) {\n                                        _context.next = 12;\n                                        break;\n                                      }\n\n                                      // Lookup the dai join events on this block for this proxy address\n                                      proxy = topics[1];\n                                      _context.next = 10;\n                                      return web3.getPastLogs({\n                                        address: [MCD_JOIN_DAI],\n                                        topics: [dart.lt(0) ? EVENT_DAI_ADAPTER_JOIN : EVENT_DAI_ADAPTER_EXIT, proxy],\n                                        fromBlock: block,\n                                        toBlock: block\n                                      });\n\n                                    case 10:\n                                      joinDaiEvents = _context.sent;\n\n                                      (_acc = acc).push.apply(_acc, _toConsumableArray(joinDaiEvents.map(function (_ref4) {\n                                        var address = _ref4.address,\n                                            block = _ref4.blockNumber,\n                                            txHash = _ref4.transactionHash,\n                                            topics = _ref4.topics;\n                                        return {\n                                          type: dart.lt(0) ? 'PAY_BACK' : 'GENERATE',\n                                          order: 2,\n                                          block: block,\n                                          txHash: txHash,\n                                          id: id,\n                                          ilk: ilk,\n                                          adapter: address.toLowerCase(),\n                                          proxy: formatAddress(topics[1]),\n                                          recipient: formatAddress(topics[2]),\n                                          amount: parseWeiNumeric(topics[3])\n                                        };\n                                      })));\n\n                                    case 12:\n                                      return _context.abrupt(\"return\", acc);\n\n                                    case 13:\n                                    case \"end\":\n                                      return _context.stop();\n                                  }\n                                }\n                              }, _callee);\n                            }));\n\n                            return function (_x8, _x9) {\n                              return _ref3.apply(this, arguments);\n                            };\n                          }(), []));\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                function result(_x7) {\n                  return _result.apply(this, arguments);\n                }\n\n                return result;\n              }()\n            }, {\n              request: web3.getPastLogs({\n                address: MCD_VAT,\n                topics: [EVENT_VAT_FROB, null, '0x' + padStart(urnHandler.slice(2), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function result(r) {\n                return r.map(function (_ref5) {\n                  var address = _ref5.address,\n                      block = _ref5.blockNumber,\n                      txHash = _ref5.transactionHash,\n                      data = _ref5.data,\n                      topics = _ref5.topics,\n                      transactionLogIndex = _ref5.transactionLogIndex;\n\n                  var _decodeVatFrob = decodeVatFrob(data),\n                      ilk = _decodeVatFrob.ilk,\n                      dink = _decodeVatFrob.dink,\n                      urnHandler = _decodeVatFrob.urnHandler;\n\n                  dink = new BigNumber(dink);\n                  var reclaim = formatAddress(topics[2]) === urnHandler.toLowerCase() && formatAddress(topics[3]) == urnHandler.toLowerCase() && parseInt(transactionLogIndex, 16) === 1;\n                  return dink.lt(0) || dink.gt(0) ? {\n                    type: dink.lt(0) ? 'WITHDRAW' : reclaim ? 'RECLAIM' : 'DEPOSIT',\n                    order: dink.lt(0) ? 3 : 1,\n                    block: block,\n                    txHash: txHash,\n                    id: id,\n                    ilk: ilk,\n                    gem: managedCdp.currency.symbol,\n                    adapter: address.toLowerCase(),\n                    amount: Math.abs(parseWeiNumeric(dink)).toString()\n                  } : null;\n                });\n              }\n            }, {\n              request: web3.getPastLogs({\n                address: CDP_MANAGER,\n                topics: [EVENT_GIVE, null, '0x' + padStart(id.toString(16), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function result(r) {\n                return r.map(function (_ref6) {\n                  var block = _ref6.blockNumber,\n                      txHash = _ref6.transactionHash,\n                      topics = _ref6.topics;\n                  var prevOwner = formatAddress(topics[1]);\n                  return {\n                    type: 'GIVE',\n                    order: 1,\n                    block: block,\n                    txHash: txHash,\n                    prevOwner: prevOwner,\n                    id: numberFromNumeric(topics[2]),\n                    newOwner: formatAddress(topics[3])\n                  };\n                });\n              }\n            }, {\n              request: web3.getPastLogs({\n                address: MCD_CAT,\n                topics: [utils.keccak256(utils.toHex(Bite.signature)), null, '0x' + padStart(urnHandler.slice(2), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function result(r) {\n                return r.map(function (tx) {\n                  var topics = tx.topics,\n                      data = tx.data,\n                      block = tx.blockNumber,\n                      txHash = tx.transactionHash;\n                  var inputs = Bite.inputs.names.reduceRight(function (acc, name, idx) {\n                    if (['ilk', 'urn'].some(function (indexed) {\n                      return indexed === name;\n                    })) return acc;\n                    return [{\n                      type: Bite.inputs.types[idx],\n                      name: name\n                    }].concat(_toConsumableArray(acc));\n                  }, []);\n\n                  var _ethAbi$decodeLog = ethAbi.decodeLog(inputs, data, topics),\n                      id = _ethAbi$decodeLog.id,\n                      ink = _ethAbi$decodeLog.ink;\n\n                  return {\n                    type: 'BITE',\n                    auctionId: numberFromNumeric(id),\n                    amount: new BigNumber(ink).shiftedBy(-18),\n                    gem: managedCdp.currency.symbol,\n                    block: block,\n                    txHash: txHash\n                  };\n                });\n              }\n            }]; // eslint-disable-next-line require-atomic-updates\n\n            cache[id] = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n              var results;\n              return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return Promise.all(lookups.map(function (l) {\n                        return l.request;\n                      }));\n\n                    case 2:\n                      results = _context4.sent;\n                      _context4.t0 = orderBy;\n                      _context4.t1 = Promise;\n                      _context4.t2 = flatten;\n                      _context4.next = 8;\n                      return Promise.all(results.map(function (r, i) {\n                        return lookups[i].result(r);\n                      }));\n\n                    case 8:\n                      _context4.t3 = _context4.sent;\n                      _context4.t4 = (0, _context4.t2)(_context4.t3).filter(function (r) {\n                        return r !== null;\n                      }).map( /*#__PURE__*/function () {\n                        var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n                          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  _context3.next = 2;\n                                  return getBlockTimestamp(e.block);\n\n                                case 2:\n                                  e.timestamp = _context3.sent.timestamp;\n                                  return _context3.abrupt(\"return\", e);\n\n                                case 4:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        return function (_x10) {\n                          return _ref8.apply(this, arguments);\n                        };\n                      }());\n                      _context4.next = 12;\n                      return _context4.t1.all.call(_context4.t1, _context4.t4);\n\n                    case 12:\n                      _context4.t5 = _context4.sent;\n                      _context4.t6 = ['block', 'order'];\n                      _context4.t7 = ['desc', 'desc'];\n                      return _context4.abrupt(\"return\", (0, _context4.t0)(_context4.t5, _context4.t6, _context4.t7).map(function (e) {\n                        delete e.order;\n                        return e;\n                      }));\n\n                    case 16:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            }))();\n            return _context5.abrupt(\"return\", cache[id]);\n\n          case 21:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getEventHistory.apply(this, arguments);\n}\n\nexport function getDsrEventHistory(_x4, _x5, _x6) {\n  return _getDsrEventHistory.apply(this, arguments);\n}\n\nfunction _getDsrEventHistory() {\n  _getDsrEventHistory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(service, address, cache) {\n    var MCD_JOIN_DAI, MCD_POT, web3, fromBlock, promisesBlockTimestamp, getBlockTimestamp, lookups;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            MCD_JOIN_DAI = service.get('smartContract').getContractAddress('MCD_JOIN_DAI');\n            MCD_POT = service.get('smartContract').getContractAddress('MCD_POT');\n            address = address.toLowerCase();\n\n            if (!cache[address]) {\n              _context12.next = 5;\n              break;\n            }\n\n            return _context12.abrupt(\"return\", cache[address]);\n\n          case 5:\n            web3 = service.get('web3'); // 8600000 is 2019-09-22 on mainnet and 2018-09-04 on kovan\n\n            fromBlock = [1, 42].includes(web3.network) ? 8600000 : 1;\n            promisesBlockTimestamp = {};\n\n            getBlockTimestamp = function getBlockTimestamp(block) {\n              if (!promisesBlockTimestamp[block]) {\n                promisesBlockTimestamp[block] = web3.getBlock(block, false);\n              }\n\n              return promisesBlockTimestamp[block];\n            };\n\n            lookups = [{\n              request: web3.getPastLogs({\n                address: MCD_POT,\n                topics: [EVENT_POT_JOIN, '0x' + padStart(address.slice(2), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function () {\n                var _result2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(r) {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          return _context7.abrupt(\"return\", r.reduce( /*#__PURE__*/function () {\n                            var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(acc, _ref9) {\n                              var block, txHash, adapterJoinEvents, _adapterJoinEvents$fi, _adapterJoinEvents$fi2, adapterTopics;\n\n                              return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                while (1) {\n                                  switch (_context6.prev = _context6.next) {\n                                    case 0:\n                                      block = _ref9.blockNumber, txHash = _ref9.transactionHash;\n                                      _context6.next = 3;\n                                      return acc;\n\n                                    case 3:\n                                      acc = _context6.sent;\n                                      _context6.next = 6;\n                                      return web3.getPastLogs({\n                                        address: MCD_JOIN_DAI,\n                                        topics: [EVENT_DAI_ADAPTER_JOIN, '0x' + padStart(address.slice(2), 64, '0')],\n                                        fromBlock: fromBlock\n                                      });\n\n                                    case 6:\n                                      adapterJoinEvents = _context6.sent;\n                                      _adapterJoinEvents$fi = adapterJoinEvents.filter(function (x) {\n                                        return x.transactionHash === txHash;\n                                      }), _adapterJoinEvents$fi2 = _slicedToArray(_adapterJoinEvents$fi, 1), adapterTopics = _adapterJoinEvents$fi2[0].topics;\n                                      acc.push({\n                                        type: 'DSR_DEPOSIT',\n                                        order: 0,\n                                        block: block,\n                                        txHash: txHash,\n                                        amount: parseWeiNumeric(adapterTopics[3]),\n                                        gem: 'USDFL'\n                                      });\n                                      return _context6.abrupt(\"return\", acc);\n\n                                    case 10:\n                                    case \"end\":\n                                      return _context6.stop();\n                                  }\n                                }\n                              }, _callee6);\n                            }));\n\n                            return function (_x12, _x13) {\n                              return _ref10.apply(this, arguments);\n                            };\n                          }(), []));\n\n                        case 1:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                function result(_x11) {\n                  return _result2.apply(this, arguments);\n                }\n\n                return result;\n              }()\n            }, {\n              request: web3.getPastLogs({\n                address: MCD_POT,\n                topics: [EVENT_POT_EXIT, '0x' + padStart(address.slice(2), 64, '0')],\n                fromBlock: fromBlock\n              }),\n              result: function () {\n                var _result3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(r) {\n                  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          return _context9.abrupt(\"return\", r.reduce( /*#__PURE__*/function () {\n                            var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(acc, _ref11) {\n                              var block, txHash, adapterExitEvents, _adapterExitEvents$fi, _adapterExitEvents$fi2, adapterTopics;\n\n                              return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                                while (1) {\n                                  switch (_context8.prev = _context8.next) {\n                                    case 0:\n                                      block = _ref11.blockNumber, txHash = _ref11.transactionHash;\n                                      _context8.next = 3;\n                                      return acc;\n\n                                    case 3:\n                                      acc = _context8.sent;\n                                      _context8.next = 6;\n                                      return web3.getPastLogs({\n                                        address: MCD_JOIN_DAI,\n                                        topics: [EVENT_DAI_ADAPTER_EXIT, '0x' + padStart(address.slice(2), 64, '0')],\n                                        fromBlock: fromBlock\n                                      });\n\n                                    case 6:\n                                      adapterExitEvents = _context8.sent;\n                                      _adapterExitEvents$fi = adapterExitEvents.filter(function (x) {\n                                        return x.transactionHash === txHash;\n                                      }), _adapterExitEvents$fi2 = _slicedToArray(_adapterExitEvents$fi, 1), adapterTopics = _adapterExitEvents$fi2[0].topics;\n                                      acc.push({\n                                        type: 'DSR_WITHDRAW',\n                                        order: 0,\n                                        block: block,\n                                        txHash: txHash,\n                                        amount: parseWeiNumeric(adapterTopics[3]),\n                                        gem: 'USDFL'\n                                      });\n                                      return _context8.abrupt(\"return\", acc);\n\n                                    case 10:\n                                    case \"end\":\n                                      return _context8.stop();\n                                  }\n                                }\n                              }, _callee8);\n                            }));\n\n                            return function (_x15, _x16) {\n                              return _ref12.apply(this, arguments);\n                            };\n                          }(), []));\n\n                        case 1:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                function result(_x14) {\n                  return _result3.apply(this, arguments);\n                }\n\n                return result;\n              }()\n            }]; // eslint-disable-next-line require-atomic-updates\n\n            cache[address] = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n              var results;\n              return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                while (1) {\n                  switch (_context11.prev = _context11.next) {\n                    case 0:\n                      _context11.next = 2;\n                      return Promise.all(lookups.map(function (l) {\n                        return l.request;\n                      }));\n\n                    case 2:\n                      results = _context11.sent;\n                      _context11.t0 = orderBy;\n                      _context11.t1 = Promise;\n                      _context11.t2 = flatten;\n                      _context11.next = 8;\n                      return Promise.all(results.map(function (r, i) {\n                        return lookups[i].result(r);\n                      }));\n\n                    case 8:\n                      _context11.t3 = _context11.sent;\n                      _context11.t4 = (0, _context11.t2)(_context11.t3).filter(function (r) {\n                        return r !== null;\n                      }).map( /*#__PURE__*/function () {\n                        var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(e) {\n                          return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                            while (1) {\n                              switch (_context10.prev = _context10.next) {\n                                case 0:\n                                  _context10.next = 2;\n                                  return getBlockTimestamp(e.block);\n\n                                case 2:\n                                  e.timestamp = _context10.sent.timestamp;\n                                  return _context10.abrupt(\"return\", e);\n\n                                case 4:\n                                case \"end\":\n                                  return _context10.stop();\n                              }\n                            }\n                          }, _callee10);\n                        }));\n\n                        return function (_x17) {\n                          return _ref14.apply(this, arguments);\n                        };\n                      }());\n                      _context11.next = 12;\n                      return _context11.t1.all.call(_context11.t1, _context11.t4);\n\n                    case 12:\n                      _context11.t5 = _context11.sent;\n                      _context11.t6 = ['block', 'order'];\n                      _context11.t7 = ['desc', 'desc'];\n                      return _context11.abrupt(\"return\", (0, _context11.t0)(_context11.t5, _context11.t6, _context11.t7).map(function (e) {\n                        delete e.order;\n                        return e;\n                      }));\n\n                    case 16:\n                    case \"end\":\n                      return _context11.stop();\n                  }\n                }\n              }, _callee11);\n            }))();\n            return _context12.abrupt(\"return\", cache[address]);\n\n          case 12:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _getDsrEventHistory.apply(this, arguments);\n}\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(formatAddress, \"formatAddress\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(funcSigTopic, \"funcSigTopic\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_GIVE, \"EVENT_GIVE\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_DAI_ADAPTER_EXIT, \"EVENT_DAI_ADAPTER_EXIT\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_DAI_ADAPTER_JOIN, \"EVENT_DAI_ADAPTER_JOIN\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_POT_JOIN, \"EVENT_POT_JOIN\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_POT_EXIT, \"EVENT_POT_EXIT\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_VAT_FROB, \"EVENT_VAT_FROB\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(EVENT_MANAGER_FROB, \"EVENT_MANAGER_FROB\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(decodeManagerFrob, \"decodeManagerFrob\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(decodeVatFrob, \"decodeVatFrob\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(getEventHistory, \"getEventHistory\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n  reactHotLoader.register(getDsrEventHistory, \"getDsrEventHistory\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/EventHistory.js"],"names":["ethAbi","padStart","padEnd","orderBy","flatten","BigNumber","bytesToString","parseWeiNumeric","numberFromNumeric","formatAddress","v","slice","toLowerCase","funcSigTopic","encodeFunctionSignature","EVENT_GIVE","EVENT_DAI_ADAPTER_EXIT","EVENT_DAI_ADAPTER_JOIN","EVENT_POT_JOIN","EVENT_POT_EXIT","EVENT_VAT_FROB","EVENT_MANAGER_FROB","decodeManagerFrob","data","sig","decoded","decodeParameters","replace","RegExp","id","toString","dink","dart","decodeVatFrob","ilk","urnHandler","getEventHistory","cdpManager","managedCdp","cache","MCD_JOIN_DAI","get","getContractAddress","CDP_MANAGER","MCD_VAT","MCD_CAT","web3","utils","_web3","fromBlock","includes","network","promisesBlockTimestamp","getBlockTimestamp","block","getBlock","getUrn","NewCdp","getContract","interface","events","Bite","lookups","request","getPastLogs","address","topics","keccak256","toHex","signature","result","r","map","blockNumber","txHash","transactionHash","type","order","reduce","acc","lt","gt","proxy","toBlock","joinDaiEvents","push","adapter","recipient","amount","transactionLogIndex","reclaim","parseInt","gem","currency","symbol","Math","abs","prevOwner","newOwner","tx","inputs","names","reduceRight","name","idx","some","indexed","types","decodeLog","ink","auctionId","shiftedBy","Promise","all","l","results","i","filter","e","timestamp","getDsrEventHistory","service","MCD_POT","adapterJoinEvents","x","adapterTopics","adapterExitEvents"],"mappings":"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","sourcesContent":["import ethAbi from 'web3-eth-abi';\nimport padStart from 'lodash/padStart';\nimport padEnd from 'lodash/padEnd';\nimport orderBy from 'lodash/orderBy';\nimport flatten from 'lodash/flatten';\nimport BigNumber from 'bignumber.js';\nimport { bytesToString, parseWeiNumeric, numberFromNumeric } from './utils';\n\nconst formatAddress = v => '0x' + v.slice(26).toLowerCase();\nconst funcSigTopic = v => padEnd(ethAbi.encodeFunctionSignature(v), 66, '0');\n\nconst EVENT_GIVE = funcSigTopic('give(uint256,address)');\nconst EVENT_DAI_ADAPTER_EXIT = funcSigTopic('exit(address,uint256)');\nconst EVENT_DAI_ADAPTER_JOIN = funcSigTopic('join(address,uint256)');\nconst EVENT_POT_JOIN = funcSigTopic('join(uint256)');\nconst EVENT_POT_EXIT = funcSigTopic('exit(uint256)');\nconst EVENT_VAT_FROB = funcSigTopic(\n  'frob(bytes32,address,address,address,int256,int256)'\n);\nconst EVENT_MANAGER_FROB = funcSigTopic('frob(uint256,int256,int256)');\n\nconst decodeManagerFrob = data => {\n  const sig = ethAbi\n    .encodeFunctionSignature('frob(uint256,int256,int256)')\n    .slice(2);\n  const decoded = ethAbi.decodeParameters(\n    [\n      'uint256', // id\n      'int256', // dink\n      'int256' // dart\n    ],\n    '0x' + data.replace(new RegExp('^.+?' + sig), '')\n  );\n  return {\n    id: decoded[0].toString(),\n    dink: decoded[1],\n    dart: decoded[2] // can't be used directly because would need to be scaled up using vat.ilks[ilk].rate\n  };\n};\n\nconst decodeVatFrob = data => {\n  const sig = ethAbi\n    .encodeFunctionSignature(\n      'frob(bytes32,address,address,address,int256,int256)'\n    )\n    .slice(2);\n  const decoded = ethAbi.decodeParameters(\n    [\n      'bytes32', // ilk\n      'address', // u (urnHandler)\n      'address', // v (urnHandler)\n      'address', // w (urnHandler)\n      'int256', // dink\n      'int256' // dart\n    ],\n    '0x' + data.replace(new RegExp('^.+?' + sig), '')\n  );\n  return {\n    ilk: bytesToString(decoded[0].toString()),\n    urnHandler: decoded[1].toString(),\n    dink: decoded[4].toString(),\n    dart: decoded[5].toString()\n  };\n};\n\nexport default async function getEventHistory(cdpManager, managedCdp, cache) {\n  const MCD_JOIN_DAI = cdpManager\n    .get('smartContract')\n    .getContractAddress('MCD_JOIN_DAI');\n  const CDP_MANAGER = cdpManager\n    .get('smartContract')\n    .getContractAddress('CDP_MANAGER');\n  const MCD_VAT = cdpManager.get('smartContract').getContractAddress('MCD_VAT');\n  const MCD_CAT = cdpManager.get('smartContract').getContractAddress('MCD_CAT');\n\n  const id = managedCdp.id;\n  if (cache[id]) return cache[id];\n\n  const web3 = cdpManager.get('web3');\n  const utils = web3._web3.utils;\n\n  // 8600000 is 2019-09-22 on mainnet and 2018-09-04 on kovan\n  const fromBlock = [1, 42].includes(web3.network) ? 8600000 : 1;\n\n  const promisesBlockTimestamp = {};\n  const getBlockTimestamp = block => {\n    if (!promisesBlockTimestamp[block]) {\n      promisesBlockTimestamp[block] = web3.getBlock(block, false);\n    }\n    return promisesBlockTimestamp[block];\n  };\n\n  const urnHandler = (await cdpManager.getUrn(id)).toLowerCase();\n  const ilk = managedCdp.ilk;\n\n  const { NewCdp } = cdpManager\n    .get('smartContract')\n    .getContract('CDP_MANAGER').interface.events;\n\n  const { Bite } = cdpManager\n    .get('smartContract')\n    .getContract('MCD_CAT').interface.events;\n\n  const lookups = [\n    {\n      request: web3.getPastLogs({\n        address: CDP_MANAGER,\n        topics: [\n          utils.keccak256(utils.toHex(NewCdp.signature)),\n          null,\n          null,\n          '0x' + padStart(id.toString(16), 64, '0')\n        ],\n        fromBlock\n      }),\n      result: r =>\n        r.map(({ blockNumber: block, transactionHash: txHash }) => {\n          return {\n            type: 'OPEN',\n            order: 0,\n            block,\n            txHash,\n            id,\n            ilk\n          };\n        })\n    },\n    {\n      request: web3.getPastLogs({\n        address: CDP_MANAGER,\n        topics: [\n          EVENT_MANAGER_FROB,\n          null,\n          '0x' + padStart(id.toString(16), 64, '0')\n        ],\n        fromBlock\n      }),\n      result: async r =>\n        r.reduce(async (acc, { blockNumber: block, data, topics }) => {\n          let { dart } = decodeManagerFrob(data);\n          acc = await acc;\n          dart = new BigNumber(dart);\n          // Imprecise debt amount frobbed (not scaled by vat.ilks[ilk].rate)\n          if (dart.lt(0) || dart.gt(0)) {\n            // Lookup the dai join events on this block for this proxy address\n            const proxy = topics[1];\n            const joinDaiEvents = await web3.getPastLogs({\n              address: [MCD_JOIN_DAI],\n              topics: [\n                dart.lt(0) ? EVENT_DAI_ADAPTER_JOIN : EVENT_DAI_ADAPTER_EXIT,\n                proxy\n              ],\n              fromBlock: block,\n              toBlock: block\n            });\n            acc.push(\n              ...joinDaiEvents.map(\n                ({\n                  address,\n                  blockNumber: block,\n                  transactionHash: txHash,\n                  topics\n                }) => ({\n                  type: dart.lt(0) ? 'PAY_BACK' : 'GENERATE',\n                  order: 2,\n                  block,\n                  txHash,\n                  id,\n                  ilk,\n                  adapter: address.toLowerCase(),\n                  proxy: formatAddress(topics[1]),\n                  recipient: formatAddress(topics[2]),\n                  amount: parseWeiNumeric(topics[3])\n                })\n              )\n            );\n          }\n          return acc;\n        }, [])\n    },\n    {\n      request: web3.getPastLogs({\n        address: MCD_VAT,\n        topics: [\n          EVENT_VAT_FROB,\n          null,\n          '0x' + padStart(urnHandler.slice(2), 64, '0')\n        ],\n        fromBlock\n      }),\n      result: r =>\n        r.map(\n          ({\n            address,\n            blockNumber: block,\n            transactionHash: txHash,\n            data,\n            topics,\n            transactionLogIndex\n          }) => {\n            let { ilk, dink, urnHandler } = decodeVatFrob(data);\n            dink = new BigNumber(dink);\n            const reclaim =\n              formatAddress(topics[2]) === urnHandler.toLowerCase() &&\n              formatAddress(topics[3]) == urnHandler.toLowerCase() &&\n              parseInt(transactionLogIndex, 16) === 1;\n            return dink.lt(0) || dink.gt(0)\n              ? {\n                  type: dink.lt(0)\n                    ? 'WITHDRAW'\n                    : reclaim\n                    ? 'RECLAIM'\n                    : 'DEPOSIT',\n                  order: dink.lt(0) ? 3 : 1,\n                  block,\n                  txHash,\n                  id,\n                  ilk,\n                  gem: managedCdp.currency.symbol,\n                  adapter: address.toLowerCase(),\n                  amount: Math.abs(parseWeiNumeric(dink)).toString()\n                }\n              : null;\n          }\n        )\n    },\n    {\n      request: web3.getPastLogs({\n        address: CDP_MANAGER,\n        topics: [EVENT_GIVE, null, '0x' + padStart(id.toString(16), 64, '0')],\n        fromBlock\n      }),\n      result: r =>\n        r.map(({ blockNumber: block, transactionHash: txHash, topics }) => {\n          const prevOwner = formatAddress(topics[1]);\n          return {\n            type: 'GIVE',\n            order: 1,\n            block,\n            txHash,\n            prevOwner,\n            id: numberFromNumeric(topics[2]),\n            newOwner: formatAddress(topics[3])\n          };\n        })\n    },\n    {\n      request: web3.getPastLogs({\n        address: MCD_CAT,\n        topics: [\n          utils.keccak256(utils.toHex(Bite.signature)),\n          null,\n          '0x' + padStart(urnHandler.slice(2), 64, '0')\n        ],\n        fromBlock\n      }),\n      result: r =>\n        r.map(tx => {\n          const {\n            topics,\n            data,\n            blockNumber: block,\n            transactionHash: txHash\n          } = tx;\n          const inputs = Bite.inputs.names.reduceRight((acc, name, idx) => {\n            if (['ilk', 'urn'].some(indexed => indexed === name)) return acc;\n            return [\n              {\n                type: Bite.inputs.types[idx],\n                name\n              },\n              ...acc\n            ];\n          }, []);\n          const { id, ink } = ethAbi.decodeLog(inputs, data, topics);\n          return {\n            type: 'BITE',\n            auctionId: numberFromNumeric(id),\n            amount: new BigNumber(ink).shiftedBy(-18),\n            gem: managedCdp.currency.symbol,\n            block,\n            txHash\n          };\n        })\n    }\n  ];\n\n  // eslint-disable-next-line require-atomic-updates\n  cache[id] = (async () => {\n    const results = await Promise.all(lookups.map(l => l.request));\n    return orderBy(\n      await Promise.all(\n        flatten(await Promise.all(results.map((r, i) => lookups[i].result(r))))\n          .filter(r => r !== null)\n          .map(async e => {\n            // eslint-disable-next-line require-atomic-updates\n            e.timestamp = (await getBlockTimestamp(e.block)).timestamp;\n            return e;\n          })\n      ),\n      ['block', 'order'],\n      ['desc', 'desc']\n    ).map(e => {\n      delete e.order;\n      return e;\n    });\n  })();\n\n  return cache[id];\n}\n\nexport async function getDsrEventHistory(service, address, cache) {\n  const MCD_JOIN_DAI = service\n    .get('smartContract')\n    .getContractAddress('MCD_JOIN_DAI');\n  const MCD_POT = service.get('smartContract').getContractAddress('MCD_POT');\n\n  address = address.toLowerCase();\n  if (cache[address]) return cache[address];\n\n  const web3 = service.get('web3');\n\n  // 8600000 is 2019-09-22 on mainnet and 2018-09-04 on kovan\n  const fromBlock = [1, 42].includes(web3.network) ? 8600000 : 1;\n\n  const promisesBlockTimestamp = {};\n  const getBlockTimestamp = block => {\n    if (!promisesBlockTimestamp[block]) {\n      promisesBlockTimestamp[block] = web3.getBlock(block, false);\n    }\n    return promisesBlockTimestamp[block];\n  };\n\n  const lookups = [\n    {\n      request: web3.getPastLogs({\n        address: MCD_POT,\n        topics: [EVENT_POT_JOIN, '0x' + padStart(address.slice(2), 64, '0')],\n        fromBlock\n      }),\n      result: async r =>\n        r.reduce(\n          async (acc, { blockNumber: block, transactionHash: txHash }) => {\n            acc = await acc;\n            const adapterJoinEvents = await web3.getPastLogs({\n              address: MCD_JOIN_DAI,\n              topics: [\n                EVENT_DAI_ADAPTER_JOIN,\n                '0x' + padStart(address.slice(2), 64, '0')\n              ],\n              fromBlock\n            });\n            const [{ topics: adapterTopics }] = adapterJoinEvents.filter(\n              x => x.transactionHash === txHash\n            );\n            acc.push({\n              type: 'DSR_DEPOSIT',\n              order: 0,\n              block,\n              txHash,\n              amount: parseWeiNumeric(adapterTopics[3]),\n              gem: 'USDFL'\n            });\n            return acc;\n          },\n          []\n        )\n    },\n    {\n      request: web3.getPastLogs({\n        address: MCD_POT,\n        topics: [EVENT_POT_EXIT, '0x' + padStart(address.slice(2), 64, '0')],\n        fromBlock\n      }),\n      result: async r =>\n        r.reduce(\n          async (acc, { blockNumber: block, transactionHash: txHash }) => {\n            acc = await acc;\n            const adapterExitEvents = await web3.getPastLogs({\n              address: MCD_JOIN_DAI,\n              topics: [\n                EVENT_DAI_ADAPTER_EXIT,\n                '0x' + padStart(address.slice(2), 64, '0')\n              ],\n              fromBlock\n            });\n            const [{ topics: adapterTopics }] = adapterExitEvents.filter(\n              x => x.transactionHash === txHash\n            );\n            acc.push({\n              type: 'DSR_WITHDRAW',\n              order: 0,\n              block,\n              txHash,\n              amount: parseWeiNumeric(adapterTopics[3]),\n              gem: 'USDFL'\n            });\n            return acc;\n          },\n          []\n        )\n    }\n  ];\n\n  // eslint-disable-next-line require-atomic-updates\n  cache[address] = (async () => {\n    const results = await Promise.all(lookups.map(l => l.request));\n    return orderBy(\n      await Promise.all(\n        flatten(await Promise.all(results.map((r, i) => lookups[i].result(r))))\n          .filter(r => r !== null)\n          .map(async e => {\n            // eslint-disable-next-line require-atomic-updates\n            e.timestamp = (await getBlockTimestamp(e.block)).timestamp;\n            return e;\n          })\n      ),\n      ['block', 'order'],\n      ['desc', 'desc']\n    ).map(e => {\n      delete e.order;\n      return e;\n    });\n  })();\n\n  return cache[address];\n}\n"]},"metadata":{},"sourceType":"module"}