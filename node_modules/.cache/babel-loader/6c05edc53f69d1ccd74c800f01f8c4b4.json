{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _regeneratorRuntime = require(\"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar util_1 = require(\"../util\");\n\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\n\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nvar JSONRPC_1 = require(\"./JSONRPC\");\n\nvar Web3Provider_1 = require(\"./Web3Provider\");\n\nvar LOCAL_STORAGE_ADDRESSES_KEY = \"Addresses\";\n\nvar WalletLinkProvider = /*#__PURE__*/function () {\n  function WalletLinkProvider(options) {\n    _classCallCheck(this, WalletLinkProvider);\n\n    this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n    this._addresses = [];\n    this._send = this.send;\n    this._sendAsync = this.sendAsync;\n\n    if (!options.relay) {\n      throw new Error(\"realy must be provided\");\n    }\n\n    if (!options.jsonRpcUrl) {\n      throw new Error(\"jsonRpcUrl must be provided\");\n    }\n\n    this._relay = options.relay;\n    this._chainId = util_1.ensureIntNumber(options.chainId || 1);\n    this._jsonRpcUrl = options.jsonRpcUrl;\n\n    var cahedAddresses = this._relay.getStorageItem(LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cahedAddresses) {\n      var addresses = cahedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        this._addresses = addresses;\n      }\n    }\n  }\n\n  _createClass(WalletLinkProvider, [{\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this._addresses.length > 0)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._addresses);\n\n              case 2:\n                _context.next = 4;\n                return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this._relay.resetAndReload();\n    }\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this = this;\n\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this._sendRequest(r);\n        });\n      } // send(JSONRPCRequest): JSONRPCResponse\n\n\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback) {\n      if (typeof callback !== \"function\") {\n        throw new Error(\"callback is required\");\n      } // send(JSONRPCRequest[], callback): void\n\n\n      if (Array.isArray(request)) {\n        var arrayCb = callback;\n\n        this._sendMultipleRequestsAsync(request).then(function (responses) {\n          return arrayCb(null, responses);\n        }).catch(function (err) {\n          return arrayCb(err, null);\n        });\n\n        return;\n      } // send(JSONRPCRequest, callback): void\n\n\n      var cb = callback;\n\n      this._sendRequestAsync(request).then(function (response) {\n        return cb(null, response);\n      }).catch(function (err) {\n        return cb(err, null);\n      });\n    }\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(match) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._relay.scanQRCode(util_1.ensureRegExpString(match));\n\n              case 2:\n                res = _context2.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 5:\n                return _context2.abrupt(\"return\", res.result);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function scanQRCode(_x) {\n        return _scanQRCode.apply(this, arguments);\n      }\n\n      return scanQRCode;\n    }()\n  }, {\n    key: \"arbitraryRequest\",\n    value: function () {\n      var _arbitraryRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._relay.arbitraryRequest(data);\n\n              case 2:\n                res = _context3.sent;\n\n                if (!(typeof res.result !== \"string\")) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new Error(\"result was not a string\");\n\n              case 5:\n                return _context3.abrupt(\"return\", res.result);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function arbitraryRequest(_x2) {\n        return _arbitraryRequest.apply(this, arguments);\n      }\n\n      return arbitraryRequest;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n\n      if (response.result === undefined) {\n        throw new Error(\"WalletLink does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n\n      this._addresses = addresses.map(function (address) {\n        return util_1.ensureAddressString(address);\n      });\n\n      this._relay.setStorageItem(LOCAL_STORAGE_ADDRESSES_KEY, addresses.join(\" \"));\n\n      window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", {\n        detail: this._addresses\n      }));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this2._handleSynchronousMethods(request);\n\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n\n          var filterPromise = _this2._handleAsynchronousFilterMethods(request);\n\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n\n        _this2._handleAsynchronousMethods(request).then(function (res) {\n          return resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this3 = this;\n\n      return Promise.all(requests.map(function (r) {\n        return _this3._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function _handleAsynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n          return this._eth_requestAccounts();\n\n        case JSONRPC_1.JSONRPCMethod.eth_sign:\n          return this._eth_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n          return this._eth_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_sign:\n          return this._personal_sign(params);\n\n        case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n          return this._personal_ecRecover(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n          return this._eth_signTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n          return this._eth_sendRawTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n          return this._eth_sendTransaction(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n          return this._eth_signTypedData_v1(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n          return this._throwUnsupportedMethodError();\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n          return this._eth_signTypedData_v3(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n        case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n          return this._eth_signTypedData_v4(params);\n\n        case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n          return this._walletlink_arbitrary(params);\n      }\n\n      return window.fetch(this._jsonRpcUrl, {\n        method: \"POST\",\n        body: JSON.stringify(request),\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (!json) {\n          throw new Web3Provider_1.ProviderError(\"unexpected response\");\n        }\n\n        var response = json;\n        var error = response.error;\n\n        if (error) {\n          throw new Web3Provider_1.ProviderError(error.message || \"RPC Error\", error.code, error.data);\n        }\n\n        return response;\n      });\n    }\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var address = util_1.ensureAddressString(addressString);\n        return this._addresses.includes(address);\n      } catch (_a) {}\n\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      if (!this._isKnownAddress(addressString)) {\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? util_1.ensureAddressString(tx.from) : this.selectedAddress;\n\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n\n      this._ensureKnownAddress(fromAddress);\n\n      var toAddress = tx.to ? util_1.ensureAddressString(tx.to) : null;\n      var weiValue = tx.value != null ? util_1.ensureBN(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? util_1.ensureBuffer(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? util_1.ensureIntNumber(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? util_1.ensureBN(tx.gasPrice) : null;\n      var gasLimit = tx.gas != null ? util_1.ensureBN(tx.gas) : null;\n      var chainId = this._chainId;\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (this._addresses.length === 0) {\n        throw new Web3Provider_1.ProviderError(\"Unauthorized\", Web3Provider_1.ProviderErrorCode.UNAUTHORIZED);\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw new Web3Provider_1.ProviderError(\"Unsupported method\", Web3Provider_1.ProviderErrorCode.UNSUPPORTED_METHOD);\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(message, address, addPrefix, typedDataJson) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this._ensureKnownAddress(address);\n\n                _context4.prev = 1;\n                _context4.next = 4;\n                return this._relay.signEthereumMessage(message, address, addPrefix, typedDataJson);\n\n              case 4:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](1);\n\n                if (!(typeof _context4.t0.message === \"string\" && _context4.t0.message.match(/(denied|rejected)/i))) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                throw new Web3Provider_1.ProviderError(\"User denied message signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n\n              case 12:\n                throw _context4.t0;\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 8]]);\n      }));\n\n      function _signEthereumMessage(_x3, _x4, _x5, _x6) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(message, signature, addPrefix) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._relay.ethereumAddressFromSignedMessage(message, signature, addPrefix);\n\n              case 2:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function _ethereumAddressFromSignedMessage(_x7, _x8, _x9) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return this._addresses;\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this._chainId.toString(10);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(this._addresses.length > 0)) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", Promise.resolve({\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                }));\n\n              case 2:\n                _context6.prev = 2;\n                _context6.next = 5;\n                return this._relay.requestEthereumAccounts();\n\n              case 5:\n                res = _context6.sent;\n                _context6.next = 13;\n                break;\n\n              case 8:\n                _context6.prev = 8;\n                _context6.t0 = _context6[\"catch\"](2);\n\n                if (!(typeof _context6.t0.message === \"string\" && _context6.t0.message.match(/(denied|rejected)/i))) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                throw new Web3Provider_1.ProviderError(\"User denied account authorization\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_ACCOUNTS);\n\n              case 12:\n                throw _context6.t0;\n\n              case 13:\n                if (res.result) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                throw new Error(\"accounts received is empty\");\n\n              case 15:\n                this._setAddresses(res.result);\n\n                return _context6.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                });\n\n              case 17:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[2, 8]]);\n      }));\n\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n\n      var address = util_1.ensureAddressString(params[0]);\n      var message = util_1.ensureBuffer(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = util_1.ensureBuffer(params[0]);\n      var signature = util_1.ensureBuffer(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n\n      var message = util_1.ensureBuffer(params[0]);\n      var address = util_1.ensureAddressString(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = util_1.ensureBuffer(params[0]);\n      var signature = util_1.ensureBuffer(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(params) {\n        var tx, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context7.prev = 2;\n                _context7.next = 5;\n                return this._relay.signEthereumTransaction(tx);\n\n              case 5:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](2);\n\n                if (!(typeof _context7.t0.message === \"string\" && _context7.t0.message.match(/(denied|rejected)/i))) {\n                  _context7.next = 13;\n                  break;\n                }\n\n                throw new Web3Provider_1.ProviderError(\"User denied transaction signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n\n              case 13:\n                throw _context7.t0;\n\n              case 14:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 9]]);\n      }));\n\n      function _eth_signTransaction(_x10) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(params) {\n        var signedTransaction, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                signedTransaction = util_1.ensureBuffer(params[0]);\n                _context8.next = 3;\n                return this._relay.submitEthereumTransaction(signedTransaction, this._chainId);\n\n              case 3:\n                res = _context8.sent;\n                return _context8.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function _eth_sendRawTransaction(_x11) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n        var tx, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._requireAuthorization();\n\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context9.prev = 2;\n                _context9.next = 5;\n                return this._relay.signAndSubmitEthereumTransaction(tx);\n\n              case 5:\n                res = _context9.sent;\n                return _context9.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n\n              case 9:\n                _context9.prev = 9;\n                _context9.t0 = _context9[\"catch\"](2);\n\n                if (!(typeof _context9.t0.message === \"string\" && _context9.t0.message.match(/(denied|rejected)/i))) {\n                  _context9.next = 13;\n                  break;\n                }\n\n                throw new Web3Provider_1.ProviderError(\"User denied transaction signature\", Web3Provider_1.ProviderErrorCode.USER_DENIED_REQUEST_SIGNATURE);\n\n              case 13:\n                throw _context9.t0;\n\n              case 14:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[2, 9]]);\n      }));\n\n      function _eth_sendTransaction(_x12) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(params) {\n        var typedData, address, message, typedDataJson;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this._requireAuthorization();\n\n                typedData = params[0];\n                address = util_1.ensureAddressString(params[1]);\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                  data: typedData\n                });\n                typedDataJson = JSON.stringify(typedData, null, 2);\n                return _context10.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJson));\n\n              case 7:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function _eth_signTypedData_v1(_x13) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(params) {\n        var address, typedData, message, typedDataJson;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = util_1.ensureAddressString(params[0]);\n                typedData = params[1];\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                  data: typedData\n                });\n                typedDataJson = JSON.stringify(typedData, null, 2);\n                return _context11.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJson));\n\n              case 7:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _eth_signTypedData_v3(_x14) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(params) {\n        var address, typedData, message, typedDataJson;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this._requireAuthorization();\n\n                address = util_1.ensureAddressString(params[0]);\n                typedData = params[1];\n\n                this._ensureKnownAddress(address);\n\n                message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                  data: typedData\n                });\n                typedDataJson = JSON.stringify(typedData, null, 2);\n                return _context12.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJson));\n\n              case 7:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _eth_signTypedData_v4(_x15) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n\n      return _eth_signTypedData_v4;\n    }()\n  }, {\n    key: \"_walletlink_arbitrary\",\n    value: function () {\n      var _walletlink_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(params) {\n        var data, result;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                data = params[0];\n\n                if (!(typeof data !== \"string\")) {\n                  _context13.next = 3;\n                  break;\n                }\n\n                throw new Error(\"parameter must be a string\");\n\n              case 3:\n                _context13.next = 5;\n                return this.arbitraryRequest(data);\n\n              case 5:\n                result = _context13.sent;\n                return _context13.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: result\n                });\n\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function _walletlink_arbitrary(_x16) {\n        return _walletlink_arbitrary2.apply(this, arguments);\n      }\n\n      return _walletlink_arbitrary;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(params) {\n        var param, filterId;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                param = params[0];\n                _context14.next = 3;\n                return this._filterPolyfill.newFilter(param);\n\n              case 3:\n                filterId = _context14.sent;\n                return _context14.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 5:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function _eth_newFilter(_x17) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                _context15.next = 2;\n                return this._filterPolyfill.newBlockFilter();\n\n              case 2:\n                filterId = _context15.sent;\n                return _context15.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this._filterPolyfill.newPendingTransactionFilter();\n\n              case 2:\n                filterId = _context16.sent;\n                return _context16.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n\n              case 4:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = util_1.ensureHexString(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }, {\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this._chainId.toString(10);\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this._jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return WalletLinkProvider;\n}();\n\nexports.WalletLinkProvider = WalletLinkProvider;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(__importDefault, \"__importDefault\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/provider/WalletLinkProvider.js\");\n  reactHotLoader.register(bn_js_1, \"bn_js_1\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/provider/WalletLinkProvider.js\");\n  reactHotLoader.register(eth_eip712_util_1, \"eth_eip712_util_1\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/provider/WalletLinkProvider.js\");\n  reactHotLoader.register(LOCAL_STORAGE_ADDRESSES_KEY, \"LOCAL_STORAGE_ADDRESSES_KEY\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/provider/WalletLinkProvider.js\");\n  reactHotLoader.register(WalletLinkProvider, \"WalletLinkProvider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/provider/WalletLinkProvider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}