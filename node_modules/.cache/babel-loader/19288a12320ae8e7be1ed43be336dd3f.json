{"ast":null,"code":"var _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/VaultsProvider.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { createContext } from 'react';\nimport { useEffect } from 'react';\nimport { watch } from 'hooks/useObservable';\nimport useMaker from 'hooks/useMaker';\nimport usePrevious from 'hooks/usePrevious';\nimport { Routes } from 'utils/constants';\nimport useCdpTypes from 'hooks/useCdpTypes';\nexport var VaultsContext = createContext({});\n\nfunction VaultsProvider(_ref) {\n  var children = _ref.children,\n      viewedAddress = _ref.viewedAddress;\n\n  var _useMaker = useMaker(),\n      account = _useMaker.account,\n      navigation = _useMaker.navigation,\n      network = _useMaker.network;\n\n  var _useCdpTypes = useCdpTypes(),\n      cdpTypesList = _useCdpTypes.cdpTypesList;\n\n  var userProxy = watch.proxyAddress(account === null || account === void 0 ? void 0 : account.address);\n  var viewedAddressProxy = watch.proxyAddress(viewedAddress);\n  var rawUserVaultsList = watch.userVaultsList(account === null || account === void 0 ? void 0 : account.address);\n  var rawViewedAddressVaultsList = watch.userVaultsList(viewedAddress);\n  var userVaultsList = rawUserVaultsList ? rawUserVaultsList.filter(function (vault) {\n    return cdpTypesList.some(function (cdpType) {\n      return cdpType === vault.vaultType;\n    });\n  }) : undefined;\n  var viewedAddressVaultsList = rawViewedAddressVaultsList ? rawViewedAddressVaultsList.filter(function (vault) {\n    return cdpTypesList.some(function (cdpType) {\n      return cdpType === vault.vaultType;\n    });\n  }) : undefined;\n  var userVaultIds = userVaultsList ? userVaultsList.map(function (_ref2) {\n    var vaultId = _ref2.vaultId;\n    return vaultId;\n  }) : [];\n  var prevUserVaultsList = usePrevious(userVaultsList);\n  var prevUserVaultIds = usePrevious(userVaultIds);\n  var viewedAddressVaultIds = viewedAddressVaultsList !== undefined && viewedAddressVaultsList.length ? viewedAddressVaultsList.map(function (_ref3) {\n    var vaultId = _ref3.vaultId;\n    return vaultId;\n  }) : [];\n  var userVaultsData = watch.userVaultsData(userVaultIds.length ? userVaultIds : undefined);\n  var viewedAddressVaultsData = watch.userVaultsData(viewedAddressVaultIds.length ? viewedAddressVaultIds : undefined);\n  var newVaultCreated = prevUserVaultsList !== undefined && userVaultsList !== undefined && prevUserVaultIds.length + 1 === userVaultIds.length;\n  useEffect(function () {\n    if (newVaultCreated) {\n      var newVaultId = userVaultIds[0];\n      navigation.navigate(\"/\".concat(Routes.BORROW, \"/\").concat(newVaultId, \"?network=\").concat(network));\n    }\n  }, [newVaultCreated, navigation, network, userVaultIds]);\n  return /*#__PURE__*/React.createElement(VaultsContext.Provider, {\n    value: {\n      userVaults: rawUserVaultsList !== undefined ? userVaultIds && userVaultsData ? userVaultsData : [] : userProxy ? undefined : [],\n      viewedAddressVaults: viewedAddressProxy === undefined ? undefined : viewedAddressProxy === null ? [] : viewedAddressVaultsList === undefined ? undefined : !viewedAddressVaultIds.length ? [] : viewedAddressVaultsData\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n__signature__(VaultsProvider, \"useMaker{{ account, navigation, network }}\\nuseCdpTypes{{ cdpTypesList }}\\nusePrevious{prevUserVaultsList}\\nusePrevious{prevUserVaultIds}\\nuseEffect{}\", function () {\n  return [useMaker, useCdpTypes, usePrevious, usePrevious];\n});\n\nvar _default = VaultsProvider;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(VaultsContext, \"VaultsContext\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/VaultsProvider.js\");\n  reactHotLoader.register(VaultsProvider, \"VaultsProvider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/VaultsProvider.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/VaultsProvider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/VaultsProvider.js"],"names":["React","createContext","useEffect","watch","useMaker","usePrevious","Routes","useCdpTypes","VaultsContext","VaultsProvider","children","viewedAddress","account","navigation","network","cdpTypesList","userProxy","proxyAddress","address","viewedAddressProxy","rawUserVaultsList","userVaultsList","rawViewedAddressVaultsList","filter","vault","some","cdpType","vaultType","undefined","viewedAddressVaultsList","userVaultIds","map","vaultId","prevUserVaultsList","prevUserVaultIds","viewedAddressVaultIds","length","userVaultsData","viewedAddressVaultsData","newVaultCreated","newVaultId","navigate","BORROW","userVaults","viewedAddressVaults"],"mappings":"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","sourcesContent":["import React, { createContext } from 'react';\nimport { useEffect } from 'react';\nimport { watch } from 'hooks/useObservable';\nimport useMaker from 'hooks/useMaker';\nimport usePrevious from 'hooks/usePrevious';\nimport { Routes } from 'utils/constants';\nimport useCdpTypes from 'hooks/useCdpTypes';\n\nexport const VaultsContext = createContext({});\n\nfunction VaultsProvider({ children, viewedAddress }) {\n  const { account, navigation, network } = useMaker();\n  const { cdpTypesList } = useCdpTypes();\n\n  const userProxy = watch.proxyAddress(account?.address);\n  const viewedAddressProxy = watch.proxyAddress(viewedAddress);\n\n  const rawUserVaultsList = watch.userVaultsList(account?.address);\n  const rawViewedAddressVaultsList = watch.userVaultsList(viewedAddress);\n\n  const userVaultsList = rawUserVaultsList\n    ? rawUserVaultsList.filter(vault =>\n        cdpTypesList.some(cdpType => cdpType === vault.vaultType)\n      )\n    : undefined;\n\n  const viewedAddressVaultsList = rawViewedAddressVaultsList\n    ? rawViewedAddressVaultsList.filter(vault =>\n        cdpTypesList.some(cdpType => cdpType === vault.vaultType)\n      )\n    : undefined;\n\n  const userVaultIds = userVaultsList\n    ? userVaultsList.map(({ vaultId }) => vaultId)\n    : [];\n\n  const prevUserVaultsList = usePrevious(userVaultsList);\n  const prevUserVaultIds = usePrevious(userVaultIds);\n\n  const viewedAddressVaultIds =\n    viewedAddressVaultsList !== undefined && viewedAddressVaultsList.length\n      ? viewedAddressVaultsList.map(({ vaultId }) => vaultId)\n      : [];\n\n  const userVaultsData = watch.userVaultsData(\n    userVaultIds.length ? userVaultIds : undefined\n  );\n  const viewedAddressVaultsData = watch.userVaultsData(\n    viewedAddressVaultIds.length ? viewedAddressVaultIds : undefined\n  );\n\n  const newVaultCreated =\n    prevUserVaultsList !== undefined &&\n    userVaultsList !== undefined &&\n    prevUserVaultIds.length + 1 === userVaultIds.length;\n\n  useEffect(() => {\n    if (newVaultCreated) {\n      const newVaultId = userVaultIds[0];\n      navigation.navigate(`/${Routes.BORROW}/${newVaultId}?network=${network}`);\n    }\n  }, [newVaultCreated, navigation, network, userVaultIds]);\n\n  return (\n    <VaultsContext.Provider\n      value={{\n        userVaults:\n          rawUserVaultsList !== undefined\n            ? userVaultIds && userVaultsData\n              ? userVaultsData\n              : []\n            : userProxy\n            ? undefined\n            : [],\n        viewedAddressVaults:\n          viewedAddressProxy === undefined\n            ? undefined\n            : viewedAddressProxy === null\n            ? []\n            : viewedAddressVaultsList === undefined\n            ? undefined\n            : !viewedAddressVaultIds.length\n            ? []\n            : viewedAddressVaultsData\n      }}\n    >\n      {children}\n    </VaultsContext.Provider>\n  );\n}\n\nexport default VaultsProvider;\n"]},"metadata":{},"sourceType":"module"}