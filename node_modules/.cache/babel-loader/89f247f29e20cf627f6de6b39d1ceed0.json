{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { createContext, useState } from 'react';\nimport lang, { languages, defaultLocale } from 'languages';\nimport { getPreferredLanguage } from 'utils/language';\nimport debug from 'debug';\nvar log = debug('maker:LanguageProvider');\nexport var LanguageContext = createContext();\n\nvar getQueryParamByName = function getQueryParamByName(name) {\n  var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n};\n\nfunction LanguageProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      locale = _useState2[0],\n      setLocale_ = _useState2[1];\n\n  var setLocale = function setLocale(value) {\n    setLocale_(value);\n    lang.setLanguage(value);\n\n    if (locale) {\n      log(\"Language set to: \".concat(value));\n      window.localStorage.setItem('locale', value);\n    }\n  }; // First time load\n\n\n  if (locale === null) {\n    var langOverrideUrl = getQueryParamByName('lang');\n    var localOverrideUrl = getQueryParamByName('locale');\n    var localeOverrideLocalStorage = window.localStorage.getItem('locale');\n    var localeOverrides = [langOverrideUrl, localOverrideUrl, localeOverrideLocalStorage].filter(function (x) {\n      return x;\n    });\n    var detectedLanguage = getPreferredLanguage({\n      languages: languages.map(function (language) {\n        return language.value;\n      }),\n      overrides: localeOverrides,\n      fallback: defaultLocale\n    });\n    log(\"Detected language: \".concat(detectedLanguage));\n    window.localStorage.setItem('locale', detectedLanguage);\n    setLocale(detectedLanguage || 'en');\n  }\n\n  return /*#__PURE__*/React.createElement(LanguageContext.Provider, {\n    value: {\n      lang: lang,\n      locale: locale,\n      setLocale: setLocale\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n__signature__(LanguageProvider, \"useState{[locale, setLocale_](null)}\");\n\nvar _default = LanguageProvider;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(log, \"log\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js\");\n  reactHotLoader.register(LanguageContext, \"LanguageContext\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js\");\n  reactHotLoader.register(getQueryParamByName, \"getQueryParamByName\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js\");\n  reactHotLoader.register(LanguageProvider, \"LanguageProvider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/LanguageProvider.js"],"names":["React","createContext","useState","lang","languages","defaultLocale","getPreferredLanguage","debug","log","LanguageContext","getQueryParamByName","name","match","RegExp","exec","window","location","search","decodeURIComponent","replace","LanguageProvider","children","locale","setLocale_","setLocale","value","setLanguage","localStorage","setItem","langOverrideUrl","localOverrideUrl","localeOverrideLocalStorage","getItem","localeOverrides","filter","x","detectedLanguage","map","language","overrides","fallback"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,IAAP,IAAeC,SAAf,EAA0BC,aAA1B,QAA+C,WAA/C;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAGD,KAAK,CAAC,wBAAD,CAAjB;AAEA,OAAO,IAAME,eAAe,GAAGR,aAAa,EAArC;;AAEP,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,IAAI,EAAI;AAClC,MAAMC,KAAK,GAAGC,MAAM,CAAC,SAASF,IAAT,GAAgB,UAAjB,CAAN,CAAmCG,IAAnC,CAAwCC,MAAM,CAACC,QAAP,CAAgBC,MAAxD,CAAd;AACA,SAAOL,KAAK,IAAIM,kBAAkB,CAACN,KAAK,CAAC,CAAD,CAAL,CAASO,OAAT,CAAiB,KAAjB,EAAwB,GAAxB,CAAD,CAAlC;AACD,CAHD;;AAKA,SAASC,gBAAT,OAAwC;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACTnB,QAAQ,CAAC,IAAD,CADC;AAAA;AAAA,MAC/BoB,MAD+B;AAAA,MACvBC,UADuB;;AAGtC,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzBF,IAAAA,UAAU,CAACE,KAAD,CAAV;AACAtB,IAAAA,IAAI,CAACuB,WAAL,CAAiBD,KAAjB;;AACA,QAAIH,MAAJ,EAAY;AACVd,MAAAA,GAAG,4BAAqBiB,KAArB,EAAH;AACAV,MAAAA,MAAM,CAACY,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCH,KAAtC;AACD;AACF,GAPD,CAHsC,CAYtC;;;AACA,MAAIH,MAAM,KAAK,IAAf,EAAqB;AACnB,QAAMO,eAAe,GAAGnB,mBAAmB,CAAC,MAAD,CAA3C;AACA,QAAMoB,gBAAgB,GAAGpB,mBAAmB,CAAC,QAAD,CAA5C;AACA,QAAMqB,0BAA0B,GAAGhB,MAAM,CAACY,YAAP,CAAoBK,OAApB,CAA4B,QAA5B,CAAnC;AACA,QAAMC,eAAe,GAAG,CACtBJ,eADsB,EAEtBC,gBAFsB,EAGtBC,0BAHsB,EAItBG,MAJsB,CAIf,UAAAC,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAJc,CAAxB;AAMA,QAAMC,gBAAgB,GAAG9B,oBAAoB,CAAC;AAC5CF,MAAAA,SAAS,EAAEA,SAAS,CAACiC,GAAV,CAAc,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACb,KAAb;AAAA,OAAtB,CADiC;AAE5Cc,MAAAA,SAAS,EAAEN,eAFiC;AAG5CO,MAAAA,QAAQ,EAAEnC;AAHkC,KAAD,CAA7C;AAMAG,IAAAA,GAAG,8BAAuB4B,gBAAvB,EAAH;AACArB,IAAAA,MAAM,CAACY,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCQ,gBAAtC;AACAZ,IAAAA,SAAS,CAACY,gBAAgB,IAAI,IAArB,CAAT;AACD;;AAED,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEjC,MAAAA,IAAI,EAAJA,IAAF;AAAQmB,MAAAA,MAAM,EAANA,MAAR;AAAgBE,MAAAA,SAAS,EAATA;AAAhB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD;;cAvCQD,gB;;eAyCMA,gB;AAAf;;;;;;;;;;0BAlDMZ,G;0BAEOC,e;0BAEPC,mB;0BAKGU,gB","sourcesContent":["import React, { createContext, useState } from 'react';\nimport lang, { languages, defaultLocale } from 'languages';\nimport { getPreferredLanguage } from 'utils/language';\nimport debug from 'debug';\nconst log = debug('maker:LanguageProvider');\n\nexport const LanguageContext = createContext();\n\nconst getQueryParamByName = name => {\n  const match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n};\n\nfunction LanguageProvider({ children }) {\n  const [locale, setLocale_] = useState(null);\n\n  const setLocale = value => {\n    setLocale_(value);\n    lang.setLanguage(value);\n    if (locale) {\n      log(`Language set to: ${value}`);\n      window.localStorage.setItem('locale', value);\n    }\n  };\n\n  // First time load\n  if (locale === null) {\n    const langOverrideUrl = getQueryParamByName('lang');\n    const localOverrideUrl = getQueryParamByName('locale');\n    const localeOverrideLocalStorage = window.localStorage.getItem('locale');\n    const localeOverrides = [\n      langOverrideUrl,\n      localOverrideUrl,\n      localeOverrideLocalStorage\n    ].filter(x => x);\n\n    const detectedLanguage = getPreferredLanguage({\n      languages: languages.map(language => language.value),\n      overrides: localeOverrides,\n      fallback: defaultLocale\n    });\n\n    log(`Detected language: ${detectedLanguage}`);\n    window.localStorage.setItem('locale', detectedLanguage);\n    setLocale(detectedLanguage || 'en');\n  }\n\n  return (\n    <LanguageContext.Provider value={{ lang, locale, setLocale }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport default LanguageProvider;\n"]},"metadata":{},"sourceType":"module"}