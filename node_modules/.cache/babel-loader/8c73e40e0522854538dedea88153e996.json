{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Deposit.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Text, Input, Grid, Button } from '@makerdao/ui-components-core';\nimport Info from './shared/Info';\nimport InfoContainer from './shared/InfoContainer';\nimport useMaker from 'hooks/useMaker';\nimport useProxy from 'hooks/useProxy';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useValidatedInput from 'hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport { formatCollateralizationRatio, formatter } from 'utils/ui';\nimport { multiply } from 'utils/bignumber';\nimport { getCurrency } from 'utils/cdp';\nimport ProxyAllowanceToggle from 'components/ProxyAllowanceToggle';\nimport BigNumber from 'bignumber.js';\nimport { getColor } from '../../styles/theme';\nimport { watch } from 'hooks/useObservable';\n\nvar Deposit = function Deposit(_ref) {\n  var vault = _ref.vault,\n      reset = _ref.reset;\n\n  var _useAnalytics = useAnalytics('Deposit', 'Sidebar'),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var _useProxy = useProxy(),\n      hasProxy = _useProxy.hasProxy;\n\n  var _useMaker2 = useMaker(),\n      account = _useMaker2.account;\n\n  var vaultType = vault.vaultType,\n      collateralTypePrice = vault.collateralTypePrice,\n      collateralValue = vault.collateralValue,\n      collateralAmount = vault.collateralAmount,\n      collateralValueForAmount = vault.collateralValueForAmount,\n      collateralAmountByValue = vault.collateralAmountByValue;\n  var symbol = collateralAmount === null || collateralAmount === void 0 ? void 0 : collateralAmount.symbol;\n\n  var _useTokenAllowance = useTokenAllowance(symbol),\n      hasAllowance = _useTokenAllowance.hasAllowance,\n      hasSufficientAllowance = _useTokenAllowance.hasSufficientAllowance;\n\n  var gemBalances = useWalletBalances();\n  var gemBalance = gemBalances[symbol] || 0;\n\n  function convertAmountToValue(amount) {\n    if (amount === 0) return BigNumber(0);\n    var r = collateralValueForAmount(BigNumber(amount));\n    if (r === undefined) return BigNumber(0);\n    return r;\n  }\n\n  function convertValueToAmount(value) {\n    if (value === 0) return BigNumber(0);\n    var r = collateralAmountByValue(BigNumber(value));\n    if (r === undefined) return BigNumber(0);\n    return r;\n  }\n\n  var userVaultsList = watch.userVaultsList(account === null || account === void 0 ? void 0 : account.address);\n  var userVaultIds = userVaultsList ? userVaultsList.map(function (_ref2) {\n    var vaultId = _ref2.vaultId;\n    return vaultId;\n  }) : [];\n\n  function fairDistribAllowToLockValue(addValue) {\n    var ids = userVaultIds;\n    var curTime = Math.round(new Date().getTime() / 1000);\n    var r = watch.fairDistribAllowToLockValue(ids, addValue, curTime);\n    if (r == undefined) return true;\n    return r;\n  }\n\n  var depositBalance = convertAmountToValue(gemBalance);\n  console.log('deposit', depositBalance);\n\n  var _useValidatedInput = useValidatedInput('', {\n    maxFloat: depositBalance,\n    minFloat: 0,\n    isFloat: true,\n    custom: {\n      allowanceInvalid: function allowanceInvalid(value) {\n        return !hasSufficientAllowance(value);\n      }\n    }\n  }, {\n    maxFloat: function maxFloat() {\n      return lang.formatString(lang.action_sidebar.insufficient_balance, symbol);\n    },\n    allowanceInvalid: function allowanceInvalid() {\n      return lang.formatString(lang.action_sidebar.invalid_allowance, symbol);\n    }\n  }),\n      _useValidatedInput2 = _slicedToArray(_useValidatedInput, 4),\n      value = _useValidatedInput2[0],\n      onAmountChange = _useValidatedInput2[2],\n      amountErrors = _useValidatedInput2[3];\n\n  var valueToDeposit = value || BigNumber(0);\n  var amountToDeposit = convertValueToAmount(valueToDeposit);\n  var fairDistribError = fairDistribAllowToLockValue(valueToDeposit) ? null : lang.cdp_create.fair_distrib_not_allow;\n  var valid = value && fairDistribError == null && !amountErrors && hasAllowance && hasProxy;\n\n  var deposit = function deposit() {\n    var currency = getCurrency({\n      ilk: vaultType\n    });\n    maker.service('mcd:cdpManager').lock(vault.id, vaultType, currency(amountToDeposit));\n    reset();\n  };\n\n  var valueDiff = multiply(amountToDeposit, collateralTypePrice.toNumber());\n  var collateralizationRatio = vault.calculateCollateralizationRatio({\n    collateralValue: collateralValue.plus(valueDiff)\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, lang.formatString(lang.action_sidebar.deposit_title, symbol)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '16px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.action_sidebar.deposit_description, symbol))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      color: getColor('whiteText')\n    },\n    name: \"valueToLock\",\n    type: \"number\",\n    min: \"0\",\n    value: value,\n    onChange: onAmountChange,\n    placeholder: \"0.00 USD\",\n    failureMessage: amountErrors || fairDistribError,\n    \"data-testid\": \"deposit-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ProxyAllowanceToggle, {\n    token: symbol,\n    trackBtnClick: trackBtnClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: \"1fr 1fr\",\n    gridColumnGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    disabled: !valid,\n    onClick: function onClick() {\n      trackBtnClick('Confirm', {\n        value: value,\n        fathom: {\n          id: \"\".concat(symbol, \"VaultDeposit\"),\n          value: value\n        }\n      });\n      deposit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, lang.actions.deposit), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"secondary-outline\",\n    onClick: function onClick() {\n      trackBtnClick('Cancel');\n      reset();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, lang.cancel)), /*#__PURE__*/React.createElement(InfoContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Info, {\n    title: lang.action_sidebar.current_account_balance,\n    body: \"\".concat(formatter(depositBalance), \" USD\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    title: lang.action_sidebar.new_collateralization_ratio,\n    body: formatCollateralizationRatio(collateralizationRatio),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  })));\n};\n\n__signature__(Deposit, \"useAnalytics{{ trackBtnClick }}\\nuseLanguage{{ lang }}\\nuseMaker{{ maker }}\\nuseProxy{{ hasProxy }}\\nuseMaker{{ account }}\\nuseTokenAllowance{{ hasAllowance, hasSufficientAllowance }}\\nuseWalletBalances{gemBalances}\\nuseValidatedInput{[value, , onAmountChange, amountErrors]}\", function () {\n  return [useAnalytics, useLanguage, useMaker, useProxy, useMaker, useTokenAllowance, useWalletBalances, useValidatedInput];\n});\n\nvar _default = Deposit;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Deposit, \"Deposit\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Deposit.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Deposit.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Deposit.js"],"names":["React","Text","Input","Grid","Button","Info","InfoContainer","useMaker","useProxy","useTokenAllowance","useWalletBalances","useValidatedInput","useLanguage","useAnalytics","formatCollateralizationRatio","formatter","multiply","getCurrency","ProxyAllowanceToggle","BigNumber","getColor","watch","Deposit","vault","reset","trackBtnClick","lang","maker","hasProxy","account","vaultType","collateralTypePrice","collateralValue","collateralAmount","collateralValueForAmount","collateralAmountByValue","symbol","hasAllowance","hasSufficientAllowance","gemBalances","gemBalance","convertAmountToValue","amount","r","undefined","convertValueToAmount","value","userVaultsList","address","userVaultIds","map","vaultId","fairDistribAllowToLockValue","addValue","ids","curTime","Math","round","Date","getTime","depositBalance","console","log","maxFloat","minFloat","isFloat","custom","allowanceInvalid","formatString","action_sidebar","insufficient_balance","invalid_allowance","onAmountChange","amountErrors","valueToDeposit","amountToDeposit","fairDistribError","cdp_create","fair_distrib_not_allow","valid","deposit","currency","ilk","service","lock","id","valueDiff","toNumber","collateralizationRatio","calculateCollateralizationRatio","plus","fontSize","color","deposit_title","deposit_description","fathom","actions","cancel","current_account_balance","new_collateralization_ratio"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, Input, Grid, Button } from '@makerdao/ui-components-core';\nimport Info from './shared/Info';\nimport InfoContainer from './shared/InfoContainer';\nimport useMaker from 'hooks/useMaker';\nimport useProxy from 'hooks/useProxy';\nimport useTokenAllowance from 'hooks/useTokenAllowance';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useValidatedInput from 'hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport {\n  formatCollateralizationRatio,\n  formatter\n} from 'utils/ui';\nimport { multiply } from 'utils/bignumber';\nimport { getCurrency } from 'utils/cdp';\nimport ProxyAllowanceToggle from 'components/ProxyAllowanceToggle';\nimport BigNumber from 'bignumber.js';\nimport { getColor } from '../../styles/theme';\nimport { watch } from 'hooks/useObservable';\n\nconst Deposit = ({ vault, reset }) => {\n  const { trackBtnClick } = useAnalytics('Deposit', 'Sidebar');\n  const { lang } = useLanguage();\n  const { maker } = useMaker();\n  const { hasProxy } = useProxy();\n  const { account } = useMaker();\n\n  let {\n    vaultType,\n    collateralTypePrice,\n    collateralValue,\n    collateralAmount,\n    collateralValueForAmount,\n    collateralAmountByValue\n  } = vault;\n\n  const symbol = collateralAmount?.symbol;\n  const { hasAllowance, hasSufficientAllowance } = useTokenAllowance(symbol);\n  const gemBalances = useWalletBalances();\n  const gemBalance = gemBalances[symbol] || 0;\n\n  function convertAmountToValue(amount) {\n    if (amount === 0) return BigNumber(0);\n    const r = collateralValueForAmount(BigNumber(amount));\n\n    if (r === undefined) return BigNumber(0);\n\n    return r;\n  }\n\n  function convertValueToAmount(value) {\n    if (value === 0) return BigNumber(0);\n    const r = collateralAmountByValue(BigNumber(value));\n\n    if (r === undefined) return BigNumber(0);\n    return r;\n  }\n\n  const userVaultsList = watch.userVaultsList(account?.address);\n  const userVaultIds = userVaultsList\n    ? userVaultsList.map(({ vaultId }) => vaultId)\n    : [];\n\n  function fairDistribAllowToLockValue(addValue) {\n    const ids = userVaultIds;\n    const curTime = Math.round(new Date().getTime() / 1000);\n    const r = watch.fairDistribAllowToLockValue(ids, addValue, curTime);\n    if (r == undefined) return true;\n    return r;\n  }\n\n  const depositBalance = convertAmountToValue(gemBalance);\n  console.log('deposit', depositBalance);\n\n  const [value, , onAmountChange, amountErrors] = useValidatedInput(\n    '',\n    {\n      maxFloat: depositBalance,\n      minFloat: 0,\n      isFloat: true,\n      custom: {\n        allowanceInvalid: value => !hasSufficientAllowance(value)\n      }\n    },\n    {\n      maxFloat: () =>\n        lang.formatString(lang.action_sidebar.insufficient_balance, symbol),\n      allowanceInvalid: () =>\n        lang.formatString(lang.action_sidebar.invalid_allowance, symbol)\n    }\n  );\n\n  const valueToDeposit = value || BigNumber(0);\n  const amountToDeposit = convertValueToAmount(valueToDeposit);\n\n  const fairDistribError = fairDistribAllowToLockValue(valueToDeposit)\n    ? null\n    : lang.cdp_create.fair_distrib_not_allow;\n\n  const valid =\n    value &&\n    fairDistribError == null &&\n    !amountErrors &&\n    hasAllowance &&\n    hasProxy;\n\n  const deposit = () => {\n    const currency = getCurrency({ ilk: vaultType });\n    maker\n      .service('mcd:cdpManager')\n      .lock(vault.id, vaultType, currency(amountToDeposit));\n    reset();\n  };\n\n  const valueDiff = multiply(amountToDeposit, collateralTypePrice.toNumber());\n\n  const collateralizationRatio = vault.calculateCollateralizationRatio({\n    collateralValue: collateralValue.plus(valueDiff)\n  });\n\n  return (\n    <Grid gridRowGap=\"m\">\n      <Grid gridRowGap=\"s\">\n        <Text style={{ fontSize: '20px', color: getColor('whiteText') }}>\n          {lang.formatString(lang.action_sidebar.deposit_title, symbol)}\n        </Text>\n        <p>\n          <Text style={{ fontSize: '16px', color: getColor('greyText') }}>\n            {lang.formatString(lang.action_sidebar.deposit_description, symbol)}\n          </Text>\n        </p>\n        <div className=\"input_border\">\n          <Input\n            style={{ color: getColor('whiteText') }}\n            name=\"valueToLock\"\n            type=\"number\"\n            min=\"0\"\n            value={value}\n            onChange={onAmountChange}\n            placeholder={`0.00 USD`}\n            failureMessage={amountErrors || fairDistribError}\n            data-testid=\"deposit-input\"\n          />\n        </div>\n      </Grid>\n      <ProxyAllowanceToggle token={symbol} trackBtnClick={trackBtnClick} />\n      <Grid gridTemplateColumns=\"1fr 1fr\" gridColumnGap=\"s\">\n        <Button\n          className=\"btn\"\n          disabled={!valid}\n          onClick={() => {\n            trackBtnClick('Confirm', {\n              value,\n              fathom: { id: `${symbol}VaultDeposit`, value }\n            });\n            deposit();\n          }}\n        >\n          {lang.actions.deposit}\n        </Button>\n        <Button\n          className=\"btn\"\n          variant=\"secondary-outline\"\n          onClick={() => {\n            trackBtnClick('Cancel');\n            reset();\n          }}\n        >\n          {lang.cancel}\n        </Button>\n      </Grid>\n      <InfoContainer>\n        <Info\n          title={lang.action_sidebar.current_account_balance}\n          body={`${formatter(depositBalance)} USD`}\n        />\n        <Info\n          title={lang.action_sidebar.new_collateralization_ratio}\n          body={formatCollateralizationRatio(collateralizationRatio)}\n        />\n      </InfoContainer>\n    </Grid>\n  );\n};\nexport default Deposit;\n"]},"metadata":{},"sourceType":"module"}