{"ast":null,"code":"import _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/FullScreenAction.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport sidebars from '../Sidebars';\nimport { Box } from '@makerdao/ui-components-core';\nimport SidebarActionLayout from '../../layouts/SidebarActionLayout';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { getColor } from 'styles/theme';\nexport default function FullScreenAction(_ref) {\n  var type = _ref.type,\n      reset = _ref.reset,\n      props = _ref.props;\n  var domNode = document.getElementById('portal1');\n  var SidebarComponent = sidebars[type];\n  var ref = useRef();\n  useEffect(function () {\n    var scrollable = ref.current;\n    disableBodyScroll(scrollable);\n    return function () {\n      return enableBodyScroll(scrollable);\n    };\n  }, []);\n  return ReactDOM.createPortal( /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    position: \"fixed\",\n    width: \"100vw\",\n    height: \"100%\",\n    overflow: \"scroll\",\n    style: {\n      background: getColor('cardBg'),\n      borderColor: getColor('border'),\n      top: '0',\n      left: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SidebarActionLayout, {\n    onClose: reset,\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SidebarComponent, Object.assign({}, _objectSpread({}, props, {\n    reset: reset\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })))), domNode);\n}\n\n__signature__(FullScreenAction, \"useRef{ref}\\nuseEffect{}\");\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FullScreenAction, \"FullScreenAction\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/FullScreenAction.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/FullScreenAction.js"],"names":["React","useEffect","useRef","ReactDOM","sidebars","Box","SidebarActionLayout","disableBodyScroll","enableBodyScroll","getColor","FullScreenAction","type","reset","props","domNode","document","getElementById","SidebarComponent","ref","scrollable","current","createPortal","background","borderColor","top","left"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,GAAT,QAAoB,8BAApB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,kBAApD;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,eAAe,SAASC,gBAAT,OAAkD;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,KAAS,QAATA,KAAS;AAC/D,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACA,MAAMC,gBAAgB,GAAGb,QAAQ,CAACO,IAAD,CAAjC;AACA,MAAMO,GAAG,GAAGhB,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkB,UAAU,GAAGD,GAAG,CAACE,OAAvB;AACAb,IAAAA,iBAAiB,CAACY,UAAD,CAAjB;AACA,WAAO;AAAA,aAAMX,gBAAgB,CAACW,UAAD,CAAtB;AAAA,KAAP;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOhB,QAAQ,CAACkB,YAAT,eACL,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEH,GADP;AAEE,IAAA,QAAQ,EAAC,OAFX;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,QAAQ,EAAC,QALX;AAME,IAAA,KAAK,EAAE;AAELI,MAAAA,UAAU,EAAEb,QAAQ,CAAC,QAAD,CAFf;AAGLc,MAAAA,WAAW,EAAEd,QAAQ,CAAC,QAAD,CAHhB;AAILe,MAAAA,GAAG,EAAE,GAJA;AAKLC,MAAAA,IAAI,EAAE;AALD,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEb,KAA9B;AAAqC,IAAA,UAAU,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD,sCAA2BC,KAA3B;AAAkCD,IAAAA,KAAK,EAALA;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAdF,CADK,EAmBLE,OAnBK,CAAP;AAqBD;;cAhCuBJ,gB;;;;;;;;;;;0BAAAA,gB","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport sidebars from '../Sidebars';\nimport { Box } from '@makerdao/ui-components-core';\nimport SidebarActionLayout from '../../layouts/SidebarActionLayout';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { getColor } from 'styles/theme';\n\nexport default function FullScreenAction({ type, reset, props }) {\n  const domNode = document.getElementById('portal1');\n  const SidebarComponent = sidebars[type];\n  const ref = useRef();\n\n  useEffect(() => {\n    const scrollable = ref.current;\n    disableBodyScroll(scrollable);\n    return () => enableBodyScroll(scrollable);\n  }, []);\n\n  return ReactDOM.createPortal(\n    <Box\n      ref={ref}\n      position=\"fixed\"\n      width=\"100vw\"\n      height=\"100%\"\n      overflow=\"scroll\"\n      style={{\n       \n        background: getColor('cardBg'),\n        borderColor: getColor('border'),\n        top: '0',\n        left: '0'\n      }}\n    >\n      <SidebarActionLayout onClose={reset} fullscreen={true}>\n        <SidebarComponent {...{ ...props, reset }} />\n      </SidebarActionLayout>\n    </Box>,\n    domNode\n  );\n}\n"]},"metadata":{},"sourceType":"module"}