{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { PublicService } from '@makerdao/services-core';\nimport map from 'lodash/map';\nimport fetch from 'isomorphic-fetch';\nexport var API_URL = 'https://ethgasstation.info/json/ethgasAPI.json?api-key=';\n\nvar GasService = /*#__PURE__*/function (_PublicService) {\n  _inherits(GasService, _PublicService);\n\n  var _super = _createSuper(GasService);\n\n  function GasService() {\n    var _this;\n\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'gas';\n\n    _classCallCheck(this, GasService);\n\n    _this = _super.call(this, name, ['web3']);\n    _this._fallback = 4000000;\n    _this._multiplier = 1.55;\n    _this._transactionSpeed = 'fast';\n    return _this;\n  }\n\n  _createClass(GasService, [{\n    key: \"initialize\",\n    value: function initialize(settings) {\n      if (settings) {\n        this._parseConfig(settings.limit, 'limit');\n\n        this._parseConfig(settings.price, 'price');\n      }\n\n      this._settings = settings || {};\n      this._gasStationDataPromise = this.disablePrice ? Promise.resolve({}) : this.fetchGasStationData();\n    }\n  }, {\n    key: \"_parseConfig\",\n    value: function _parseConfig() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      var label = arguments.length > 1 ? arguments[1] : undefined;\n      return settings === 'default' || typeof settings === 'object' ? this._setProperties(settings, label) : this[label] = settings;\n    }\n  }, {\n    key: \"_setProperties\",\n    value: function _setProperties(settings, label) {\n      var _this2 = this;\n\n      if (settings === 'default') return;\n      return map(settings, function (value, key) {\n        if (key === 'disable') {\n          _this2['disable' + label.charAt(0).toUpperCase() + label.slice(1)] = value;\n        } else {\n          _this2[key] = value;\n        }\n      });\n    }\n  }, {\n    key: \"fetchGasStationData\",\n    value: function () {\n      var _fetchGasStationData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(API_URL + this._settings.apiKey);\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response.json());\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error fetching gas data; disabling preset gas price', _context.t0);\n                this.disablePrice = true;\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function fetchGasStationData() {\n        return _fetchGasStationData.apply(this, arguments);\n      }\n\n      return fetchGasStationData;\n    }()\n  }, {\n    key: \"getGasPrice\",\n    value: function () {\n      var _getGasPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(txSpeed) {\n        var speedSetting, gasStationData, price;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.price) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.price);\n\n              case 2:\n                speedSetting = txSpeed ? txSpeed : this.transactionSpeed;\n                _context2.next = 5;\n                return this._gasStationDataPromise;\n\n              case 5:\n                gasStationData = _context2.sent;\n                price = this.get('web3')._web3.utils.toWei((gasStationData[speedSetting] / 10).toString(), 'gwei');\n                return _context2.abrupt(\"return\", price);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getGasPrice(_x) {\n        return _getGasPrice.apply(this, arguments);\n      }\n\n      return getGasPrice;\n    }()\n  }, {\n    key: \"getWaitTime\",\n    value: function () {\n      var _getWaitTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txSpeed) {\n        var speedSetting, gasStationData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                speedSetting = txSpeed ? txSpeed : this.transactionSpeed;\n                _context3.next = 3;\n                return this._gasStationDataPromise;\n\n              case 3:\n                gasStationData = _context3.sent;\n                return _context3.abrupt(\"return\", gasStationData[\"\".concat(speedSetting, \"Wait\")]);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getWaitTime(_x2) {\n        return _getWaitTime.apply(this, arguments);\n      }\n\n      return getWaitTime;\n    }()\n  }, {\n    key: \"estimateGasLimit\",\n    value: function () {\n      var _estimateGasLimit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transaction) {\n        var web3Data, blockLimit, estimate;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this.limit) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.limit);\n\n              case 2:\n                if (!this.disableLimit) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", this.fallback);\n\n              case 4:\n                web3Data = [];\n                _context4.prev = 5;\n                _context4.next = 8;\n                return Promise.all([this.get('web3').getBlock('latest'), this.get('web3').estimateGas(transaction)]);\n\n              case 8:\n                web3Data = _context4.sent;\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](5);\n                return _context4.abrupt(\"return\", this.fallback);\n\n              case 14:\n                blockLimit = web3Data[0].gasLimit;\n                estimate = web3Data[1];\n\n                if (!(!this.multiplier && !this.absolute)) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", Math.min(this.absolute, blockLimit));\n\n              case 20:\n                if (this.absolute) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", Math.min(parseInt(estimate * this.multiplier), blockLimit));\n\n              case 24:\n                return _context4.abrupt(\"return\", Math.min(parseInt(estimate * this.multiplier), this.absolute, blockLimit));\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[5, 11]]);\n      }));\n\n      function estimateGasLimit(_x3) {\n        return _estimateGasLimit.apply(this, arguments);\n      }\n\n      return estimateGasLimit;\n    }()\n  }, {\n    key: \"removeMultiplier\",\n    value: function removeMultiplier() {\n      this._multiplier = null;\n    }\n  }, {\n    key: \"removeAbsolute\",\n    value: function removeAbsolute() {\n      this._absolute = null;\n    }\n  }, {\n    key: \"removeFallback\",\n    value: function removeFallback() {\n      this._fallback = null;\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }, {\n    key: \"multiplier\",\n    get: function get() {\n      return this._multiplier;\n    },\n    set: function set(number) {\n      if (number <= 0) {\n        throw new Error('Gas limit multiplier must be greater than 0');\n      }\n\n      this._multiplier = number;\n    }\n  }, {\n    key: \"absolute\",\n    get: function get() {\n      return this._absolute;\n    },\n    set: function set(number) {\n      if (number <= 0) {\n        throw new Error('Absolute gas limit must be greater than 0');\n      }\n\n      this._absolute = number;\n    }\n  }, {\n    key: \"fallback\",\n    get: function get() {\n      return this._fallback;\n    },\n    set: function set(number) {\n      if (number <= 0) {\n        throw new Error('Fallback gas limit must be greater than 0');\n      }\n\n      this._fallback = number;\n    }\n  }, {\n    key: \"transactionSpeed\",\n    get: function get() {\n      return this._transactionSpeed;\n    },\n    set: function set(speed) {\n      var validKeys = ['average', 'fast', 'fastest', 'safeLow'];\n\n      if (!validKeys.includes(speed)) {\n        throw new Error(\"Invalid transaction speed -- options are \".concat(validKeys));\n      }\n\n      this._transactionSpeed = speed;\n    }\n  }]);\n\n  return GasService;\n}(PublicService);\n\nexport { GasService as default };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(API_URL, \"API_URL\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/GasService.js\");\n  reactHotLoader.register(GasService, \"GasService\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/GasService.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/GasService.js"],"names":["PublicService","map","fetch","API_URL","GasService","name","_fallback","_multiplier","_transactionSpeed","settings","_parseConfig","limit","price","_settings","_gasStationDataPromise","disablePrice","Promise","resolve","fetchGasStationData","label","_setProperties","value","key","charAt","toUpperCase","slice","apiKey","response","json","console","error","txSpeed","speedSetting","transactionSpeed","gasStationData","get","_web3","utils","toWei","toString","transaction","disableLimit","fallback","web3Data","all","getBlock","estimateGas","blockLimit","gasLimit","estimate","multiplier","absolute","Math","min","parseInt","_absolute","number","Error","speed","validKeys","includes"],"mappings":"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","sourcesContent":["import { PublicService } from '@makerdao/services-core';\nimport map from 'lodash/map';\nimport fetch from 'isomorphic-fetch';\n\nexport const API_URL =\n  'https://ethgasstation.info/json/ethgasAPI.json?api-key=';\n\nexport default class GasService extends PublicService {\n  constructor(name = 'gas') {\n    super(name, ['web3']);\n    this._fallback = 4000000;\n    this._multiplier = 1.55;\n    this._transactionSpeed = 'fast';\n  }\n\n  initialize(settings) {\n    if (settings) {\n      this._parseConfig(settings.limit, 'limit');\n      this._parseConfig(settings.price, 'price');\n    }\n\n    this._settings = settings || {};\n\n    this._gasStationDataPromise = this.disablePrice\n      ? Promise.resolve({})\n      : this.fetchGasStationData();\n  }\n\n  _parseConfig(settings = 'default', label) {\n    return settings === 'default' || typeof settings === 'object'\n      ? this._setProperties(settings, label)\n      : (this[label] = settings);\n  }\n\n  _setProperties(settings, label) {\n    if (settings === 'default') return;\n\n    return map(settings, (value, key) => {\n      if (key === 'disable') {\n        this[\n          'disable' + label.charAt(0).toUpperCase() + label.slice(1)\n        ] = value;\n      } else {\n        this[key] = value;\n      }\n    });\n  }\n\n  async fetchGasStationData() {\n    try {\n      const response = await fetch(API_URL + this._settings.apiKey);\n      return response.json();\n    } catch (err) {\n      console.error('Error fetching gas data; disabling preset gas price', err);\n      this.disablePrice = true;\n    }\n  }\n\n  async getGasPrice(txSpeed) {\n    if (this.price) return this.price;\n    const speedSetting = txSpeed ? txSpeed : this.transactionSpeed;\n    const gasStationData = await this._gasStationDataPromise;\n    const price = this.get('web3')._web3.utils.toWei(\n      (gasStationData[speedSetting] / 10).toString(),\n      'gwei'\n    );\n\n    return price;\n  }\n\n  async getWaitTime(txSpeed) {\n    const speedSetting = txSpeed ? txSpeed : this.transactionSpeed;\n    const gasStationData = await this._gasStationDataPromise;\n\n    return gasStationData[`${speedSetting}Wait`];\n  }\n\n  async estimateGasLimit(transaction) {\n    if (this.limit) return this.limit;\n    if (this.disableLimit) return this.fallback;\n\n    let web3Data = [];\n    try {\n      web3Data = await Promise.all([\n        this.get('web3').getBlock('latest'),\n        this.get('web3').estimateGas(transaction)\n      ]);\n    } catch (err) {\n      return this.fallback;\n    }\n\n    const blockLimit = web3Data[0].gasLimit;\n    const estimate = web3Data[1];\n\n    if (!this.multiplier && !this.absolute) {\n      return Math.min(this.absolute, blockLimit);\n    } else if (!this.absolute) {\n      return Math.min(parseInt(estimate * this.multiplier), blockLimit);\n    } else {\n      return Math.min(\n        parseInt(estimate * this.multiplier),\n        this.absolute,\n        blockLimit\n      );\n    }\n  }\n\n  get multiplier() {\n    return this._multiplier;\n  }\n\n  set multiplier(number) {\n    if (number <= 0) {\n      throw new Error('Gas limit multiplier must be greater than 0');\n    }\n\n    this._multiplier = number;\n  }\n\n  get absolute() {\n    return this._absolute;\n  }\n\n  set absolute(number) {\n    if (number <= 0) {\n      throw new Error('Absolute gas limit must be greater than 0');\n    }\n\n    this._absolute = number;\n  }\n\n  get fallback() {\n    return this._fallback;\n  }\n\n  set fallback(number) {\n    if (number <= 0) {\n      throw new Error('Fallback gas limit must be greater than 0');\n    }\n\n    this._fallback = number;\n  }\n\n  get transactionSpeed() {\n    return this._transactionSpeed;\n  }\n\n  set transactionSpeed(speed) {\n    const validKeys = ['average', 'fast', 'fastest', 'safeLow'];\n    if (!validKeys.includes(speed)) {\n      throw new Error(`Invalid transaction speed -- options are ${validKeys}`);\n    }\n\n    this._transactionSpeed = speed;\n  }\n\n  removeMultiplier() {\n    this._multiplier = null;\n  }\n\n  removeAbsolute() {\n    this._absolute = null;\n  }\n\n  removeFallback() {\n    this._fallback = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}