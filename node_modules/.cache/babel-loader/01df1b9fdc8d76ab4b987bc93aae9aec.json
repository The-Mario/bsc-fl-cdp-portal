{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { createMemoryHistory } from 'history';\nimport { Navigation } from './Navigation';\nexport function createMemoryNavigation(options) {\n  var url = options.url || options.request && options.request.url;\n\n  if (!url) {\n    throw new Error(\"createMemoryNavigation() could not find a URL.\");\n  }\n\n  var history = createMemoryHistory({\n    // The initial entry is ignored, and replaced during the call\n    // to navigate below.\n    initialEntries: ['/']\n  });\n  var navigation = new Navigation({\n    history: history,\n    basename: options.basename,\n    context: options.context,\n    routes: options.routes,\n    trailingSlash: options.trailingSlash\n  });\n  navigation.navigate(__assign({}, options.request, {\n    url: url,\n    replace: true\n  }));\n  return navigation;\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(__assign, \"__assign\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/navi/dist/es/MemoryNavigation.js\");\n  reactHotLoader.register(createMemoryNavigation, \"createMemoryNavigation\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/navi/dist/es/MemoryNavigation.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"module"}