{"ast":null,"code":"import _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated, config } from 'react-spring';\nimport { getColor } from 'styles/theme';\nvar animations = {\n  fade: [{\n    opacity: 0\n  }, {\n    opacity: 1\n  }],\n  fadeUp: [{\n    opacity: 0,\n    transform: 'scale(0.99) translate3d(0, 10px, 0)'\n  }, {\n    opacity: 1,\n    transform: 'scale(1) translate3d(0, 0, 0)'\n  }]\n};\nvar Bg = styled(animated.div).withConfig({\n  displayName: \"templates__Bg\",\n  componentId: \"fbfim8-0\"\n})([\"position:fixed;width:100vw;height:100vh;top:0;left:0;z-index:2001;overflow-y:auto;background:\", \";\"], getColor('cardBg'));\nvar SimpleBg = styled(Bg).withConfig({\n  displayName: \"templates__SimpleBg\",\n  componentId: \"fbfim8-1\"\n})([\"display:flex;justify-content:center;align-items:center;background:\", \";\"], getColor('cardBg'));\n\nvar _StyledSimpleBg = styled(SimpleBg).withConfig({\n  displayName: \"templates___StyledSimpleBg\",\n  componentId: \"fbfim8-2\"\n})({\n  backgroundColor: '#0B0E15'\n});\n\nvar FullscreenModal = forwardRef(__signature__(function (_ref, ref) {\n  var show = _ref.show,\n      onClose = _ref.onClose,\n      modalProps = _ref.modalProps,\n      children = _ref.children;\n\n  var _animations$fadeUp = _slicedToArray(animations.fadeUp, 2),\n      fadeUpStart = _animations$fadeUp[0],\n      fadeUpEnd = _animations$fadeUp[1];\n\n  var _useSpring = useSpring(function () {\n    return {\n      to: fadeUpEnd,\n      from: fadeUpStart,\n      config: config.stiff\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      animation = _useSpring2[0],\n      setAnimation = _useSpring2[1];\n\n  if (!show) return null;\n\n  var onCloseAnimated = function onCloseAnimated() {\n    setAnimation({\n      to: fadeUpStart,\n      onRest: function onRest() {\n        onClose();\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Bg, {\n    ref: ref,\n    onClick: onCloseAnimated,\n    style: animation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, children(_objectSpread({}, modalProps, {\n    onClose: onCloseAnimated\n  })));\n}, \"useSpring{[animation, setAnimation]}\", function () {\n  return [useSpring];\n}));\nvar BasicModal = forwardRef(__signature__(function (_ref2, ref) {\n  var show = _ref2.show,\n      onClose = _ref2.onClose,\n      modalProps = _ref2.modalProps,\n      children = _ref2.children;\n  if (!show) return null;\n\n  var _animations$fade = _slicedToArray(animations.fade, 2),\n      fadeStart = _animations$fade[0],\n      fadeEnd = _animations$fade[1];\n\n  var _animations$fadeUp2 = _slicedToArray(animations.fadeUp, 2),\n      fadeUpStart = _animations$fadeUp2[0],\n      fadeUpEnd = _animations$fadeUp2[1];\n\n  var ModalContent = styled(animated.div).withConfig({\n    displayName: \"templates__ModalContent\",\n    componentId: \"fbfim8-3\"\n  })([\"background-color:\", \";border-radius:6px;padding:\", \"px;box-shadow:0px 3px 13px rgba(67,67,67,0.13);\"], getColor('cardBg'), function (_ref3) {\n    var theme = _ref3.theme;\n    return theme.space.m;\n  });\n\n  var _useSpring3 = useSpring(function () {\n    return {\n      to: fadeEnd,\n      from: fadeStart,\n      config: config.stiff\n    };\n  }),\n      _useSpring4 = _slicedToArray(_useSpring3, 2),\n      bgAnimation = _useSpring4[0],\n      setBgAnimation = _useSpring4[1];\n\n  var _useSpring5 = useSpring(function () {\n    return {\n      to: fadeUpEnd,\n      from: fadeUpStart,\n      config: config.stiff\n    };\n  }),\n      _useSpring6 = _slicedToArray(_useSpring5, 2),\n      contentAnimation = _useSpring6[0],\n      setContentAnimation = _useSpring6[1];\n\n  var onCloseAnimated = function onCloseAnimated() {\n    setBgAnimation({\n      to: fadeStart\n    });\n    setContentAnimation({\n      to: fadeUpStart,\n      onRest: function onRest() {\n        onClose();\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(_StyledSimpleBg, {\n    ref: ref,\n    onClick: onCloseAnimated,\n    style: bgAnimation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    style: contentAnimation,\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, children(_objectSpread({}, modalProps, {\n    onClose: onCloseAnimated\n  }))));\n}, \"useSpring{[bgAnimation, setBgAnimation]}\\nuseSpring{[contentAnimation, setContentAnimation]}\", function () {\n  return [useSpring, useSpring];\n}));\nvar templates = {\n  fullscreen: FullscreenModal,\n  basic: BasicModal,\n  default: BasicModal\n};\nvar _default = templates;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(animations, \"animations\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n  reactHotLoader.register(Bg, \"Bg\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n  reactHotLoader.register(SimpleBg, \"SimpleBg\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n  reactHotLoader.register(FullscreenModal, \"FullscreenModal\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n  reactHotLoader.register(BasicModal, \"BasicModal\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n  reactHotLoader.register(templates, \"templates\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Modals/templates.js"],"names":["React","forwardRef","styled","useSpring","animated","config","getColor","animations","fade","opacity","fadeUp","transform","Bg","div","SimpleBg","backgroundColor","FullscreenModal","ref","show","onClose","modalProps","children","fadeUpStart","fadeUpEnd","to","from","stiff","animation","setAnimation","onCloseAnimated","onRest","BasicModal","fadeStart","fadeEnd","ModalContent","theme","space","m","bgAnimation","setBgAnimation","contentAnimation","setContentAnimation","e","stopPropagation","templates","fullscreen","basic","default"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { useSpring, animated, config } from 'react-spring';\nimport { getColor } from 'styles/theme';\n\nconst animations = {\n  fade: [{ opacity: 0 }, { opacity: 1 }],\n  fadeUp: [\n    {\n      opacity: 0,\n      transform: 'scale(0.99) translate3d(0, 10px, 0)'\n    },\n    {\n      opacity: 1,\n      transform: 'scale(1) translate3d(0, 0, 0)'\n    }\n  ]\n};\n\nconst Bg = styled(animated.div)`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  z-index: 2001;\n  overflow-y: auto;\n  background: ${getColor('cardBg')};\n`;\n\nconst SimpleBg = styled(Bg)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: ${getColor('cardBg')};\n`;\n\nconst FullscreenModal = forwardRef(\n  ({ show, onClose, modalProps, children }, ref) => {\n    const [fadeUpStart, fadeUpEnd] = animations.fadeUp;\n\n    const [animation, setAnimation] = useSpring(() => ({\n      to: fadeUpEnd,\n      from: fadeUpStart,\n      config: config.stiff\n    }));\n\n    if (!show) return null;\n\n    const onCloseAnimated = () => {\n      setAnimation({\n        to: fadeUpStart,\n        onRest() {\n          onClose();\n        }\n      });\n    };\n\n    return (\n      <Bg ref={ref} onClick={onCloseAnimated} style={animation}>\n        {children({ ...modalProps, onClose: onCloseAnimated })}\n      </Bg>\n    );\n  }\n);\n\nconst BasicModal = forwardRef(\n  ({ show, onClose, modalProps, children }, ref) => {\n    if (!show) return null;\n    const [fadeStart, fadeEnd] = animations.fade;\n    const [fadeUpStart, fadeUpEnd] = animations.fadeUp;\n\n    const ModalContent = styled(animated.div)`\n      background-color: ${getColor('cardBg')};\n      border-radius: 6px;\n      padding: ${({ theme }) => theme.space.m}px;\n      box-shadow: 0px 3px 13px rgba(67, 67, 67, 0.13);\n    `;\n\n    const [bgAnimation, setBgAnimation] = useSpring(() => ({\n      to: fadeEnd,\n      from: fadeStart,\n      config: config.stiff\n    }));\n\n    const [contentAnimation, setContentAnimation] = useSpring(() => ({\n      to: fadeUpEnd,\n      from: fadeUpStart,\n      config: config.stiff\n    }));\n\n    const onCloseAnimated = () => {\n      setBgAnimation({\n        to: fadeStart\n      });\n\n      setContentAnimation({\n        to: fadeUpStart,\n        onRest() {\n          onClose();\n        }\n      });\n    };\n\n    return (\n      <SimpleBg\n        ref={ref}\n        onClick={onCloseAnimated}\n        css={{\n          backgroundColor: '#0B0E15'\n        }}\n        style={bgAnimation}\n      >\n        <ModalContent\n          style={contentAnimation}\n          onClick={e => e.stopPropagation()}\n        >\n          {children({ ...modalProps, onClose: onCloseAnimated })}\n        </ModalContent>\n      </SimpleBg>\n    );\n  }\n);\n\nconst templates = {\n  fullscreen: FullscreenModal,\n  basic: BasicModal,\n  default: BasicModal\n};\n\nexport default templates;\n"]},"metadata":{},"sourceType":"module"}