{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/HardwareAccountSelect.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Button, Grid, Flex, Text, Box, Table, Loader } from '@makerdao/ui-components-core';\nimport useHardwareWallet from 'hooks/useHardwareWallet';\nimport { cutMiddle, copyToClipboard } from 'utils/ui';\nimport { getColor } from 'styles/theme';\nimport { CopyBtn, CopyBtnIcon } from './AddressTable';\nimport { ReactComponent as Cross } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/cross.svg\";\nimport { AccountTypes } from 'utils/constants';\nimport { LEDGER_LIVE_PATH } from './LedgerType';\nvar ACCOUNTS_PER_PAGE = 5;\nvar ACCOUNTS_TO_FETCH = 25;\n\nvar _StyledCross = _styled(Cross).withConfig({\n  displayName: \"HardwareAccountSelect___StyledCross\",\n  componentId: \"sc-1ey52hn-0\"\n})({\n  cursor: 'pointer'\n});\n\nvar _StyledTh = _styled(\"th\").withConfig({\n  displayName: \"HardwareAccountSelect___StyledTh\",\n  componentId: \"sc-1ey52hn-1\"\n})({\n  textAlign: 'center'\n});\n\nfunction HardwareAccountSelect(_ref) {\n  var _this = this;\n\n  var type = _ref.type,\n      path = _ref.path,\n      onClose = _ref.onClose,\n      confirmAddress = _ref.confirmAddress;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedAddress = _useState4[0],\n      setSelectedAddress = _useState4[1];\n\n  var numAccountsPerFetch = type === AccountTypes.LEDGER && path === LEDGER_LIVE_PATH ? ACCOUNTS_PER_PAGE : ACCOUNTS_TO_FETCH;\n\n  var _useHardwareWallet = useHardwareWallet({\n    type: type,\n    accountsLength: numAccountsPerFetch,\n    path: path\n  }),\n      fetchMore = _useHardwareWallet.fetchMore,\n      connect = _useHardwareWallet.connect,\n      accounts = _useHardwareWallet.accounts,\n      pickAccount = _useHardwareWallet.pickAccount,\n      fetching = _useHardwareWallet.fetching;\n\n  useEffect(function () {\n    connect().then(function () {\n      onClose();\n    }, onClose);\n  }, [connect, onClose]);\n  var toPage = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(page) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(accounts.length <= page * ACCOUNTS_PER_PAGE)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return fetchMore();\n\n            case 3:\n              setPage(page);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [accounts, fetchMore]);\n\n  var onConfirm = function onConfirm() {\n    pickAccount(selectedAddress, page, numAccountsPerFetch, ACCOUNTS_PER_PAGE);\n    setTimeout(function () {\n      return confirmAddress(selectedAddress);\n    });\n  };\n\n  var start = page * ACCOUNTS_PER_PAGE;\n  var renderedAccounts = accounts.slice(start, start + ACCOUNTS_PER_PAGE);\n  return !renderedAccounts.length ? /*#__PURE__*/React.createElement(Loader, {\n    size: \"5rem\",\n    color: getColor('spinner'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    width: ['100%', '53rem'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledCross, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text.h3, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Select address\"), /*#__PURE__*/React.createElement(Text.p, {\n    t: \"body\",\n    fontSize: \"1.8rem\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Please select which address you would like to open\")), /*#__PURE__*/React.createElement(Grid, {\n    width: \"100%\",\n    gridColumnGap: \"s\",\n    gridRowGap: \"s\",\n    gridTemplateColumns: \"auto auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary-outline\",\n    disabled: page === 0 || fetching,\n    onClick: function onClick() {\n      return toPage(page - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"<\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary-outline\",\n    disabled: fetching,\n    onClick: function onClick() {\n      return toPage(page + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \">\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    width: \"100%\",\n    opacity: fetching ? 0.6 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_StyledTh, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pr: \"m\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"#\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"ETH\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"BAT\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, renderedAccounts.map(function (_ref3, index) {\n    var address = _ref3.address,\n        ethBalance = _ref3.ethBalance,\n        batBalance = _ref3.batBalance;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: address,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      justifyContent: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"address\",\n      value: index,\n      checked: address === selectedAddress,\n      onChange: function onChange() {\n        return setSelectedAddress(address);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      pr: \"m\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, page * ACCOUNTS_PER_PAGE + (index + 1))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, cutMiddle(address, 7, 5), /*#__PURE__*/React.createElement(CopyBtn, {\n      onClick: function onClick() {\n        return copyToClipboard(address);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CopyBtnIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, ethBalance, \" ETH\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, batBalance, \" BAT\"));\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    width: \"100%\",\n    gridRowGap: \"xs\",\n    gridColumnGap: \"s\",\n    gridTemplateColumns: ['1fr', 'auto auto'],\n    justifyContent: \"center\",\n    justifySelf: ['stretch', 'center'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary-outline\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: !selectedAddress,\n    onClick: onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Confirm\")));\n}\n\n__signature__(HardwareAccountSelect, \"useState{[page, setPage](0)}\\nuseState{[selectedAddress, setSelectedAddress](null)}\\nuseHardwareWallet{{\\n    fetchMore,\\n    connect,\\n    accounts,\\n    pickAccount,\\n    fetching\\n  }}\\nuseEffect{}\\nuseCallback{toPage}\", function () {\n  return [useHardwareWallet];\n});\n\nvar _default = HardwareAccountSelect;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ACCOUNTS_PER_PAGE, \"ACCOUNTS_PER_PAGE\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/HardwareAccountSelect.js\");\n  reactHotLoader.register(ACCOUNTS_TO_FETCH, \"ACCOUNTS_TO_FETCH\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/HardwareAccountSelect.js\");\n  reactHotLoader.register(HardwareAccountSelect, \"HardwareAccountSelect\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/HardwareAccountSelect.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/HardwareAccountSelect.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/HardwareAccountSelect.js"],"names":["React","useEffect","useCallback","useState","Button","Grid","Flex","Text","Box","Table","Loader","useHardwareWallet","cutMiddle","copyToClipboard","getColor","CopyBtn","CopyBtnIcon","AccountTypes","LEDGER_LIVE_PATH","ACCOUNTS_PER_PAGE","ACCOUNTS_TO_FETCH","cursor","textAlign","HardwareAccountSelect","type","path","onClose","confirmAddress","page","setPage","selectedAddress","setSelectedAddress","numAccountsPerFetch","LEDGER","accountsLength","fetchMore","connect","accounts","pickAccount","fetching","then","toPage","length","onConfirm","setTimeout","start","renderedAccounts","slice","map","index","address","ethBalance","batBalance"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,KANF,EAOEC,MAPF,QAQO,8BARP;AASA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,UAA3C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,gBAArC;;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,iBAAiB,GAAG,EAA1B;;;;;GA4CoB;AAAEC,EAAAA,MAAM,EAAE;AAAV,C;;;;;GAkCG;AAAEC,EAAAA,SAAS,EAAE;AAAb,C;;AA5EvB,SAASC,qBAAT,OAAwE;AAAA;;AAAA,MAAvCC,IAAuC,QAAvCA,IAAuC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AAAA,kBAC9CxB,QAAQ,CAAC,CAAD,CADsC;AAAA;AAAA,MAC/DyB,IAD+D;AAAA,MACzDC,OADyD;;AAAA,mBAExB1B,QAAQ,CAAC,IAAD,CAFgB;AAAA;AAAA,MAE/D2B,eAF+D;AAAA,MAE9CC,kBAF8C;;AAGtE,MAAMC,mBAAmB,GACvBR,IAAI,KAAKP,YAAY,CAACgB,MAAtB,IAAgCR,IAAI,KAAKP,gBAAzC,GACIC,iBADJ,GAEIC,iBAHN;;AAHsE,2BAalET,iBAAiB,CAAC;AAAEa,IAAAA,IAAI,EAAJA,IAAF;AAAQU,IAAAA,cAAc,EAAEF,mBAAxB;AAA6CP,IAAAA,IAAI,EAAJA;AAA7C,GAAD,CAbiD;AAAA,MAQpEU,SARoE,sBAQpEA,SARoE;AAAA,MASpEC,OAToE,sBASpEA,OAToE;AAAA,MAUpEC,QAVoE,sBAUpEA,QAVoE;AAAA,MAWpEC,WAXoE,sBAWpEA,WAXoE;AAAA,MAYpEC,QAZoE,sBAYpEA,QAZoE;;AAetEtC,EAAAA,SAAS,CAAC,YAAM;AACdmC,IAAAA,OAAO,GAAGI,IAAV,CAAe,YAAM;AACnBd,MAAAA,OAAO;AACR,KAFD,EAEGA,OAFH;AAGD,GAJQ,EAIN,CAACU,OAAD,EAAUV,OAAV,CAJM,CAAT;AAMA,MAAMe,MAAM,GAAGvC,WAAW;AAAA,yEACxB,iBAAM0B,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBACMS,QAAQ,CAACK,MAAT,IAAmBd,IAAI,GAAGT,iBADhC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBACyDgB,SAAS,EADlE;;AAAA;AAEEN,cAAAA,OAAO,CAACD,IAAD,CAAP;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADwB;;AAAA;AAAA;AAAA;AAAA,OAKxB,CAACS,QAAD,EAAWF,SAAX,CALwB,CAA1B;;AAQA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBL,IAAAA,WAAW,CAACR,eAAD,EAAkBF,IAAlB,EAAwBI,mBAAxB,EAA6Cb,iBAA7C,CAAX;AACAyB,IAAAA,UAAU,CAAC;AAAA,aAAMjB,cAAc,CAACG,eAAD,CAApB;AAAA,KAAD,CAAV;AACD,GAHD;;AAKA,MAAMe,KAAK,GAAGjB,IAAI,GAAGT,iBAArB;AACA,MAAM2B,gBAAgB,GAAGT,QAAQ,CAACU,KAAT,CAAeF,KAAf,EAAsBA,KAAK,GAAG1B,iBAA9B,CAAzB;AAEA,SAAO,CAAC2B,gBAAgB,CAACJ,MAAlB,gBACL,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAE5B,QAAQ,CAAC,SAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAGL,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,GAAjB;AAAqB,IAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,cAAc,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAmC,IAAA,OAAO,EAAEY,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,EAAN;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,CAAN;AAAQ,IAAA,CAAC,EAAC,MAAV;AAAiB,IAAA,QAAQ,EAAC,QAA1B;AAAmC,IAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFF,CAJF,eAWE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,aAAa,EAAC,GAFhB;AAGE,IAAA,UAAU,EAAC,GAHb;AAIE,IAAA,mBAAmB,EAAC,WAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,QAAQ,EAAEE,IAAI,KAAK,CAAT,IAAcW,QAF1B;AAGE,IAAA,OAAO,EAAE;AAAA,aAAME,MAAM,CAACb,IAAI,GAAG,CAAR,CAAZ;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,eAaE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,mBADV;AAEE,IAAA,QAAQ,EAAEW,QAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAME,MAAM,CAACb,IAAI,GAAG,CAAR,CAAZ;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CAXF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEW,QAAQ,GAAG,GAAH,GAAS,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,gBAAgB,CAACE,GAAjB,CACC,iBAAsCC,KAAtC;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,QAAYC,UAAZ,SAAYA,UAAZ;AAAA,QAAwBC,UAAxB,SAAwBA,UAAxB;AAAA,wBACE;AAAI,MAAA,GAAG,EAAEF,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,cAAc,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAED,KAHT;AAIE,MAAA,OAAO,EAAEC,OAAO,KAAKpB,eAJvB;AAKE,MAAA,QAAQ,EAAE;AAAA,eAAMC,kBAAkB,CAACmB,OAAD,CAAxB;AAAA,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtB,IAAI,GAAGT,iBAAP,IAA4B8B,KAAK,GAAG,CAApC,CADH,CADF,CAZF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrC,SAAS,CAACsC,OAAD,EAAU,CAAV,EAAa,CAAb,CADZ,eAEE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE;AAAA,eAAMrC,eAAe,CAACqC,OAAD,CAArB;AAAA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,CAjBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,UAAL,SAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,UAAL,SA1BF,CADF;AAAA,GADD,CADH,CAdF,CADF,CAhCF,eAmFE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,UAAU,EAAC,IAFb;AAGE,IAAA,aAAa,EAAC,GAHhB;AAIE,IAAA,mBAAmB,EAAE,CAAC,KAAD,EAAQ,WAAR,CAJvB;AAKE,IAAA,cAAc,EAAC,QALjB;AAME,IAAA,WAAW,EAAE,CAAC,SAAD,EAAY,QAAZ,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,mBAAhB;AAAoC,IAAA,OAAO,EAAE1B,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACI,eAAnB;AAAoC,IAAA,OAAO,EAAEa,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,CAnFF,CAHF;AAuGD;;cA5IQpB,qB;UAaHZ,iB;;;eAiISY,qB;AAAf;;;;;;;;;;0BAjJMJ,iB;0BACAC,iB;0BAEGG,qB","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\n\nimport {\n  Button,\n  Grid,\n  Flex,\n  Text,\n  Box,\n  Table,\n  Loader\n} from '@makerdao/ui-components-core';\nimport useHardwareWallet from 'hooks/useHardwareWallet';\nimport { cutMiddle, copyToClipboard } from 'utils/ui';\nimport { getColor } from 'styles/theme';\nimport { CopyBtn, CopyBtnIcon } from './AddressTable';\nimport { ReactComponent as Cross } from 'images/cross.svg';\nimport { AccountTypes } from 'utils/constants';\nimport { LEDGER_LIVE_PATH } from './LedgerType';\n\nconst ACCOUNTS_PER_PAGE = 5;\nconst ACCOUNTS_TO_FETCH = 25;\n\nfunction HardwareAccountSelect({ type, path, onClose, confirmAddress }) {\n  const [page, setPage] = useState(0);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const numAccountsPerFetch =\n    type === AccountTypes.LEDGER && path === LEDGER_LIVE_PATH\n      ? ACCOUNTS_PER_PAGE\n      : ACCOUNTS_TO_FETCH;\n  const {\n    fetchMore,\n    connect,\n    accounts,\n    pickAccount,\n    fetching\n  } = useHardwareWallet({ type, accountsLength: numAccountsPerFetch, path });\n\n  useEffect(() => {\n    connect().then(() => {\n      onClose();\n    }, onClose);\n  }, [connect, onClose]);\n\n  const toPage = useCallback(\n    async page => {\n      if (accounts.length <= page * ACCOUNTS_PER_PAGE) await fetchMore();\n      setPage(page);\n    },\n    [accounts, fetchMore]\n  );\n\n  const onConfirm = () => {\n    pickAccount(selectedAddress, page, numAccountsPerFetch, ACCOUNTS_PER_PAGE);\n    setTimeout(() => confirmAddress(selectedAddress));\n  };\n\n  const start = page * ACCOUNTS_PER_PAGE;\n  const renderedAccounts = accounts.slice(start, start + ACCOUNTS_PER_PAGE);\n\n  return !renderedAccounts.length ? (\n    <Loader size=\"5rem\" color={getColor('spinner')} />\n  ) : (\n    <Grid gridRowGap=\"m\" width={['100%', '53rem']}>\n      <Flex justifyContent=\"flex-end\">\n        <Cross css={{ cursor: 'pointer' }} onClick={onClose} />\n      </Flex>\n      <Grid gridRowGap=\"s\">\n        <Text.h3 textAlign=\"center\">Select address</Text.h3>\n        <Text.p t=\"body\" fontSize=\"1.8rem\" textAlign=\"center\">\n          Please select which address you would like to open\n        </Text.p>\n      </Grid>\n\n      <Grid\n        width=\"100%\"\n        gridColumnGap=\"s\"\n        gridRowGap=\"s\"\n        gridTemplateColumns=\"auto auto\"\n      >\n        <Button\n          variant=\"secondary-outline\"\n          disabled={page === 0 || fetching}\n          onClick={() => toPage(page - 1)}\n        >\n          &#60;\n        </Button>\n        <Button\n          variant=\"secondary-outline\"\n          disabled={fetching}\n          onClick={() => toPage(page + 1)}\n        >\n          &#62;\n        </Button>\n      </Grid>\n      <div>\n        <Table width=\"100%\" opacity={fetching ? 0.6 : 1}>\n          <thead>\n            <tr>\n              <th css={{ textAlign: 'center' }}>Select</th>\n              <th>\n                <Box pr=\"m\" textAlign=\"center\">\n                  #\n                </Box>\n              </th>\n              <th>Address</th>\n              <th>ETH</th>\n              <th>BAT</th>\n            </tr>\n          </thead>\n          <tbody>\n            {renderedAccounts.map(\n              ({ address, ethBalance, batBalance }, index) => (\n                <tr key={address}>\n                  <td>\n                    <Flex justifyContent=\"center\">\n                      <input\n                        type=\"radio\"\n                        name=\"address\"\n                        value={index}\n                        checked={address === selectedAddress}\n                        onChange={() => setSelectedAddress(address)}\n                      />\n                    </Flex>\n                  </td>\n                  <td>\n                    <Box pr=\"m\" textAlign=\"center\">\n                      {page * ACCOUNTS_PER_PAGE + (index + 1)}\n                    </Box>\n                  </td>\n                  <td>\n                    <Flex alignItems=\"center\">\n                      {cutMiddle(address, 7, 5)}\n                      <CopyBtn onClick={() => copyToClipboard(address)}>\n                        <CopyBtnIcon />\n                      </CopyBtn>\n                    </Flex>\n                  </td>\n                  <td>{ethBalance} ETH</td>\n                  <td>{batBalance} BAT</td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </Table>\n      </div>\n      <Grid\n        width=\"100%\"\n        gridRowGap=\"xs\"\n        gridColumnGap=\"s\"\n        gridTemplateColumns={['1fr', 'auto auto']}\n        justifyContent=\"center\"\n        justifySelf={['stretch', 'center']}\n      >\n        <Button variant=\"secondary-outline\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button disabled={!selectedAddress} onClick={onConfirm}>\n          Confirm\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default HardwareAccountSelect;\n"]},"metadata":{},"sourceType":"module"}