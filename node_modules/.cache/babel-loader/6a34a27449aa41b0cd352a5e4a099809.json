{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crypto_1 = __importDefault(require(\"crypto\"));\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar STORAGE_KEY_SESSION_ID = \"session:id\";\nvar STORAGE_KEY_SESSION_SECRET = \"session:secret\";\nvar STORAGE_KEY_SESSION_LINKED = \"session:linked\";\n\nvar Session = /*#__PURE__*/function () {\n  function Session(storage, id, secret, linked) {\n    _classCallCheck(this, Session);\n\n    this._storage = storage;\n    this._id = id || crypto_1.default.randomBytes(16).toString(\"hex\");\n    this._secret = secret || crypto_1.default.randomBytes(32).toString(\"hex\");\n    this._key = crypto_1.default.createHash(\"sha256\").update(\"\".concat(this._id, \", \").concat(this._secret, \" WalletLink\"), \"ascii\").digest(\"hex\");\n    this._linked = !!linked;\n  }\n\n  _createClass(Session, [{\n    key: \"save\",\n    value: function save() {\n      this._storage.setItem(STORAGE_KEY_SESSION_ID, this._id);\n\n      this._storage.setItem(STORAGE_KEY_SESSION_SECRET, this._secret);\n\n      this.persistLinked();\n      return this;\n    }\n  }, {\n    key: \"persistLinked\",\n    value: function persistLinked() {\n      this._storage.setItem(STORAGE_KEY_SESSION_LINKED, this._linked ? \"1\" : \"0\");\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"secret\",\n    get: function get() {\n      return this._secret;\n    }\n  }, {\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"linked\",\n    get: function get() {\n      return this._linked;\n    },\n    set: function set(val) {\n      this._linked = val;\n      this.persistLinked();\n    }\n  }], [{\n    key: \"load\",\n    value: function load(storage) {\n      var id = storage.getItem(STORAGE_KEY_SESSION_ID);\n      var linked = storage.getItem(STORAGE_KEY_SESSION_LINKED);\n      var secret = storage.getItem(STORAGE_KEY_SESSION_SECRET);\n\n      if (id && secret) {\n        return new Session(storage, id, secret, linked === \"1\");\n      }\n\n      return null;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(storage) {\n      storage.removeItem(STORAGE_KEY_SESSION_SECRET);\n      storage.removeItem(STORAGE_KEY_SESSION_ID);\n      storage.removeItem(STORAGE_KEY_SESSION_LINKED);\n    }\n  }, {\n    key: \"persistedSessionIdChange$\",\n    get: function get() {\n      return rxjs_1.fromEvent(window, \"storage\").pipe(operators_1.filter(function (evt) {\n        return evt.key === STORAGE_KEY_SESSION_ID;\n      }), operators_1.map(function (evt) {\n        return {\n          oldValue: evt.oldValue || null,\n          newValue: evt.newValue || null\n        };\n      }));\n    }\n  }]);\n\n  return Session;\n}();\n\nexports.Session = Session;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(__importDefault, \"__importDefault\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/relay/Session.js\");\n  reactHotLoader.register(crypto_1, \"crypto_1\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/relay/Session.js\");\n  reactHotLoader.register(STORAGE_KEY_SESSION_ID, \"STORAGE_KEY_SESSION_ID\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/relay/Session.js\");\n  reactHotLoader.register(STORAGE_KEY_SESSION_SECRET, \"STORAGE_KEY_SESSION_SECRET\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/relay/Session.js\");\n  reactHotLoader.register(STORAGE_KEY_SESSION_LINKED, \"STORAGE_KEY_SESSION_LINKED\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/relay/Session.js\");\n  reactHotLoader.register(Session, \"Session\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/walletlink/dist/relay/Session.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}