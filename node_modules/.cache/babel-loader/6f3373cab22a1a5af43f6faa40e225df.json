{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nvar arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n/** Used to compose bitmasks for function metadata. */\n\n\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n/** Used to associate wrap methods with their bit flags. */\n\nvar wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\n\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function (pair) {\n    var value = '_.' + pair[0];\n\n    if (bitmask & pair[1] && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(WRAP_BIND_FLAG, \"WRAP_BIND_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_BIND_KEY_FLAG, \"WRAP_BIND_KEY_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_CURRY_FLAG, \"WRAP_CURRY_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_CURRY_RIGHT_FLAG, \"WRAP_CURRY_RIGHT_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_PARTIAL_FLAG, \"WRAP_PARTIAL_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_PARTIAL_RIGHT_FLAG, \"WRAP_PARTIAL_RIGHT_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_ARY_FLAG, \"WRAP_ARY_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_REARG_FLAG, \"WRAP_REARG_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(WRAP_FLIP_FLAG, \"WRAP_FLIP_FLAG\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(wrapFlags, \"wrapFlags\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n  reactHotLoader.register(updateWrapDetails, \"updateWrapDetails\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/lodash/_updateWrapDetails.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}