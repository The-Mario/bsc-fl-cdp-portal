{"ast":null,"code":"'use strict';\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _values = require('babel-runtime/core-js/object/values');\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.setChosenAddress = setChosenAddress;\nexports.default = createTrezorSubprovider;\n\nvar _hookedWallet = require('web3-provider-engine/dist/es5/subproviders/hooked-wallet');\n\nvar _hookedWallet2 = _interopRequireDefault(_hookedWallet);\n\nvar _ethereumjsTx = require('ethereumjs-tx');\n\nvar _ethereumjsTx2 = _interopRequireDefault(_ethereumjsTx);\n\nvar _trezorConnect = require('trezor-connect');\n\nvar _trezorConnect2 = _interopRequireDefault(_trezorConnect);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar allowedHdPaths = [\"44'/1'\", \"44'/60'\", \"44'/61'\"];\nvar chosenAddress = void 0;\n\nfunction setChosenAddress(address) {\n  chosenAddress = address;\n}\n\nfunction makeError(msg, id) {\n  var err = new Error(msg); // $FlowFixMe\n\n  err.id = id;\n  return err;\n}\n\nfunction obtainPathComponentsFromDerivationPath(derivationPath) {\n  // check if derivation path follows 44'/60'/x'/n pattern\n  var regExp = /^(44'\\/(?:1|60|61)'\\/\\d+'\\/\\d+?\\/)(\\d+)$/;\n  var matchResult = regExp.exec(derivationPath);\n\n  if (matchResult === null) {\n    throw makeError(\"To get multiple accounts your derivation path must follow pattern 44'/60|61'/x'/n \", 'InvalidDerivationPath');\n  }\n\n  return {\n    basePath: matchResult[1],\n    index: parseInt(matchResult[2], 10)\n  };\n}\n\nvar defaultOptions = {\n  networkId: 1,\n  // mainnet\n  path: \"44'/60'/0'/0/0\",\n  // trezor default derivation path\n  accountsLength: 1,\n  accountsOffset: 0\n};\n/**\n * Create a HookedWalletSubprovider for Trezor devices.\n */\n\nfunction createTrezorSubprovider(options) {\n  var _getAccounts = function () {\n    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n      var addresses, accountsBundle, i, _path, addressData, addressDataArray, _i, _path2, address;\n\n      return _regenerator2.default.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (alreadyOpenTrezorModal) {\n                _context.next = 16;\n                break;\n              }\n\n              alreadyOpenTrezorModal = true;\n              addresses = {};\n              accountsBundle = [];\n\n              for (i = accountsOffset; i < accountsOffset + accountsLength; i++) {\n                _path = pathComponents.basePath + (pathComponents.index + i).toString();\n                accountsBundle.push({\n                  path: 'm/' + _path,\n                  showOnTrezor: false\n                });\n              }\n\n              _context.next = 8;\n              return _trezorConnect2.default.ethereumGetAddress({\n                bundle: accountsBundle\n              });\n\n            case 8:\n              addressData = _context.sent;\n\n              if (addressData.success) {\n                _context.next = 11;\n                break;\n              }\n\n              throw makeError(addressData.payload.error);\n\n            case 11:\n              addressDataArray = addressData.payload;\n\n              for (_i = 0; _i < addressDataArray.length; _i++) {\n                _path2 = addressDataArray[_i].serializedPath;\n                address = addressDataArray[_i].address;\n                addresses[_path2] = address;\n                addressToPathMap[address.toLowerCase()] = _path2;\n              }\n\n              return _context.abrupt('return', addresses);\n\n            case 16:\n              return _context.abrupt('return', (0, _keys2.default)(addressToPathMap).reduce(function (obj, key) {\n                obj[addressToPathMap[key]] = key;\n                return obj;\n              }, {}));\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context['catch'](0);\n              throw makeError(_context.t0);\n\n            case 22:\n              _context.prev = 22;\n              return _context.finish(22);\n\n            case 24:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 19, 22, 24]]);\n    }));\n\n    return function _getAccounts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _signPersonalMessage = function () {\n    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(msgData) {\n      var path, result;\n      return _regenerator2.default.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (chosenAddress) {\n                msgData.from = chosenAddress;\n              }\n\n              path = addressToPathMap[msgData.from.toLowerCase()];\n\n              if (path) {\n                _context2.next = 4;\n                break;\n              }\n\n              throw new Error('address unknown \\'' + msgData.from + '\\'');\n\n            case 4:\n              _context2.prev = 4;\n              _context2.next = 7;\n              return trezorSignMessage(path, msgData.data);\n\n            case 7:\n              result = _context2.sent;\n\n              if (result.success) {\n                _context2.next = 10;\n                break;\n              }\n\n              throw makeError(result.payload.error);\n\n            case 10:\n              return _context2.abrupt('return', '0x' + result.payload.signature);\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2['catch'](4);\n              throw makeError(_context2.t0);\n\n            case 16:\n            case 'end':\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[4, 13]]);\n    }));\n\n    return function _signPersonalMessage(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _signTransaction = function () {\n    var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3(txData) {\n      var path, tx, resultObj, result, signedChainId, validChainId;\n      return _regenerator2.default.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (chosenAddress) {\n                txData.from = chosenAddress;\n              }\n\n              path = addressToPathMap[txData.from.toLowerCase()];\n\n              if (path) {\n                _context3.next = 4;\n                break;\n              }\n\n              throw new Error('address unknown \\'' + txData.from + '\\'');\n\n            case 4:\n              _context3.prev = 4;\n              tx = new _ethereumjsTx2.default(txData);\n              _context3.next = 8;\n              return trezorSignTransaction(path, txData);\n\n            case 8:\n              resultObj = _context3.sent;\n\n              if (resultObj.success) {\n                _context3.next = 11;\n                break;\n              }\n\n              throw makeError(resultObj.payload.error);\n\n            case 11:\n              result = resultObj.payload;\n              tx.v = result.v;\n              tx.r = result.r;\n              tx.s = result.s; // EIP155: v should be chain_id * 2 + {35, 36}\n\n              signedChainId = Math.floor((tx.v[0] - 35) / 2);\n              validChainId = networkId & 0xff; // FIXME this is to fixed a current workaround that app don't support > 0xff\n\n              if (!(signedChainId !== validChainId)) {\n                _context3.next = 19;\n                break;\n              }\n\n              throw makeError('Invalid networkId signature returned. Expected: ' + networkId + ', Got: ' + signedChainId, 'InvalidNetworkId');\n\n            case 19:\n              return _context3.abrupt('return', '0x' + tx.serialize().toString('hex'));\n\n            case 22:\n              _context3.prev = 22;\n              _context3.t0 = _context3['catch'](4);\n              throw makeError(_context3.t0);\n\n            case 25:\n            case 'end':\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[4, 22]]);\n    }));\n\n    return function _signTransaction(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var _defaultOptions$optio = (0, _extends3.default)({}, defaultOptions, options),\n      networkId = _defaultOptions$optio.networkId,\n      path = _defaultOptions$optio.path,\n      accountsLength = _defaultOptions$optio.accountsLength,\n      accountsOffset = _defaultOptions$optio.accountsOffset;\n\n  if (!allowedHdPaths.some(function (hdPref) {\n    return path.startsWith(hdPref);\n  })) {\n    throw makeError('Trezor derivation path allowed are ' + allowedHdPaths.join(', ') + '. ' + path + ' is not supported', 'InvalidDerivationPath');\n  }\n\n  var pathComponents = obtainPathComponentsFromDerivationPath(path);\n  var addressToPathMap = {};\n  var alreadyOpenTrezorModal = false;\n\n  _trezorConnect2.default.manifest({\n    email: 'tyler@makerdao.com',\n    appUrl: 'https://makerdao.com'\n  });\n\n  function trezorSignMessage(path, data) {\n    return _trezorConnect2.default.ethereumSignMessage({\n      path: path,\n      message: data\n    });\n  }\n\n  function trezorSignTransaction(path, txData) {\n    return _trezorConnect2.default.ethereumSignTransaction({\n      path: path,\n      transaction: {\n        nonce: txData.nonce,\n        gasPrice: txData.gasPrice,\n        gasLimit: txData.gas,\n        to: txData.to,\n        value: txData.value ? txData.value : \"\",\n        data: txData.data ? txData.data : \"\",\n        chainId: parseInt(networkId, 10)\n      }\n    });\n  }\n\n  if (options.promisify) {\n    return new _hookedWallet2.default({\n      getAccounts: _getAccounts,\n      signPersonalMessage: _signPersonalMessage,\n      signTransaction: _signTransaction\n    });\n  }\n\n  var subprovider = new _hookedWallet2.default({\n    getAccounts: function getAccounts(callback) {\n      _getAccounts().then(function (res) {\n        return callback(null, (0, _values2.default)(res));\n      }).catch(function (err) {\n        return callback(err, null);\n      });\n    },\n    signPersonalMessage: function signPersonalMessage(txData, callback) {\n      _signPersonalMessage(txData).then(function (res) {\n        return callback(null, res);\n      }).catch(function (err) {\n        return callback(err, null);\n      });\n    },\n    signTransaction: function signTransaction(txData, callback) {\n      _signTransaction(txData).then(function (res) {\n        return callback(null, res);\n      }).catch(function (err) {\n        return callback(err, null);\n      });\n    }\n  });\n  return subprovider;\n}\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_values2, \"_values2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_regenerator2, \"_regenerator2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_keys2, \"_keys2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_asyncToGenerator3, \"_asyncToGenerator3\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_extends3, \"_extends3\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_hookedWallet2, \"_hookedWallet2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_ethereumjsTx2, \"_ethereumjsTx2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_trezorConnect2, \"_trezorConnect2\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(_interopRequireDefault, \"_interopRequireDefault\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(allowedHdPaths, \"allowedHdPaths\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(chosenAddress, \"chosenAddress\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(setChosenAddress, \"setChosenAddress\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(makeError, \"makeError\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(obtainPathComponentsFromDerivationPath, \"obtainPathComponentsFromDerivationPath\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(defaultOptions, \"defaultOptions\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n  reactHotLoader.register(createTrezorSubprovider, \"createTrezorSubprovider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/@makerdao/dai-plugin-trezor-web/vendor/trezor-subprovider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":null,"metadata":{},"sourceType":"script"}