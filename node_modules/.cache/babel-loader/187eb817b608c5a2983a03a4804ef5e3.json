{"ast":null,"code":"import _toConsumableArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n/// <reference path=\"../../typings/main.d.ts\" />\nimport { useEffect, useState } from 'react';\nimport useMaker from 'hooks/useMaker';\nimport findIndex from 'lodash/findIndex';\nimport debug from 'debug';\nvar log = debug('hook:useObservable');\ndebug.enable('hook:useObservable');\n\nfunction useObservable(key) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var multicall = maker.service('multicall');\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  useEffect(function () {\n    if (!maker || !multicall.watcher) return;\n    if (findIndex(args, function (arg) {\n      return typeof arg === 'undefined';\n    }) !== -1) return;\n    log(\"Subscribed to observable \".concat(key, \"(\").concat(args && args.join(','), \")\"));\n    var sub = multicall.watch.apply(multicall, [key].concat(args)).subscribe({\n      next: function next(val) {\n        log('Got value from observable ' + key + ':', val);\n        setValue(val);\n      },\n      error: function error(val) {\n        log('Got error from observable ' + key + ':', val);\n        setValue(null);\n      }\n    });\n    return function () {\n      log(\"Unsubscribed from observable \".concat(key, \"(\").concat(args && args.join(','), \")\"));\n      sub.unsubscribe();\n      setValue(undefined);\n    }; // eslint-disable-next-line\n  }, [maker, multicall === null || multicall === void 0 ? void 0 : multicall.watcher, key].concat(_toConsumableArray(args.map(function (arg) {\n    return typeof arg === 'object' ? JSON.stringify(arg) : arg;\n  })))); // prettier-ignore\n\n  return value;\n}\n\n__signature__(useObservable, \"useMaker{{ maker }}\\nuseState{[value, setValue](undefined)}\\nuseEffect{}\", function () {\n  return [useMaker];\n});\n\nexport var watch = {};\nvar _default = useObservable;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(log, \"log\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useObservable.js\");\n  reactHotLoader.register(useObservable, \"useObservable\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useObservable.js\");\n  reactHotLoader.register(watch, \"watch\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useObservable.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useObservable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useObservable.js"],"names":["useEffect","useState","useMaker","findIndex","debug","log","enable","useObservable","key","args","maker","multicall","service","undefined","value","setValue","watcher","arg","join","sub","watch","subscribe","next","val","error","unsubscribe","map","JSON","stringify"],"mappings":";;;;;;;;;;;;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAGD,KAAK,CAAC,oBAAD,CAAjB;AAEAA,KAAK,CAACE,MAAN,CAAa,oBAAb;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAAqC;AAAA,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAAA,kBACjBP,QAAQ,EADS;AAAA,MAC3BQ,KAD2B,aAC3BA,KAD2B;;AAEnC,MAAMC,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAc,WAAd,CAAlB;;AAFmC,kBAGTX,QAAQ,CAACY,SAAD,CAHC;AAAA;AAAA,MAG5BC,KAH4B;AAAA,MAGrBC,QAHqB;;AAKnCf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACU,KAAD,IAAU,CAACC,SAAS,CAACK,OAAzB,EAAkC;AAClC,QAAIb,SAAS,CAACM,IAAD,EAAO,UAAAQ,GAAG;AAAA,aAAI,OAAOA,GAAP,KAAe,WAAnB;AAAA,KAAV,CAAT,KAAuD,CAAC,CAA5D,EAA+D;AAE/DZ,IAAAA,GAAG,oCAA6BG,GAA7B,cAAoCC,IAAI,IAAIA,IAAI,CAACS,IAAL,CAAU,GAAV,CAA5C,OAAH;AACA,QAAMC,GAAG,GAAGR,SAAS,CAACS,KAAV,OAAAT,SAAS,GAAOH,GAAP,SAAeC,IAAf,EAAT,CAA8BY,SAA9B,CAAwC;AAClDC,MAAAA,IAAI,EAAE,cAAAC,GAAG,EAAI;AACXlB,QAAAA,GAAG,CAAC,+BAA+BG,GAA/B,GAAqC,GAAtC,EAA2Ce,GAA3C,CAAH;AACAR,QAAAA,QAAQ,CAACQ,GAAD,CAAR;AACD,OAJiD;AAKlDC,MAAAA,KAAK,EAAE,eAAAD,GAAG,EAAI;AACZlB,QAAAA,GAAG,CAAC,+BAA+BG,GAA/B,GAAqC,GAAtC,EAA2Ce,GAA3C,CAAH;AACAR,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AARiD,KAAxC,CAAZ;AAWA,WAAO,YAAM;AACXV,MAAAA,GAAG,wCAAiCG,GAAjC,cAAwCC,IAAI,IAAIA,IAAI,CAACS,IAAL,CAAU,GAAV,CAAhD,OAAH;AACAC,MAAAA,GAAG,CAACM,WAAJ;AACAV,MAAAA,QAAQ,CAACF,SAAD,CAAR;AACD,KAJD,CAhBc,CAqBd;AACD,GAtBQ,GAsBLH,KAtBK,EAsBEC,SAtBF,aAsBEA,SAtBF,uBAsBEA,SAAS,CAAEK,OAtBb,EAsBsBR,GAtBtB,4BAsB8BC,IAAI,CAACiB,GAAL,CAAS,UAAAT,GAAG;AAAA,WAAI,OAAOA,GAAP,KAAe,QAAf,GAA0BU,IAAI,CAACC,SAAL,CAAeX,GAAf,CAA1B,GAAgDA,GAApD;AAAA,GAAZ,CAtB9B,GAAT,CALmC,CA2B4E;;AAE/G,SAAOH,KAAP;AACD;;cA9BQP,a;UACWL,Q;;;AA+BpB,OAAO,IAAMkB,KAAK,GAAG,EAAd;eAEQb,a;AAAf;;;;;;;;;;0BAtCMF,G;0BAIGE,a;0BAgCIa,K","sourcesContent":["/// <reference path=\"../../typings/main.d.ts\" />\nimport { useEffect, useState } from 'react';\nimport useMaker from 'hooks/useMaker';\nimport findIndex from 'lodash/findIndex';\nimport debug from 'debug';\nconst log = debug('hook:useObservable');\n\ndebug.enable('hook:useObservable');\n\nfunction useObservable(key, ...args) {\n  const { maker } = useMaker();\n  const multicall = maker.service('multicall');\n  const [value, setValue] = useState(undefined);\n\n  useEffect(() => {\n    if (!maker || !multicall.watcher) return;\n    if (findIndex(args, arg => typeof arg === 'undefined') !== -1) return;\n\n    log(`Subscribed to observable ${key}(${args && args.join(',')})`);\n    const sub = multicall.watch(key, ...args).subscribe({\n      next: val => {\n        log('Got value from observable ' + key + ':', val);\n        setValue(val);\n      },\n      error: val => {\n        log('Got error from observable ' + key + ':', val);\n        setValue(null);\n      }\n    });\n\n    return () => {\n      log(`Unsubscribed from observable ${key}(${args && args.join(',')})`);\n      sub.unsubscribe();\n      setValue(undefined);\n    };\n    // eslint-disable-next-line\n  }, [maker, multicall?.watcher, key, ...args.map(arg => typeof arg === 'object' ? JSON.stringify(arg) : arg)]); // prettier-ignore\n\n  return value;\n}\n\nexport const watch = {};\n\nexport default useObservable;\n"]},"metadata":{},"sourceType":"module"}