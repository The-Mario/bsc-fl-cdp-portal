{"ast":null,"code":"import _classCallCheck from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { StateMachine } from '@makerdao/services-core';\nimport transactionState from '../eth/TransactionState';\nimport TransactionType, { transactionTypeTransitions } from './TransactionTransitions';\nvar initialized = transactionState.initialized,\n    pending = transactionState.pending,\n    mined = transactionState.mined,\n    finalized = transactionState.finalized,\n    error = transactionState.error;\nvar stateOrder = [initialized, pending, mined, finalized];\n\nvar TransactionLifeCycle = /*#__PURE__*/function () {\n  function TransactionLifeCycle(businessObject) {\n    _classCallCheck(this, TransactionLifeCycle);\n\n    this._state = new StateMachine(initialized, transactionTypeTransitions[TransactionType.transaction]);\n    this._businessObject = businessObject;\n  }\n\n  _createClass(TransactionLifeCycle, [{\n    key: \"setPending\",\n    value: function setPending() {\n      this._state.transitionTo(pending);\n    }\n  }, {\n    key: \"setMined\",\n    value: function setMined() {\n      this._state.transitionTo(mined);\n    }\n  }, {\n    key: \"setFinalized\",\n    value: function setFinalized() {\n      this._state.transitionTo(finalized);\n    }\n  }, {\n    key: \"setError\",\n    value: function setError(errorObject) {\n      this.error = errorObject;\n\n      this._state.transitionTo(error);\n    }\n  }, {\n    key: \"state\",\n    value: function state() {\n      return this._state.state();\n    }\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isInitialized\",\n    value: function isInitialized() {\n      return this._state.inState(initialized);\n    }\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isPending\",\n    value: function isPending() {\n      return this._state.inState(pending);\n    }\n    /**\n     * @returns {boolean|null}\n     */\n\n  }, {\n    key: \"isMined\",\n    value: function isMined() {\n      return this._state.inState(mined);\n    }\n    /**\n     * @returns {boolean|null}\n     */\n\n  }, {\n    key: \"isFinalized\",\n    value: function isFinalized() {\n      return this._state.inState(finalized);\n    }\n    /**\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isError\",\n    value: function isError() {\n      return this._state.inState(error);\n    }\n  }, {\n    key: \"_returnValue\",\n    value: function _returnValue() {\n      return this._businessObject || this;\n    }\n  }, {\n    key: \"inOrPastState\",\n    value: function inOrPastState(state) {\n      var currentState = this.state();\n      if (state === currentState) return true; // \"error\" is not part of the state order sequence, we can check it separately\n\n      if (state === error) return this.isError();\n      var currentIndex = stateOrder.indexOf(currentState);\n      var targetIndex = stateOrder.indexOf(state);\n\n      if (currentIndex === -1 || targetIndex === -1) {\n        throw new Error('invalid state');\n      }\n\n      return currentIndex >= targetIndex;\n    }\n  }, {\n    key: \"_onStateChange\",\n    value: function _onStateChange(from, to, handler) {\n      var _this = this;\n\n      this._state.onStateChanged(function (oldState, newState) {\n        if (oldState === from && newState === to) {\n          handler(_this._returnValue());\n        }\n      });\n    }\n  }, {\n    key: \"onPending\",\n    value: function onPending(handler) {\n      return this._onStateChange(initialized, pending, handler);\n    }\n  }, {\n    key: \"onMined\",\n    value: function onMined(handler) {\n      return this._onStateChange(pending, mined, handler);\n    }\n  }, {\n    key: \"onFinalized\",\n    value: function onFinalized(handler) {\n      return this._onStateChange(mined, finalized, handler);\n    } // alias for onFinalized\n\n  }, {\n    key: \"onConfirmed\",\n    value: function onConfirmed(handler) {\n      return this.onFinalized(handler);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(handler) {\n      var _this2 = this;\n\n      this._state.onStateChanged(function (oldState, newState) {\n        if (newState === error) {\n          handler(_this2.error, _this2._returnValue());\n        }\n      });\n    }\n  }, {\n    key: \"on\",\n    value: function on(state, handler) {\n      if (state === error) return this.onError(handler);\n\n      if (!Object.keys(transactionState).includes(state)) {\n        throw new Error(\"Unrecognized state \\\"\".concat(state, \"\\\"\"));\n      }\n\n      var prevState = stateOrder[stateOrder.indexOf(state) - 1];\n      return this._onStateChange(prevState, state, handler);\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return TransactionLifeCycle;\n}();\n\nvar _default = TransactionLifeCycle;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(initialized, \"initialized\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(pending, \"pending\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(mined, \"mined\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(finalized, \"finalized\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(error, \"error\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(stateOrder, \"stateOrder\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(TransactionLifeCycle, \"TransactionLifeCycle\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/TransactionLifeCycle.js"],"names":["StateMachine","transactionState","TransactionType","transactionTypeTransitions","initialized","pending","mined","finalized","error","stateOrder","TransactionLifeCycle","businessObject","_state","transaction","_businessObject","transitionTo","errorObject","state","inState","currentState","isError","currentIndex","indexOf","targetIndex","Error","from","to","handler","onStateChanged","oldState","newState","_returnValue","_onStateChange","onFinalized","onError","Object","keys","includes","prevState"],"mappings":"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","sourcesContent":["import { StateMachine } from '@makerdao/services-core';\nimport transactionState from '../eth/TransactionState';\nimport TransactionType, {\n  transactionTypeTransitions\n} from './TransactionTransitions';\n\nconst { initialized, pending, mined, finalized, error } = transactionState;\nconst stateOrder = [initialized, pending, mined, finalized];\n\nclass TransactionLifeCycle {\n  constructor(businessObject) {\n    this._state = new StateMachine(\n      initialized,\n      transactionTypeTransitions[TransactionType.transaction]\n    );\n    this._businessObject = businessObject;\n  }\n\n  setPending() {\n    this._state.transitionTo(pending);\n  }\n\n  setMined() {\n    this._state.transitionTo(mined);\n  }\n\n  setFinalized() {\n    this._state.transitionTo(finalized);\n  }\n\n  setError(errorObject) {\n    this.error = errorObject;\n    this._state.transitionTo(error);\n  }\n\n  state() {\n    return this._state.state();\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isInitialized() {\n    return this._state.inState(initialized);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isPending() {\n    return this._state.inState(pending);\n  }\n\n  /**\n   * @returns {boolean|null}\n   */\n  isMined() {\n    return this._state.inState(mined);\n  }\n\n  /**\n   * @returns {boolean|null}\n   */\n  isFinalized() {\n    return this._state.inState(finalized);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isError() {\n    return this._state.inState(error);\n  }\n\n  _returnValue() {\n    return this._businessObject || this;\n  }\n\n  inOrPastState(state) {\n    const currentState = this.state();\n    if (state === currentState) return true;\n\n    // \"error\" is not part of the state order sequence, we can check it separately\n    if (state === error) return this.isError();\n\n    const currentIndex = stateOrder.indexOf(currentState);\n    const targetIndex = stateOrder.indexOf(state);\n    if (currentIndex === -1 || targetIndex === -1) {\n      throw new Error('invalid state');\n    }\n    return currentIndex >= targetIndex;\n  }\n\n  _onStateChange(from, to, handler) {\n    this._state.onStateChanged((oldState, newState) => {\n      if (oldState === from && newState === to) {\n        handler(this._returnValue());\n      }\n    });\n  }\n\n  onPending(handler) {\n    return this._onStateChange(initialized, pending, handler);\n  }\n\n  onMined(handler) {\n    return this._onStateChange(pending, mined, handler);\n  }\n\n  onFinalized(handler) {\n    return this._onStateChange(mined, finalized, handler);\n  }\n\n  // alias for onFinalized\n  onConfirmed(handler) {\n    return this.onFinalized(handler);\n  }\n\n  onError(handler) {\n    this._state.onStateChanged((oldState, newState) => {\n      if (newState === error) {\n        handler(this.error, this._returnValue());\n      }\n    });\n  }\n\n  on(state, handler) {\n    if (state === error) return this.onError(handler);\n    if (!Object.keys(transactionState).includes(state)) {\n      throw new Error(`Unrecognized state \"${state}\"`);\n    }\n    const prevState = stateOrder[stateOrder.indexOf(state) - 1];\n    return this._onStateChange(prevState, state, handler);\n  }\n}\n\nexport default TransactionLifeCycle;\n"]},"metadata":{},"sourceType":"module"}