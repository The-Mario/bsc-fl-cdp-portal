{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useBrowserIcon.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as MetaMaskLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/metamask.svg\";\nimport { ReactComponent as TrustLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/trust-logo.svg\";\nimport coinbaseWalletLogo from 'images/coinbase-wallet.png';\nimport alphaWalletLogo from 'images/alpha-wallet-logo.png';\nimport { wallets } from 'utils/web3';\nimport ImTokenLogo from 'components/ImTokenLogo';\nvar MMLogo = styled(MetaMaskLogo).withConfig({\n  displayName: \"useBrowserIcon__MMLogo\",\n  componentId: \"q0mhlp-0\"\n})([\"margin:-5px 0;\"]);\n\nvar _StyledImTokenLogo = styled(ImTokenLogo).withConfig({\n  displayName: \"useBrowserIcon___StyledImTokenLogo\",\n  componentId: \"q0mhlp-1\"\n})([\"pointer-events:none;\"]);\n\nvar useBrowserIcon = function useBrowserIcon(provider) {\n  return useMemo(function () {\n    if (provider === wallets.METAMASK) {\n      return /*#__PURE__*/React.createElement(MMLogo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      });\n    } else if (provider === wallets.TRUST) {\n      return /*#__PURE__*/React.createElement(TrustLogo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      });\n    } else if (provider === wallets.IMTOKEN) {\n      return /*#__PURE__*/React.createElement(_StyledImTokenLogo, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      });\n    } else if (provider === wallets.COINBASE) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: coinbaseWalletLogo,\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n    } else if (provider === wallets.ALPHA) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: alphaWalletLogo,\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }\n      });\n    }\n  }, [provider]);\n};\n\n__signature__(useBrowserIcon, \"useMemo{}\");\n\nvar _default = useBrowserIcon;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MMLogo, \"MMLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useBrowserIcon.js\");\n  reactHotLoader.register(useBrowserIcon, \"useBrowserIcon\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useBrowserIcon.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useBrowserIcon.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useBrowserIcon.js"],"names":["React","useMemo","styled","coinbaseWalletLogo","alphaWalletLogo","wallets","ImTokenLogo","MMLogo","MetaMaskLogo","useBrowserIcon","provider","METAMASK","TRUST","IMTOKEN","COINBASE","ALPHA"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAIA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,IAAMC,MAAM,GAAGL,MAAM,CAACM,YAAD,CAAT;AAAA;AAAA;AAAA,sBAAZ;;;;;;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ;AAAA,SAC7BT,OAAO,CAAC,YAAM;AACZ,QAAIS,QAAQ,KAAKL,OAAO,CAACM,QAAzB,EAAmC;AACjC,0BAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAID,QAAQ,KAAKL,OAAO,CAACO,KAAzB,EAAgC;AACrC,0BAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA,IAAIF,QAAQ,KAAKL,OAAO,CAACQ,OAAzB,EAAkC;AACvC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARM,MAQA,IAAIH,QAAQ,KAAKL,OAAO,CAACS,QAAzB,EAAmC;AACxC,0BAAO;AAAK,QAAA,GAAG,EAAEX,kBAAV;AAA8B,QAAA,GAAG,EAAC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA,IAAIO,QAAQ,KAAKL,OAAO,CAACU,KAAzB,EAAgC;AACrC,0BAAO;AAAK,QAAA,GAAG,EAAEX,eAAV;AAA2B,QAAA,GAAG,EAAC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,MAEA;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF,GApBM,EAoBJ,CAACM,QAAD,CApBI,CADsB;AAAA,CAA/B;;cAAMD,c;;eAuBSA,c;AAAf;;;;;;;;;;0BA3BMF,M;0BAIAE,c","sourcesContent":["import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { ReactComponent as MetaMaskLogo } from 'images/metamask.svg';\nimport { ReactComponent as TrustLogo } from 'images/trust-logo.svg';\nimport coinbaseWalletLogo from 'images/coinbase-wallet.png';\nimport alphaWalletLogo from 'images/alpha-wallet-logo.png';\nimport { wallets } from 'utils/web3';\nimport ImTokenLogo from 'components/ImTokenLogo';\n\nconst MMLogo = styled(MetaMaskLogo)`\n  margin: -5px 0;\n`;\n\nconst useBrowserIcon = provider =>\n  useMemo(() => {\n    if (provider === wallets.METAMASK) {\n      return <MMLogo />;\n    } else if (provider === wallets.TRUST) {\n      return <TrustLogo />;\n    } else if (provider === wallets.IMTOKEN) {\n      return (\n        <ImTokenLogo\n          css={`\n            pointer-events: none;\n          `}\n        />\n      );\n    } else if (provider === wallets.COINBASE) {\n      return <img src={coinbaseWalletLogo} alt=\"\" />;\n    } else if (provider === wallets.ALPHA) {\n      return <img src={alphaWalletLogo} alt=\"\" />;\n    } else {\n      return <div />;\n    }\n  }, [provider]);\n\nexport default useBrowserIcon;\n"]},"metadata":{},"sourceType":"module"}