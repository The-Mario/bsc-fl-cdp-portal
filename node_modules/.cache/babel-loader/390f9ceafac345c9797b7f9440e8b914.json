{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useContext } from 'react';\nimport { ToggleStateContext } from 'providers/ToggleProvider';\nexport default function useToggle(id) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _useContext = useContext(ToggleStateContext),\n      toggleState = _useContext.toggleState,\n      updateToggleState = _useContext.updateToggleState;\n\n  if (id && toggleState[id] === undefined) {\n    updateToggleState({\n      id: id,\n      state: initialState\n    });\n  }\n\n  return {\n    toggle: id ? toggleState[id] : toggleState,\n    setToggle: id ? function (newToggleState) {\n      return updateToggleState({\n        id: id,\n        state: !!newToggleState\n      });\n    } : function (existingToggleId, newToggleState) {\n      return updateToggleState({\n        id: existingToggleId,\n        state: !!newToggleState\n      });\n    }\n  };\n}\n\n__signature__(useToggle, \"useContext{{ toggleState, updateToggleState }}\");\n\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useToggle, \"useToggle\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useToggle.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useToggle.js"],"names":["useContext","ToggleStateContext","useToggle","id","initialState","toggleState","updateToggleState","undefined","state","toggle","setToggle","newToggleState","existingToggleId"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAEA,eAAe,SAASC,SAAT,CAAmBC,EAAnB,EAA6C;AAAA,MAAtBC,YAAsB,uEAAP,KAAO;;AAAA,oBACfJ,UAAU,CAACC,kBAAD,CADK;AAAA,MAClDI,WADkD,eAClDA,WADkD;AAAA,MACrCC,iBADqC,eACrCA,iBADqC;;AAG1D,MAAIH,EAAE,IAAIE,WAAW,CAACF,EAAD,CAAX,KAAoBI,SAA9B,EAAyC;AACvCD,IAAAA,iBAAiB,CAAC;AAAEH,MAAAA,EAAE,EAAFA,EAAF;AAAMK,MAAAA,KAAK,EAAEJ;AAAb,KAAD,CAAjB;AACD;;AAED,SAAO;AACLK,IAAAA,MAAM,EAAEN,EAAE,GAAGE,WAAW,CAACF,EAAD,CAAd,GAAqBE,WAD1B;AAELK,IAAAA,SAAS,EAAEP,EAAE,GACT,UAAAQ,cAAc;AAAA,aAAIL,iBAAiB,CAAC;AAAEH,QAAAA,EAAE,EAAFA,EAAF;AAAMK,QAAAA,KAAK,EAAE,CAAC,CAACG;AAAf,OAAD,CAArB;AAAA,KADL,GAET,UAACC,gBAAD,EAAmBD,cAAnB;AAAA,aACEL,iBAAiB,CAAC;AAAEH,QAAAA,EAAE,EAAES,gBAAN;AAAwBJ,QAAAA,KAAK,EAAE,CAAC,CAACG;AAAjC,OAAD,CADnB;AAAA;AAJC,GAAP;AAOD;;cAduBT,S;;;;;;;;;;;0BAAAA,S","sourcesContent":["import { useContext } from 'react';\nimport { ToggleStateContext } from 'providers/ToggleProvider';\n\nexport default function useToggle(id, initialState = false) {\n  const { toggleState, updateToggleState } = useContext(ToggleStateContext);\n\n  if (id && toggleState[id] === undefined) {\n    updateToggleState({ id, state: initialState });\n  }\n\n  return {\n    toggle: id ? toggleState[id] : toggleState,\n    setToggle: id\n      ? newToggleState => updateToggleState({ id, state: !!newToggleState })\n      : (existingToggleId, newToggleState) =>\n          updateToggleState({ id: existingToggleId, state: !!newToggleState })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}