{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { bytesToString } from '../utils';\nimport BigNumber from 'bignumber.js';\nimport { VAULT_ADDRESS, VAULT_TYPE, VAULTS_CREATED, VAULT_OWNER } from './_constants';\nimport { validateVaultId, validateVaultTypeResult } from './_validators';\nexport var cdpManagerUrns = {\n  generate: function generate(id) {\n    return {\n      id: \"CDP_MANAGER.urns(\".concat(id, \")\"),\n      contract: 'CDP_MANAGER',\n      call: ['urns(uint256)(address)', parseInt(id)]\n    };\n  },\n  returns: [VAULT_ADDRESS]\n};\nexport var cdpManagerIlks = {\n  generate: function generate(id) {\n    return {\n      id: \"CDP_MANAGER.ilks(\".concat(id, \")\"),\n      contract: 'CDP_MANAGER',\n      call: ['ilks(uint256)(bytes32)', parseInt(id)]\n    };\n  },\n  validate: _defineProperty({\n    args: validateVaultId\n  }, VAULT_TYPE, validateVaultTypeResult),\n  returns: [[VAULT_TYPE, bytesToString]]\n};\nexport var cdpManagerCdpi = {\n  generate: function generate() {\n    return {\n      id: 'CDP_MANAGER.cdpi',\n      contract: 'CDP_MANAGER',\n      call: ['cdpi()(uint256)']\n    };\n  },\n  returns: [[VAULTS_CREATED, function (v) {\n    return BigNumber(v);\n  }]]\n};\nexport var cdpManagerOwner = {\n  generate: function generate(id) {\n    return {\n      id: \"CDP_MANAGER.owner(\".concat(id, \")\"),\n      contract: 'CDP_MANAGER',\n      call: ['owns(uint256)(address)', id]\n    };\n  },\n  returns: [[VAULT_OWNER]]\n};\nvar _default = {\n  cdpManagerUrns: cdpManagerUrns,\n  cdpManagerIlks: cdpManagerIlks,\n  cdpManagerCdpi: cdpManagerCdpi,\n  cdpManagerOwner: cdpManagerOwner\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(cdpManagerUrns, \"cdpManagerUrns\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cdpManager.js\");\n  reactHotLoader.register(cdpManagerIlks, \"cdpManagerIlks\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cdpManager.js\");\n  reactHotLoader.register(cdpManagerCdpi, \"cdpManagerCdpi\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cdpManager.js\");\n  reactHotLoader.register(cdpManagerOwner, \"cdpManagerOwner\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cdpManager.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cdpManager.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/cdpManager.js"],"names":["bytesToString","BigNumber","VAULT_ADDRESS","VAULT_TYPE","VAULTS_CREATED","VAULT_OWNER","validateVaultId","validateVaultTypeResult","cdpManagerUrns","generate","id","contract","call","parseInt","returns","cdpManagerIlks","validate","args","cdpManagerCdpi","v","cdpManagerOwner"],"mappings":";;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SACEC,aADF,EAEEC,UAFF,EAGEC,cAHF,EAIEC,WAJF,QAKO,cALP;AAMA,SAASC,eAAT,EAA0BC,uBAA1B,QAAyD,eAAzD;AAEA,OAAO,IAAMC,cAAc,GAAG;AAC5BC,EAAAA,QAAQ,EAAE,kBAAAC,EAAE;AAAA,WAAK;AACfA,MAAAA,EAAE,6BAAsBA,EAAtB,MADa;AAEfC,MAAAA,QAAQ,EAAE,aAFK;AAGfC,MAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2BC,QAAQ,CAACH,EAAD,CAAnC;AAHS,KAAL;AAAA,GADgB;AAM5BI,EAAAA,OAAO,EAAE,CAACZ,aAAD;AANmB,CAAvB;AASP,OAAO,IAAMa,cAAc,GAAG;AAC5BN,EAAAA,QAAQ,EAAE,kBAAAC,EAAE;AAAA,WAAK;AACfA,MAAAA,EAAE,6BAAsBA,EAAtB,MADa;AAEfC,MAAAA,QAAQ,EAAE,aAFK;AAGfC,MAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2BC,QAAQ,CAACH,EAAD,CAAnC;AAHS,KAAL;AAAA,GADgB;AAM5BM,EAAAA,QAAQ;AACNC,IAAAA,IAAI,EAAEX;AADA,KAELH,UAFK,EAEQI,uBAFR,CANoB;AAU5BO,EAAAA,OAAO,EAAE,CAAC,CAACX,UAAD,EAAaH,aAAb,CAAD;AAVmB,CAAvB;AAaP,OAAO,IAAMkB,cAAc,GAAG;AAC5BT,EAAAA,QAAQ,EAAE;AAAA,WAAO;AACfC,MAAAA,EAAE,EAAE,kBADW;AAEfC,MAAAA,QAAQ,EAAE,aAFK;AAGfC,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAHS,KAAP;AAAA,GADkB;AAM5BE,EAAAA,OAAO,EAAE,CAAC,CAACV,cAAD,EAAiB,UAAAe,CAAC;AAAA,WAAIlB,SAAS,CAACkB,CAAD,CAAb;AAAA,GAAlB,CAAD;AANmB,CAAvB;AASP,OAAO,IAAMC,eAAe,GAAG;AAC7BX,EAAAA,QAAQ,EAAE,kBAAAC,EAAE;AAAA,WAAK;AACfA,MAAAA,EAAE,8BAAuBA,EAAvB,MADa;AAEfC,MAAAA,QAAQ,EAAE,aAFK;AAGfC,MAAAA,IAAI,EAAE,CAAC,wBAAD,EAA2BF,EAA3B;AAHS,KAAL;AAAA,GADiB;AAM7BI,EAAAA,OAAO,EAAE,CAAC,CAACT,WAAD,CAAD;AANoB,CAAxB;eASQ;AACbG,EAAAA,cAAc,EAAdA,cADa;AAEbO,EAAAA,cAAc,EAAdA,cAFa;AAGbG,EAAAA,cAAc,EAAdA,cAHa;AAIbE,EAAAA,eAAe,EAAfA;AAJa,C;AAAf;;;;;;;;;;0BAxCaZ,c;0BASAO,c;0BAaAG,c;0BASAE,e","sourcesContent":["import { bytesToString } from '../utils';\nimport BigNumber from 'bignumber.js';\n\nimport {\n  VAULT_ADDRESS,\n  VAULT_TYPE,\n  VAULTS_CREATED,\n  VAULT_OWNER\n} from './_constants';\nimport { validateVaultId, validateVaultTypeResult } from './_validators';\n\nexport const cdpManagerUrns = {\n  generate: id => ({\n    id: `CDP_MANAGER.urns(${id})`,\n    contract: 'CDP_MANAGER',\n    call: ['urns(uint256)(address)', parseInt(id)]\n  }),\n  returns: [VAULT_ADDRESS]\n};\n\nexport const cdpManagerIlks = {\n  generate: id => ({\n    id: `CDP_MANAGER.ilks(${id})`,\n    contract: 'CDP_MANAGER',\n    call: ['ilks(uint256)(bytes32)', parseInt(id)]\n  }),\n  validate: {\n    args: validateVaultId,\n    [VAULT_TYPE]: validateVaultTypeResult\n  },\n  returns: [[VAULT_TYPE, bytesToString]]\n};\n\nexport const cdpManagerCdpi = {\n  generate: () => ({\n    id: 'CDP_MANAGER.cdpi',\n    contract: 'CDP_MANAGER',\n    call: ['cdpi()(uint256)']\n  }),\n  returns: [[VAULTS_CREATED, v => BigNumber(v)]]\n};\n\nexport const cdpManagerOwner = {\n  generate: id => ({\n    id: `CDP_MANAGER.owner(${id})`,\n    contract: 'CDP_MANAGER',\n    call: ['owns(uint256)(address)', id]\n  }),\n  returns: [[VAULT_OWNER]]\n};\n\nexport default {\n  cdpManagerUrns,\n  cdpManagerIlks,\n  cdpManagerCdpi,\n  cdpManagerOwner\n};\n"]},"metadata":{},"sourceType":"module"}