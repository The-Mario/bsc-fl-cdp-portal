{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport Maker from './Maker';\nimport { currencies } from './eth/Currency';\nimport { stringToBytes32 } from './utils/conversion';\nimport { getQueryResponse } from './QueryApi';\n\nfor (var symbol in currencies) {\n  Maker[symbol] = currencies[symbol];\n}\n\nMaker.currencies = currencies;\nMaker.QueryApi = {\n  getQueryResponse: getQueryResponse\n};\nMaker.utils = {\n  stringToBytes32: stringToBytes32\n}; // module.exports = Maker;\n\nvar _default = Maker;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/index.js"],"names":["Maker","currencies","stringToBytes32","getQueryResponse","symbol","QueryApi","utils"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,KAAK,IAAIC,MAAT,IAAmBH,UAAnB,EAA+B;AAC7BD,EAAAA,KAAK,CAACI,MAAD,CAAL,GAAgBH,UAAU,CAACG,MAAD,CAA1B;AACD;;AAEDJ,KAAK,CAACC,UAAN,GAAmBA,UAAnB;AACAD,KAAK,CAACK,QAAN,GAAiB;AAAEF,EAAAA,gBAAgB,EAAhBA;AAAF,CAAjB;AACAH,KAAK,CAACM,KAAN,GAAc;AAAEJ,EAAAA,eAAe,EAAfA;AAAF,CAAd,C,CAEA;;eAEeF,K;AAAf","sourcesContent":["import Maker from './Maker';\nimport { currencies } from './eth/Currency';\nimport { stringToBytes32 } from './utils/conversion';\nimport { getQueryResponse } from './QueryApi';\n\nfor (let symbol in currencies) {\n  Maker[symbol] = currencies[symbol];\n}\n\nMaker.currencies = currencies;\nMaker.QueryApi = { getQueryResponse };\nMaker.utils = { stringToBytes32 };\n\n// module.exports = Maker;\n\nexport default Maker;\n"]},"metadata":{},"sourceType":"module"}