{"ast":null,"code":"var _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NotificationContent/NextPriceLiquidatation.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { watch } from 'hooks/useObservable';\nimport useLanguage from 'hooks/useLanguage';\nimport { Text } from '@makerdao/ui-components-core';\n\nfunction NextPriceLiquidation(_ref) {\n  var vaultType = _ref.vaultType,\n      collateral = _ref.collateral,\n      debt = _ref.debt;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var gem = vaultType.split('-')[0];\n  var nextPriceUpdate = watch.tokenPriceNextUpdate(gem);\n  return /*#__PURE__*/React.createElement(Text.p, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, lang.formatString(lang.notifications.vault_below_next_price, vaultType, nextPriceUpdate ? nextPriceUpdate.toTimeString().split(' ')[0] : '-- : --', \"\".concat(collateral, \" \").concat(gem), \"\".concat(debt, \" USDFL\")));\n}\n\n__signature__(NextPriceLiquidation, \"useLanguage{{ lang }}\", function () {\n  return [useLanguage];\n});\n\nvar _default = NextPriceLiquidation;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NextPriceLiquidation, \"NextPriceLiquidation\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NotificationContent/NextPriceLiquidatation.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NotificationContent/NextPriceLiquidatation.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/NotificationContent/NextPriceLiquidatation.js"],"names":["React","watch","useLanguage","Text","NextPriceLiquidation","vaultType","collateral","debt","lang","gem","split","nextPriceUpdate","tokenPriceNextUpdate","formatString","notifications","vault_below_next_price","toTimeString"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,SAASC,IAAT,QAAqB,8BAArB;;AAEA,SAASC,oBAAT,OAA+D;AAAA,MAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,MAApBC,UAAoB,QAApBA,UAAoB;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,qBAC5CL,WAAW,EADiC;AAAA,MACrDM,IADqD,gBACrDA,IADqD;;AAE7D,MAAMC,GAAG,GAAGJ,SAAS,CAACK,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAZ;AACA,MAAMC,eAAe,GAAGV,KAAK,CAACW,oBAAN,CAA2BH,GAA3B,CAAxB;AAEA,sBACE,oBAAC,IAAD,CAAM,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACK,YAAL,CACCL,IAAI,CAACM,aAAL,CAAmBC,sBADpB,EAECV,SAFD,EAGCM,eAAe,GACXA,eAAe,CAACK,YAAhB,GAA+BN,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CADW,GAEX,SALL,YAMIJ,UANJ,cAMkBG,GANlB,aAOIF,IAPJ,YADH,CADF;AAaD;;cAlBQH,oB;UACUF,W;;;eAmBJE,oB;AAAf;;;;;;;;;;0BApBSA,oB","sourcesContent":["import React from 'react';\nimport { watch } from 'hooks/useObservable';\nimport useLanguage from 'hooks/useLanguage';\nimport { Text } from '@makerdao/ui-components-core';\n\nfunction NextPriceLiquidation({ vaultType, collateral, debt }) {\n  const { lang } = useLanguage();\n  const gem = vaultType.split('-')[0];\n  const nextPriceUpdate = watch.tokenPriceNextUpdate(gem);\n\n  return (\n    <Text.p>\n      {lang.formatString(\n        lang.notifications.vault_below_next_price,\n        vaultType,\n        nextPriceUpdate\n          ? nextPriceUpdate.toTimeString().split(' ')[0]\n          : '-- : --',\n        `${collateral} ${gem}`,\n        `${debt} USDFL`\n      )}\n    </Text.p>\n  );\n}\n\nexport default NextPriceLiquidation;\n"]},"metadata":{},"sourceType":"module"}