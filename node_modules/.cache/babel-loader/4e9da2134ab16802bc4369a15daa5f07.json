{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { useNavigation as useNavigationBase } from 'react-navi';\nimport { mixpanelIdentify } from '../utils/analytics';\nimport { AccountTypes } from '../utils/constants';\nimport { instantiateMaker } from '../maker';\nimport PropTypes from 'prop-types';\nimport { checkEthereumProvider, browserEthereumProviderAddress } from '../utils/ethereum';\nimport LoadingLayout from '../layouts/LoadingLayout'; // import schemas from '@makerdao/dai-plugin-mcd/dist/schemas';\n\nimport schemas from '../libs/dai-plugin-mcd/src/schemas/index.js';\nimport useObservable, { watch } from 'hooks/useObservable';\nimport useAnalytics from 'hooks/useAnalytics';\nimport debug from 'debug';\nvar log = debug('maker:MakerProvider');\nexport var MakerObjectContext = createContext();\n\nfunction useNavigation(network, mocks) {\n  if (network === 'testnet' && mocks) return mocks.navigation;\n  return useNavigationBase(); // eslint-disable-line react-hooks/rules-of-hooks\n}\n\n__signature__(useNavigation, \"useNavigationBase{}\", function () {\n  return [useNavigationBase];\n});\n\nfunction MakerProvider(_ref) {\n  var children = _ref.children,\n      network = _ref.network,\n      testchainId = _ref.testchainId,\n      backendEnv = _ref.backendEnv,\n      viewedAddress = _ref.viewedAddress,\n      mocks = _ref.mocks;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      txLastUpdate = _useState4[0],\n      setTxLastUpdate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      maker = _useState6[0],\n      setMaker = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      watcher = _useState8[0],\n      setWatcher = _useState8[1];\n\n  var navNetwork = network === 'kovan-osm' ? 'kovan' : network;\n  var navigation = useNavigation(navNetwork, mocks);\n\n  var _useAnalytics = useAnalytics(),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var initAccount = function initAccount(account) {\n    mixpanelIdentify(account.address, account.type);\n    setAccount(_objectSpread({}, account));\n  };\n\n  var removeAccounts = function removeAccounts() {\n    maker.service('accounts')._accounts = {};\n    maker.service('accounts')._currentAccount = '';\n    setAccount(null);\n  };\n\n  var connectBrowserProvider = useCallback( /*#__PURE__*/_asyncToGenerator(__signature__( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var networkId, browserProvider, getMatchedAccount, existingAccount, connectedAddress;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getMatchedAccount = function _getMatchedAccount(address) {\n              return maker.listAccounts().find(function (acc) {\n                return acc.address.toUpperCase() === address.toUpperCase();\n              });\n            };\n\n            networkId = maker.service('web3').networkId();\n            _context.next = 4;\n            return checkEthereumProvider();\n\n          case 4:\n            browserProvider = _context.sent;\n\n            if (!(browserProvider.networkId !== networkId)) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('browser ethereum provider and URL network param do not match.');\n\n          case 7:\n            if (!(!browserProvider.address || !browserProvider.address.match(/^0x[a-fA-F0-9]{40}$/))) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error('browser ethereum provider providing incorrect or non-existent address');\n\n          case 9:\n            if (maker.service('accounts').hasAccount()) {\n              existingAccount = getMatchedAccount(browserProvider.address);\n\n              if (existingAccount) {\n                log(\"Using existing SDK account: \".concat(existingAccount.address));\n                maker.useAccountWithAddress(existingAccount.address);\n              }\n            }\n\n            if (existingAccount) {\n              _context.next = 14;\n              break;\n            }\n\n            log('Adding new browser account to SDK');\n            _context.next = 14;\n            return maker.addAccount({\n              type: 'browser',\n              autoSwitch: true\n            });\n\n          case 14:\n            connectedAddress = maker.currentAddress();\n            return _context.abrupt(\"return\", connectedAddress);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"useAccountWithAddress{}\")), [maker]);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var newMaker, multicall, watcher;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return instantiateMaker({\n                network: network,\n                testchainId: testchainId,\n                backendEnv: backendEnv,\n                navigation: navigation\n              });\n\n            case 2:\n              newMaker = _context2.sent;\n              // Register multicall schemas and map useObservable hook to watch convenience helper\n              multicall = newMaker.service('multicall');\n              multicall.registerSchemas(_objectSpread({}, schemas));\n              multicall.observableKeys.forEach(function (key) {\n                return watch[key] = __signature__(function () {\n                  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = arguments[_key];\n                  }\n\n                  return useObservable.apply(void 0, [key].concat(args));\n                }, \"useObservable{}\", function () {\n                  return [useObservable];\n                });\n              } // eslint-disable-line react-hooks/rules-of-hooks\n              ); // Create and start multicall watcher\n\n              watcher = multicall.createWatcher({\n                interval: 'block'\n              });\n              multicall.start();\n              setWatcher(watcher);\n              setMaker(newMaker);\n              log('Initialized maker instance');\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))(); // leaving maker out of the deps because it would create an infinite loop\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [backendEnv, network, testchainId]);\n  useEffect(function () {\n    if (!maker) return;\n\n    if (maker.service('accounts').hasAccount()) {\n      initAccount(maker.currentAccount());\n    } else {\n      // Reconnect browser provider if active address matches last connected\n      var lastType = sessionStorage.getItem('lastConnectedWalletType');\n\n      if (lastType === 'browser') {\n        var lastAddress = sessionStorage.getItem('lastConnectedWalletAddress');\n        browserEthereumProviderAddress().then(function (activeAddress) {\n          if (activeAddress === lastAddress) {\n            log(\"Reconnecting address: \".concat(activeAddress, \" (matches last connected wallet address)\"));\n            connectBrowserProvider();\n          }\n        });\n      }\n    }\n\n    maker.on('accounts/CHANGE', function (eventObj) {\n      var account = eventObj.payload.account;\n      if (eventObj.sequence === 1) trackBtnClick(undefined, {\n        fathom: {\n          id: 'connectWallet'\n        }\n      });\n      sessionStorage.setItem('lastConnectedWalletType', account.type);\n      sessionStorage.setItem('lastConnectedWalletAddress', account.address.toLowerCase());\n      log(\"Account changed to: \".concat(account.address));\n      initAccount(account);\n    });\n    var txManagerSub = maker.service('transactionManager').onTransactionUpdate(function (tx, state) {\n      if (state === 'mined') {\n        var _tx$metadata, _tx$metadata2;\n\n        var id = (_tx$metadata = tx.metadata) === null || _tx$metadata === void 0 ? void 0 : _tx$metadata.id;\n\n        if (id) {\n          log(\"Resetting event history cache for Vault #\".concat(id));\n          maker.service('mcd:cdpManager').resetEventHistoryCache(id);\n          setTxLastUpdate(function (current) {\n            return _objectSpread({}, current, _defineProperty({}, id, Date.now()));\n          });\n        } else if (((_tx$metadata2 = tx.metadata) === null || _tx$metadata2 === void 0 ? void 0 : _tx$metadata2.contract) === 'PROXY_ACTIONS_DSR') {\n          log('Resetting savings event history cache');\n          maker.service('mcd:savings').resetEventHistoryCache();\n          setTxLastUpdate(function (current) {\n            return _objectSpread({}, current, {\n              save: Date.now()\n            });\n          });\n        }\n      }\n\n      log('Tx ' + state, tx.metadata);\n    });\n    return function () {\n      txManagerSub.unsub();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [maker, connectBrowserProvider]);\n\n  var connectToProviderOfType = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator(__signature__( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(type) {\n      var _account, connectedAddress;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (maker) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              if (!maker.service('accounts').hasAccount()) {\n                _context3.next = 6;\n                break;\n              }\n\n              initAccount(maker.currentAccount());\n              _context3.next = 10;\n              break;\n\n            case 6:\n              _context3.next = 8;\n              return maker.addAccount({\n                type: type\n              });\n\n            case 8:\n              _account = _context3.sent;\n              maker.useAccountWithAddress(_account.address);\n\n            case 10:\n              connectedAddress = maker.currentAddress();\n              return _context3.abrupt(\"return\", connectedAddress);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }), \"useAccountWithAddress{}\"));\n\n    return function connectToProviderOfType(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var disconnectWalletLink = function disconnectWalletLink(subprovider) {\n    return subprovider.resetWallet();\n  };\n\n  var disconnectWalletConnect = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(subprovider) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return subprovider.getWalletConnector();\n\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent.killSession());\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function disconnectWalletConnect(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var disconnectBrowserWallet = function disconnectBrowserWallet() {\n    return ['lastConnectedWalletType', 'lastConnectedWalletAddress'].forEach(function (x) {\n      return sessionStorage.removeItem(x);\n    });\n  };\n\n  var disconnect = function disconnect() {\n    var subprovider = maker.service('accounts').currentWallet();\n    if (subprovider.isWalletLink) disconnectWalletLink(subprovider);else if (subprovider.isWalletConnect) disconnectWalletConnect(subprovider);else if (sessionStorage.getItem('lastConnectedWalletType') === AccountTypes.METAMASK) disconnectBrowserWallet();\n    removeAccounts();\n  };\n\n  return /*#__PURE__*/React.createElement(MakerObjectContext.Provider, {\n    value: {\n      maker: maker,\n      watcher: watcher,\n      account: account,\n      network: network,\n      txLastUpdate: txLastUpdate,\n      connectBrowserProvider: connectBrowserProvider,\n      connectToProviderOfType: connectToProviderOfType,\n      disconnect: disconnect,\n      viewedAddress: viewedAddress,\n      navigation: navigation\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, maker ? children : /*#__PURE__*/React.createElement(LoadingLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 27\n    }\n  }));\n}\n\n__signature__(MakerProvider, \"useState{[account, setAccount](null)}\\nuseState{[txLastUpdate, setTxLastUpdate]({})}\\nuseState{[maker, setMaker](null)}\\nuseState{[watcher, setWatcher](null)}\\nuseNavigation{navigation}\\nuseAnalytics{{ trackBtnClick }}\\nuseCallback{connectBrowserProvider}\\nuseEffect{}\\nuseEffect{}\", function () {\n  return [useNavigation, useAnalytics];\n});\n\nMakerProvider.propTypes = {\n  network: PropTypes.string.isRequired\n};\nvar _default = MakerProvider;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(log, \"log\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js\");\n  reactHotLoader.register(MakerObjectContext, \"MakerObjectContext\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js\");\n  reactHotLoader.register(useNavigation, \"useNavigation\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js\");\n  reactHotLoader.register(MakerProvider, \"MakerProvider\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/providers/MakerProvider.js"],"names":["React","createContext","useState","useEffect","useCallback","useNavigation","useNavigationBase","mixpanelIdentify","AccountTypes","instantiateMaker","PropTypes","checkEthereumProvider","browserEthereumProviderAddress","LoadingLayout","schemas","useObservable","watch","useAnalytics","debug","log","MakerObjectContext","network","mocks","navigation","MakerProvider","children","testchainId","backendEnv","viewedAddress","account","setAccount","txLastUpdate","setTxLastUpdate","maker","setMaker","watcher","setWatcher","navNetwork","trackBtnClick","initAccount","address","type","removeAccounts","service","_accounts","_currentAccount","connectBrowserProvider","getMatchedAccount","listAccounts","find","acc","toUpperCase","networkId","browserProvider","Error","match","hasAccount","existingAccount","useAccountWithAddress","addAccount","autoSwitch","connectedAddress","currentAddress","newMaker","multicall","registerSchemas","observableKeys","forEach","key","args","createWatcher","interval","start","currentAccount","lastType","sessionStorage","getItem","lastAddress","then","activeAddress","on","eventObj","payload","sequence","undefined","fathom","id","setItem","toLowerCase","txManagerSub","onTransactionUpdate","tx","state","metadata","resetEventHistoryCache","current","Date","now","contract","save","unsub","connectToProviderOfType","disconnectWalletLink","subprovider","resetWallet","disconnectWalletConnect","getWalletConnector","killSession","disconnectBrowserWallet","x","removeItem","disconnect","currentWallet","isWalletLink","isWalletConnect","METAMASK","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { useNavigation as useNavigationBase } from 'react-navi';\nimport { mixpanelIdentify } from '../utils/analytics';\nimport { AccountTypes } from '../utils/constants';\nimport { instantiateMaker } from '../maker';\nimport PropTypes from 'prop-types';\nimport {\n  checkEthereumProvider,\n  browserEthereumProviderAddress\n} from '../utils/ethereum';\nimport LoadingLayout from '../layouts/LoadingLayout';\n// import schemas from '@makerdao/dai-plugin-mcd/dist/schemas';\nimport schemas from '../libs/dai-plugin-mcd/src/schemas/index.js';\nimport useObservable, { watch } from 'hooks/useObservable';\nimport useAnalytics from 'hooks/useAnalytics';\nimport debug from 'debug';\nconst log = debug('maker:MakerProvider');\n\nexport const MakerObjectContext = createContext();\n\nfunction useNavigation(network, mocks) {\n  if (network === 'testnet' && mocks) return mocks.navigation;\n  return useNavigationBase(); // eslint-disable-line react-hooks/rules-of-hooks\n}\n\nfunction MakerProvider({\n  children,\n  network,\n  testchainId,\n  backendEnv,\n  viewedAddress,\n  mocks\n}) {\n  const [account, setAccount] = useState(null);\n  const [txLastUpdate, setTxLastUpdate] = useState({});\n  const [maker, setMaker] = useState(null);\n  const [watcher, setWatcher] = useState(null);\n\n  const navNetwork = network === 'kovan-osm' ? 'kovan' : network;\n  const navigation = useNavigation(navNetwork, mocks);\n\n  const { trackBtnClick } = useAnalytics();\n  const initAccount = account => {\n    mixpanelIdentify(account.address, account.type);\n    setAccount({ ...account });\n  };\n\n  const removeAccounts = () => {\n    maker.service('accounts')._accounts = {};\n    maker.service('accounts')._currentAccount = '';\n    setAccount(null);\n  };\n\n  const connectBrowserProvider = useCallback(async () => {\n    const networkId = maker.service('web3').networkId();\n    const browserProvider = await checkEthereumProvider();\n\n    function getMatchedAccount(address) {\n      return maker\n        .listAccounts()\n        .find(acc => acc.address.toUpperCase() === address.toUpperCase());\n    }\n\n    if (browserProvider.networkId !== networkId)\n      throw new Error(\n        'browser ethereum provider and URL network param do not match.'\n      );\n    if (\n      !browserProvider.address ||\n      !browserProvider.address.match(/^0x[a-fA-F0-9]{40}$/)\n    )\n      throw new Error(\n        'browser ethereum provider providing incorrect or non-existent address'\n      );\n\n    let existingAccount;\n    if (maker.service('accounts').hasAccount()) {\n      existingAccount = getMatchedAccount(browserProvider.address);\n      if (existingAccount) {\n        log(`Using existing SDK account: ${existingAccount.address}`);\n        maker.useAccountWithAddress(existingAccount.address);\n      }\n    }\n    if (!existingAccount) {\n      log('Adding new browser account to SDK');\n      await maker.addAccount({\n        type: 'browser',\n        autoSwitch: true\n      });\n    }\n\n    const connectedAddress = maker.currentAddress();\n    return connectedAddress;\n  }, [maker]);\n\n  useEffect(() => {\n    (async () => {\n      const newMaker = await instantiateMaker({\n        network,\n        testchainId,\n        backendEnv,\n        navigation\n      });\n\n      // Register multicall schemas and map useObservable hook to watch convenience helper\n      const multicall = newMaker.service('multicall');\n      multicall.registerSchemas({ ...schemas });\n      multicall.observableKeys.forEach(\n        key => (watch[key] = (...args) => useObservable(key, ...args)) // eslint-disable-line react-hooks/rules-of-hooks\n      );\n      // Create and start multicall watcher\n      const watcher = multicall.createWatcher({ interval: 'block' });\n      multicall.start();\n      setWatcher(watcher);\n      setMaker(newMaker);\n\n      log('Initialized maker instance');\n    })();\n    // leaving maker out of the deps because it would create an infinite loop\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [backendEnv, network, testchainId]);\n\n  useEffect(() => {\n    if (!maker) return;\n    if (maker.service('accounts').hasAccount()) {\n      initAccount(maker.currentAccount());\n    } else {\n      // Reconnect browser provider if active address matches last connected\n      const lastType = sessionStorage.getItem('lastConnectedWalletType');\n      if (lastType === 'browser') {\n        const lastAddress = sessionStorage.getItem(\n          'lastConnectedWalletAddress'\n        );\n        browserEthereumProviderAddress().then(activeAddress => {\n          if (activeAddress === lastAddress) {\n            log(\n              `Reconnecting address: ${activeAddress} (matches last connected wallet address)`\n            );\n            connectBrowserProvider();\n          }\n        });\n      }\n    }\n\n    maker.on('accounts/CHANGE', eventObj => {\n      const { account } = eventObj.payload;\n      if (eventObj.sequence === 1)\n        trackBtnClick(undefined, { fathom: { id: 'connectWallet' } });\n      sessionStorage.setItem('lastConnectedWalletType', account.type);\n      sessionStorage.setItem(\n        'lastConnectedWalletAddress',\n        account.address.toLowerCase()\n      );\n      log(`Account changed to: ${account.address}`);\n      initAccount(account);\n    });\n\n    const txManagerSub = maker\n      .service('transactionManager')\n      .onTransactionUpdate((tx, state) => {\n        if (state === 'mined') {\n          const id = tx.metadata?.id;\n          if (id) {\n            log(`Resetting event history cache for Vault #${id}`);\n            maker.service('mcd:cdpManager').resetEventHistoryCache(id);\n            setTxLastUpdate(current => ({ ...current, [id]: Date.now() }));\n          } else if (tx.metadata?.contract === 'PROXY_ACTIONS_DSR') {\n            log('Resetting savings event history cache');\n            maker.service('mcd:savings').resetEventHistoryCache();\n            setTxLastUpdate(current => ({ ...current, save: Date.now() }));\n          }\n        }\n        log('Tx ' + state, tx.metadata);\n      });\n    return () => {\n      txManagerSub.unsub();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [maker, connectBrowserProvider]);\n\n  const connectToProviderOfType = async type => {\n    if (!maker) return;\n    if (maker.service('accounts').hasAccount()) {\n      initAccount(maker.currentAccount());\n    } else {\n      const account = await maker.addAccount({\n        type\n      });\n      maker.useAccountWithAddress(account.address);\n    }\n    const connectedAddress = maker.currentAddress();\n    return connectedAddress;\n  };\n\n  const disconnectWalletLink = subprovider => subprovider.resetWallet();\n  const disconnectWalletConnect = async subprovider =>\n    (await subprovider.getWalletConnector()).killSession();\n  const disconnectBrowserWallet = () =>\n    ['lastConnectedWalletType', 'lastConnectedWalletAddress'].forEach(x =>\n      sessionStorage.removeItem(x)\n    );\n\n  const disconnect = () => {\n    const subprovider = maker.service('accounts').currentWallet();\n    if (subprovider.isWalletLink) disconnectWalletLink(subprovider);\n    else if (subprovider.isWalletConnect) disconnectWalletConnect(subprovider);\n    else if (\n      sessionStorage.getItem('lastConnectedWalletType') ===\n      AccountTypes.METAMASK\n    )\n      disconnectBrowserWallet();\n    removeAccounts();\n  };\n\n  return (\n    <MakerObjectContext.Provider\n      value={{\n        maker,\n        watcher,\n        account,\n        network,\n        txLastUpdate,\n        connectBrowserProvider,\n        connectToProviderOfType,\n        disconnect,\n        viewedAddress,\n        navigation\n      }}\n    >\n      {maker ? children : <LoadingLayout />}\n    </MakerObjectContext.Provider>\n  );\n}\n\nMakerProvider.propTypes = {\n  network: PropTypes.string.isRequired\n};\n\nexport default MakerProvider;\n"]},"metadata":{},"sourceType":"module"}