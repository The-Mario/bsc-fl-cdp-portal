{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport networks from '../../contracts/networks';\nexport function captureConsole(cb) {\n  // eslint-disable-next-line\n  var origConsoleLog = console.log,\n      output = []; // eslint-disable-next-line\n\n  console.log = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args.forEach(function (a) {\n      return output.push(a);\n    });\n  };\n\n  cb(); // eslint-disable-next-line\n\n  console.log = origConsoleLog;\n}\nexport function promisify(fn) {\n  return function () {\n    var _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return new Promise(function (resolve, reject) {\n      fn.apply(_this, args.concat(function (err, value) {\n        return err ? reject(err) : resolve(value);\n      }));\n    });\n  };\n}\nexport function getNetworkName(networkId) {\n  var result = networks.filter(function (n) {\n    return n.networkId === networkId;\n  });\n\n  if (result.length < 1) {\n    throw new Error('No network with ID ' + networkId + ' found.');\n  }\n\n  return result[0].name;\n}\nexport function slug() {\n  return '-' + Math.random().toString(36).substring(2, 7) + Math.random().toString(36).substring(2, 7);\n}\nexport function promiseWait(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n} // https://stackoverflow.com/a/43963612/56817\n\nexport var uniqueId = function () {\n  var currentId = 0;\n  var map = new WeakMap();\n  return function (object) {\n    if (!map.has(object)) {\n      map.set(object, ++currentId);\n    }\n\n    return map.get(object);\n  };\n}();\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(captureConsole, \"captureConsole\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js\");\n  reactHotLoader.register(promisify, \"promisify\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js\");\n  reactHotLoader.register(getNetworkName, \"getNetworkName\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js\");\n  reactHotLoader.register(slug, \"slug\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js\");\n  reactHotLoader.register(promiseWait, \"promiseWait\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js\");\n  reactHotLoader.register(uniqueId, \"uniqueId\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/utils/index.js"],"names":["networks","captureConsole","cb","origConsoleLog","console","log","output","args","forEach","a","push","promisify","fn","Promise","resolve","reject","apply","concat","err","value","getNetworkName","networkId","result","filter","n","length","Error","name","slug","Math","random","toString","substring","promiseWait","ms","setTimeout","uniqueId","currentId","map","WeakMap","object","has","set","get"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAAqB,0BAArB;AAEA,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAA4B;AACjC;AACA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAA/B;AAAA,MACEC,MAAM,GAAG,EADX,CAFiC,CAKjC;;AACAF,EAAAA,OAAO,CAACC,GAAR,GAAc;AAAA,sCAAIE,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,WAAaA,IAAI,CAACC,OAAL,CAAa,UAAAC,CAAC;AAAA,aAAIH,MAAM,CAACI,IAAP,CAAYD,CAAZ,CAAJ;AAAA,KAAd,CAAb;AAAA,GAAd;;AAEAP,EAAAA,EAAE,GAR+B,CAUjC;;AACAE,EAAAA,OAAO,CAACC,GAAR,GAAcF,cAAd;AACD;AAED,OAAO,SAASQ,SAAT,CAAmBC,EAAnB,EAAuB;AAC5B,SAAO,YAAkB;AAAA;;AAAA,uCAANL,IAAM;AAANA,MAAAA,IAAM;AAAA;;AACvB,WAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCH,MAAAA,EAAE,CAACI,KAAH,CACE,KADF,EAEET,IAAI,CAACU,MAAL,CAAY,UAACC,GAAD,EAAMC,KAAN;AAAA,eAAiBD,GAAG,GAAGH,MAAM,CAACG,GAAD,CAAT,GAAiBJ,OAAO,CAACK,KAAD,CAA5C;AAAA,OAAZ,CAFF;AAID,KALM,CAAP;AAMD,GAPD;AAQD;AAED,OAAO,SAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACxC,MAAMC,MAAM,GAAGtB,QAAQ,CAACuB,MAAT,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACH,SAAF,KAAgBA,SAApB;AAAA,GAAjB,CAAf;;AAEA,MAAIC,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACrB,UAAM,IAAIC,KAAJ,CAAU,wBAAwBL,SAAxB,GAAoC,SAA9C,CAAN;AACD;;AAED,SAAOC,MAAM,CAAC,CAAD,CAAN,CAAUK,IAAjB;AACD;AAED,OAAO,SAASC,IAAT,GAAgB;AACrB,SACE,MACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,SAFH,CAEa,CAFb,EAEgB,CAFhB,CADA,GAIAH,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,SAFH,CAEa,CAFb,EAEgB,CAFhB,CALF;AASD;AAED,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,SAAO,IAAIrB,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIqB,UAAU,CAACrB,OAAD,EAAUoB,EAAV,CAAd;AAAA,GAAnB,CAAP;AACD,C,CAED;;AACA,OAAO,IAAME,QAAQ,GAAI,YAAM;AAC7B,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAMC,GAAG,GAAG,IAAIC,OAAJ,EAAZ;AAEA,SAAO,UAAAC,MAAM,EAAI;AACf,QAAI,CAACF,GAAG,CAACG,GAAJ,CAAQD,MAAR,CAAL,EAAsB;AACpBF,MAAAA,GAAG,CAACI,GAAJ,CAAQF,MAAR,EAAgB,EAAEH,SAAlB;AACD;;AAED,WAAOC,GAAG,CAACK,GAAJ,CAAQH,MAAR,CAAP;AACD,GAND;AAOD,CAXuB,EAAjB;;;;;;;;;;0BApDSvC,c;0BAcAU,S;0BAWAS,c;0BAUAQ,I;0BAYAK,W;0BAKHG,Q","sourcesContent":["import networks from '../../contracts/networks';\n\nexport function captureConsole(cb) {\n  // eslint-disable-next-line\n  const origConsoleLog = console.log,\n    output = [];\n\n  // eslint-disable-next-line\n  console.log = (...args) => args.forEach(a => output.push(a));\n\n  cb();\n\n  // eslint-disable-next-line\n  console.log = origConsoleLog;\n}\n\nexport function promisify(fn) {\n  return function(...args) {\n    return new Promise((resolve, reject) => {\n      fn.apply(\n        this,\n        args.concat((err, value) => (err ? reject(err) : resolve(value)))\n      );\n    });\n  };\n}\n\nexport function getNetworkName(networkId) {\n  const result = networks.filter(n => n.networkId === networkId);\n\n  if (result.length < 1) {\n    throw new Error('No network with ID ' + networkId + ' found.');\n  }\n\n  return result[0].name;\n}\n\nexport function slug() {\n  return (\n    '-' +\n    Math.random()\n      .toString(36)\n      .substring(2, 7) +\n    Math.random()\n      .toString(36)\n      .substring(2, 7)\n  );\n}\n\nexport function promiseWait(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// https://stackoverflow.com/a/43963612/56817\nexport const uniqueId = (() => {\n  let currentId = 0;\n  const map = new WeakMap();\n\n  return object => {\n    if (!map.has(object)) {\n      map.set(object, ++currentId);\n    }\n\n    return map.get(object);\n  };\n})();\n"]},"metadata":{},"sourceType":"module"}