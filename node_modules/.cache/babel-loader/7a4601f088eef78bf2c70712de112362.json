{"ast":null,"code":"import _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RatioDisplay.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { getSafetyLevels } from 'styles/theme';\nimport { SAFETY_LEVELS } from 'utils/constants';\nimport { Text, Card } from '@makerdao/ui-components-core';\nimport BigNumber from 'bignumber.js';\n\nfunction lookupCDPSafetyLevel(ratio, ilkLiqRatio) {\n  var dangerThreshold = BigNumber(0.1).times(ilkLiqRatio).plus(ilkLiqRatio);\n  var warningThreshold = BigNumber(0.5).times(ilkLiqRatio).plus(ilkLiqRatio);\n  var level;\n  if (ratio.lt(dangerThreshold)) level = SAFETY_LEVELS.DANGER;else if (ratio.lt(warningThreshold)) level = SAFETY_LEVELS.WARNING;else level = SAFETY_LEVELS.SAFE;\n  return {\n    level: level,\n    dangerThreshold: dangerThreshold,\n    warningThreshold: warningThreshold\n  };\n}\n\nexport var RatioDisplayTypes = {\n  CARD: 'card',\n  TEXT: 'text',\n  PERCENTAGE: 'percentage'\n};\nexport default function RatioDisplay(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? null : _ref$type,\n      ratio = _ref.ratio,\n      ilkLiqRatio = _ref.ilkLiqRatio,\n      active = _ref.active,\n      text = _ref.text,\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? true : _ref$show,\n      _ref$onlyWarnings = _ref.onlyWarnings,\n      onlyWarnings = _ref$onlyWarnings === void 0 ? false : _ref$onlyWarnings,\n      props = _objectWithoutProperties(_ref, [\"type\", \"ratio\", \"ilkLiqRatio\", \"active\", \"text\", \"show\", \"onlyWarnings\"]);\n\n  if (!ratio || ratio === Infinity) return null;\n  if (!BigNumber.isBigNumber(ratio)) ratio = BigNumber(ratio);\n  if (!BigNumber.isBigNumber(ilkLiqRatio)) ilkLiqRatio = BigNumber(ilkLiqRatio);\n\n  var _lookupCDPSafetyLevel = lookupCDPSafetyLevel(ratio, ilkLiqRatio),\n      level = _lookupCDPSafetyLevel.level,\n      warningThreshold = _lookupCDPSafetyLevel.warningThreshold;\n\n  var showDisplay = show && (onlyWarnings ? ratio.lt(warningThreshold) && ratio.gte(ilkLiqRatio) : true);\n  var overrides = level === SAFETY_LEVELS.WARNING && type === RatioDisplayTypes.CARD ? {\n    textColor: '#826318'\n  } : undefined;\n\n  var _getSafetyLevels = getSafetyLevels({\n    level: level,\n    overrides: overrides\n  }),\n      textColor = _getSafetyLevels.textColor,\n      backgroundColor = _getSafetyLevels.backgroundColor,\n      borderColor = _getSafetyLevels.borderColor;\n\n  switch (type) {\n    case RatioDisplayTypes.TEXT:\n      return showDisplay ? /*#__PURE__*/React.createElement(Text, Object.assign({\n        color: textColor\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }), text) : null;\n\n    case RatioDisplayTypes.CARD:\n      return showDisplay ? /*#__PURE__*/React.createElement(Card, Object.assign({\n        p: \"m\",\n        bg: backgroundColor,\n        borderColor: borderColor\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Text, {\n        color: textColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, text)) : null;\n\n    case RatioDisplayTypes.PERCENTAGE:\n    default:\n      return showDisplay && isFinite(ratio) ? /*#__PURE__*/React.createElement(Text, Object.assign({\n        color: active ? 'white' : textColor\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }), ratio.toString(), \"%\") : null;\n  }\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(lookupCDPSafetyLevel, \"lookupCDPSafetyLevel\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RatioDisplay.js\");\n  reactHotLoader.register(RatioDisplayTypes, \"RatioDisplayTypes\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RatioDisplay.js\");\n  reactHotLoader.register(RatioDisplay, \"RatioDisplay\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RatioDisplay.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RatioDisplay.js"],"names":["React","getSafetyLevels","SAFETY_LEVELS","Text","Card","BigNumber","lookupCDPSafetyLevel","ratio","ilkLiqRatio","dangerThreshold","times","plus","warningThreshold","level","lt","DANGER","WARNING","SAFE","RatioDisplayTypes","CARD","TEXT","PERCENTAGE","RatioDisplay","type","active","text","show","onlyWarnings","props","Infinity","isBigNumber","showDisplay","gte","overrides","textColor","undefined","backgroundColor","borderColor","isFinite","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getSafetyLevels } from 'styles/theme';\nimport { SAFETY_LEVELS } from 'utils/constants';\nimport { Text, Card } from '@makerdao/ui-components-core';\nimport BigNumber from 'bignumber.js';\n\nfunction lookupCDPSafetyLevel(ratio, ilkLiqRatio) {\n  const dangerThreshold = BigNumber(0.1)\n    .times(ilkLiqRatio)\n    .plus(ilkLiqRatio);\n  const warningThreshold = BigNumber(0.5)\n    .times(ilkLiqRatio)\n    .plus(ilkLiqRatio);\n  let level;\n  if (ratio.lt(dangerThreshold)) level = SAFETY_LEVELS.DANGER;\n  else if (ratio.lt(warningThreshold)) level = SAFETY_LEVELS.WARNING;\n  else level = SAFETY_LEVELS.SAFE;\n  return { level, dangerThreshold, warningThreshold };\n}\n\nexport const RatioDisplayTypes = {\n  CARD: 'card',\n  TEXT: 'text',\n  PERCENTAGE: 'percentage'\n};\n\nexport default function RatioDisplay({\n  type = null,\n  ratio,\n  ilkLiqRatio,\n  active,\n  text,\n  show = true,\n  onlyWarnings = false,\n  ...props\n}) {\n  if (!ratio || ratio === Infinity) return null;\n  if (!BigNumber.isBigNumber(ratio)) ratio = BigNumber(ratio);\n\n  if (!BigNumber.isBigNumber(ilkLiqRatio)) ilkLiqRatio = BigNumber(ilkLiqRatio);\n\n  const { level, warningThreshold } = lookupCDPSafetyLevel(ratio, ilkLiqRatio);\n  const showDisplay =\n    show &&\n    (onlyWarnings\n      ? ratio.lt(warningThreshold) && ratio.gte(ilkLiqRatio)\n      : true);\n\n  const overrides =\n    level === SAFETY_LEVELS.WARNING && type === RatioDisplayTypes.CARD\n      ? { textColor: '#826318' }\n      : undefined;\n  const { textColor, backgroundColor, borderColor } = getSafetyLevels({\n    level,\n    overrides\n  });\n\n  switch (type) {\n    case RatioDisplayTypes.TEXT:\n      return showDisplay ? (\n        <Text color={textColor} {...props}>\n          {text}\n        </Text>\n      ) : null;\n    case RatioDisplayTypes.CARD:\n      return showDisplay ? (\n        <Card p=\"m\" bg={backgroundColor} borderColor={borderColor} {...props}>\n          <Text color={textColor}>{text}</Text>\n        </Card>\n      ) : null;\n    case RatioDisplayTypes.PERCENTAGE:\n    default:\n      return showDisplay && isFinite(ratio) ? (\n        <Text color={active ? 'white' : textColor} {...props}>\n          {ratio.toString()}%\n        </Text>\n      ) : null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}