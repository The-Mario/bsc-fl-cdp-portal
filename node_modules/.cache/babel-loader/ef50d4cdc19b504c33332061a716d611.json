{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { hot } from 'react-hot-loader/root';\nimport { Box, Text, Flex } from '@makerdao/ui-components-core';\nimport lang from 'languages';\nimport { mixpanelIdentify } from 'utils/analytics';\nimport { FilledButton } from 'components/Marketing';\nimport { getWebClientProviderName } from 'utils/web3';\nimport useMaker from 'hooks/useMaker';\nimport { useLedger, useTrezor, useDcent } from 'hooks/useHardwareWallet';\nimport useLanguage from 'hooks/useLanguage';\nimport useBrowserIcon from 'hooks/useBrowserIcon';\nimport { ReactComponent as TrezorLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/trezor.svg\";\nimport { ReactComponent as LedgerLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/ledger.svg\";\nimport { ReactComponent as DcentLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/dcent.svg\";\nimport { ReactComponent as WalletConnectLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/wallet-connect.svg\";\nimport { ReactComponent as WalletLinkLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/wallet-link.svg\";\nimport { ReactComponent as CaratDown } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/carat-down-filled.svg\";\nimport { AccountTypes } from 'utils/constants';\nimport { BrowserView, isMobile } from 'react-device-detect';\nvar ConnectDropdownStyle = styled.div.withConfig({\n  displayName: \"AccountSelection__ConnectDropdownStyle\",\n  componentId: \"sc-2nf15m-0\"\n})([\".dropdown-trigger-wrapper{margin:-8px;padding:8px;}.dropdown-menu{position:absolute;top:100%;left:50%;transform:translateX(-50%);transition:opacity 0.2s;pointer-events:none;opacity:0;z-index:200;}\", \"{.dropdown-menu{opacity:1;pointer-events:auto;}}\"], function (props) {\n  return props.openOnHover ? ':hover, :active' : '&.show';\n});\n\nvar ConnectDropdown = function ConnectDropdown(_ref) {\n  var trigger = _ref.trigger,\n      show = _ref.show,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"trigger\", \"show\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(ConnectDropdownStyle, Object.assign({\n    className: show ? 'show' : ''\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-trigger-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, trigger), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nvar DropdownItems = styled(Box).withConfig({\n  displayName: \"AccountSelection__DropdownItems\",\n  componentId: \"sc-2nf15m-1\"\n})([\"margin-bottom:8px;min-width:270px;background:#222b3f;box-sizing:border-box;box-shadow:0 2px 4px rgba(0,0,0,0.15);border-radius:10px;padding:10px 7px 12px;position:relative;& > *{margin-top:8px;margin-bottom:8px;}\"]);\nvar DropdownWrapper = styled(Box).withConfig({\n  displayName: \"AccountSelection__DropdownWrapper\",\n  componentId: \"sc-2nf15m-2\"\n})([\"\", \" \", \"{&.smaller{position:absolute;top:0;}&.show{opacity:1;z-index:1;}&.hide{opacity:0;z-index:-1;pointer-events:none;}}\"], function (props) {\n  return props.isMobile ? \"\\n    \".concat(FilledButton, \", \").concat(FilledButton, \":hover {\\n       background-color: \").concat(props.isOpen ? '#00C4C4' : '#222B3F', \";\\n       color:\").concat(props.isOpen ? '#fff' : '#00C4C4', \";\\n    }\\n  \") : \"\\n    :hover {\\n      \".concat(FilledButton, \" {\\n        background-color: #191E2B;\\n        color: #00C4C4; \\n        \\n      }\\n    }\\n  \\n  \");\n}, DropdownItems);\nvar IconBox = styled(Box).withConfig({\n  displayName: \"AccountSelection__IconBox\",\n  componentId: \"sc-2nf15m-3\"\n})([\"display:flex;align-items:center;&,svg,img{width:\", \";height:\", \";}\"], function (props) {\n  return props.size;\n}, function (props) {\n  return props.size;\n});\nvar Item = styled(Box).withConfig({\n  displayName: \"AccountSelection__Item\",\n  componentId: \"sc-2nf15m-4\"\n})([\"width:255px;padding:12px 26px;cursor:pointer;\"]);\nvar IconItemStyle = styled(Item).withConfig({\n  displayName: \"AccountSelection__IconItemStyle\",\n  componentId: \"sc-2nf15m-5\"\n})([\".text{margin-left:23px;}:hover .text{opacity:0.6;}\"]);\n\nvar IconItem = function IconItem(_ref2) {\n  var icon = _ref2.icon,\n      _ref2$iconSize = _ref2.iconSize,\n      iconSize = _ref2$iconSize === void 0 ? '26.67px' : _ref2$iconSize,\n      children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, [\"icon\", \"iconSize\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(IconItemStyle, Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: \"29px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    size: iconSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, icon), /*#__PURE__*/React.createElement(Text, {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nfunction BrowserProviderItem(_ref3) {\n  var provider = _ref3.provider,\n      props = _objectWithoutProperties(_ref3, [\"provider\"]);\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var icon = useBrowserIcon(provider);\n  return /*#__PURE__*/React.createElement(IconItem, Object.assign({\n    icon: icon\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }), lang.providers[provider] || 'Active Wallet');\n}\n\n__signature__(BrowserProviderItem, \"useLanguage{{ lang }}\\nuseBrowserIcon{icon}\", function () {\n  return [useLanguage, useBrowserIcon];\n});\n\nvar NavItem = styled(Item).withConfig({\n  displayName: \"AccountSelection__NavItem\",\n  componentId: \"sc-2nf15m-6\"\n})([\"font-weight:bold;font-size:\", \";letter-spacing:0.5px;color:#00C4C4;text-align:left;padding:9px 26px;:hover{opacity:0.6;}\"], function (props) {\n  return props.theme.fontSizes.s;\n});\n\nfunction AccountSelection(_ref4) {\n  var _this2 = this;\n\n  var _ref4$buttonWidth = _ref4.buttonWidth,\n      buttonWidth = _ref4$buttonWidth === void 0 ? '240px' : _ref4$buttonWidth,\n      props = _objectWithoutProperties(_ref4, [\"buttonWidth\"]);\n\n  var dropdown = useRef(null);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMain = _useState2[0],\n      setShowMain = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1]; // only for mobile\n\n\n  useEffect(function () {\n    function handleDocumentClick(e) {\n      if (!dropdown.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    }\n\n    document.addEventListener('click', handleDocumentClick);\n    return function () {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n  var providerName = getWebClientProviderName();\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker,\n      makerAuthenticated = _useMaker.authenticated,\n      connectBrowserProvider = _useMaker.connectBrowserProvider,\n      connectToProviderOfType = _useMaker.connectToProviderOfType;\n\n  var onAccountChosen = useCallback( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator(__signature__( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref5, type) {\n      var address;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              address = _ref5.address;\n              maker.useAccountWithAddress(address);\n              mixpanelIdentify(address, type);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }), \"useAccountWithAddress{}\"));\n\n    return function (_x, _x2) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), [maker]);\n\n  var _useTrezor = useTrezor({\n    onAccountChosen: onAccountChosen\n  }),\n      connectTrezorWallet = _useTrezor.connectTrezorWallet;\n\n  var _useDcent = useDcent({\n    onAccountChosen: onAccountChosen\n  }),\n      connectDcentWallet = _useDcent.connectDcentWallet;\n\n  var _useLedger = useLedger({\n    onAccountChosen: onAccountChosen\n  }),\n      connectLedgerWallet = _useLedger.connectLedgerWallet;\n\n  function connectBrowserWallet() {\n    return _connectBrowserWallet.apply(this, arguments);\n  } // wallet items\n\n\n  function _connectBrowserWallet() {\n    _connectBrowserWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var connectedAddress;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return connectBrowserProvider();\n\n            case 3:\n              connectedAddress = _context2.sent;\n              onAccountChosen({\n                address: connectedAddress\n              }, providerName);\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              window.alert(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n    return _connectBrowserWallet.apply(this, arguments);\n  }\n\n  var walletLink = /*#__PURE__*/React.createElement(IconItem, {\n    onClick: function onClick() {\n      return connectToProviderOfType(AccountTypes.WALLETLINK);\n    },\n    disabled: !makerAuthenticated,\n    icon: /*#__PURE__*/React.createElement(WalletLinkLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }),\n    key: \"wallet-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, lang.landing_page.wallet_link);\n  var walletConnect = /*#__PURE__*/React.createElement(IconItem, {\n    onClick: function onClick() {\n      return connectToProviderOfType(AccountTypes.WALLETCONNECT);\n    },\n    icon: /*#__PURE__*/React.createElement(WalletConnectLogo, {\n      style: {\n        width: '28px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }),\n    key: \"wallet-connect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, lang.landing_page.wallet_connect);\n  var ledger = /*#__PURE__*/React.createElement(IconItem, {\n    onClick: connectLedgerWallet,\n    disabled: !makerAuthenticated,\n    icon: /*#__PURE__*/React.createElement(LedgerLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }),\n    iconSize: \"27px\",\n    key: \"ledger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, lang.providers.ledger_nano);\n  var trezor = /*#__PURE__*/React.createElement(IconItem, {\n    onClick: connectTrezorWallet,\n    disabled: !makerAuthenticated,\n    icon: /*#__PURE__*/React.createElement(TrezorLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }),\n    key: \"trezor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }\n  }, lang.providers.trezor);\n  var dcent = /*#__PURE__*/React.createElement(IconItem, {\n    onClick: connectDcentWallet,\n    disabled: !makerAuthenticated,\n    icon: /*#__PURE__*/React.createElement(DcentLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }),\n    key: \"dcent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, lang.providers.dcent);\n  var mainWallets = [ledger, trezor];\n  var otherWallets = [walletLink, walletConnect, dcent];\n  var mainWalletsCount = mainWallets.length + 1; // Add the browser provider wallet\n\n  return /*#__PURE__*/React.createElement(Box, Object.assign({\n    width: buttonWidth\n  }, props, {\n    ref: dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DropdownWrapper, {\n    isMobile: isMobile,\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ConnectDropdown, {\n    openOnHover: !isMobile,\n    show: isMobile ? isOpen : undefined,\n    trigger: /*#__PURE__*/React.createElement(FilledButton, {\n      marginLeft: \"10px\",\n      width: buttonWidth,\n      height: \"44px\",\n      onClick: function onClick() {\n        setIsOpen(!isOpen); // only for mobile\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, lang.providers.connect_wallet, /*#__PURE__*/React.createElement(CaratDown, {\n      className: \"arrow_down\",\n      style: {\n        marginTop: '2px',\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItems, {\n    className: \"\".concat(mainWalletsCount >= otherWallets.length ? 'larger' : 'smaller', \" \").concat(showMain ? 'show' : 'hide'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BrowserProviderItem, {\n    onClick: connectBrowserWallet,\n    disabled: !makerAuthenticated,\n    provider: providerName,\n    key: \"browser-provider-wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }), mainWallets.map(function (wallet, index) {\n    return /*#__PURE__*/React.createElement(BrowserView, {\n      key: index,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, wallet);\n  }), /*#__PURE__*/React.createElement(BrowserView, {\n    key: \"see-more-wallets-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    onClick: function onClick() {\n      return setShowMain(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 17\n    }\n  }, lang.providers.more_wallets, \" (\".concat(otherWallets.length, \")\")))), /*#__PURE__*/React.createElement(BrowserView, {\n    style: {\n      position: 'static'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItems, {\n    className: \"\".concat(otherWallets.length > mainWalletsCount ? 'larger' : 'smaller', \" \").concat(showMain ? 'hide' : 'show'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    key: \"see-main-wallets-link\",\n    onClick: function onClick() {\n      return setShowMain(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, lang.providers.main_wallets, \" (\".concat(mainWalletsCount, \")\")), otherWallets))))));\n}\n\n__signature__(AccountSelection, \"useRef{dropdown}\\nuseState{[showMain, setShowMain](true)}\\nuseState{[isOpen, setIsOpen](false)}\\nuseEffect{}\\nuseMaker{{\\n    maker,\\n    authenticated: makerAuthenticated,\\n    connectBrowserProvider,\\n    connectToProviderOfType\\n  }}\\nuseCallback{onAccountChosen}\\nuseTrezor{{ connectTrezorWallet }}\\nuseDcent{{ connectDcentWallet }}\\nuseLedger{{ connectLedgerWallet }}\", function () {\n  return [useMaker, useTrezor, useDcent, useLedger];\n});\n\nvar _default = hot(AccountSelection);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ConnectDropdownStyle, \"ConnectDropdownStyle\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(ConnectDropdown, \"ConnectDropdown\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(DropdownItems, \"DropdownItems\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(DropdownWrapper, \"DropdownWrapper\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(IconBox, \"IconBox\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(Item, \"Item\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(IconItemStyle, \"IconItemStyle\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(IconItem, \"IconItem\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(BrowserProviderItem, \"BrowserProviderItem\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(NavItem, \"NavItem\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(AccountSelection, \"AccountSelection\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountSelection.js"],"names":["React","useCallback","useState","useEffect","useRef","styled","hot","Box","Text","Flex","lang","mixpanelIdentify","FilledButton","getWebClientProviderName","useMaker","useLedger","useTrezor","useDcent","useLanguage","useBrowserIcon","AccountTypes","BrowserView","isMobile","ConnectDropdownStyle","div","props","openOnHover","ConnectDropdown","trigger","show","children","DropdownItems","DropdownWrapper","isOpen","IconBox","size","Item","IconItemStyle","IconItem","icon","iconSize","BrowserProviderItem","provider","providers","NavItem","theme","fontSizes","s","AccountSelection","buttonWidth","dropdown","showMain","setShowMain","setIsOpen","handleDocumentClick","e","current","contains","target","document","addEventListener","removeEventListener","providerName","maker","makerAuthenticated","authenticated","connectBrowserProvider","connectToProviderOfType","onAccountChosen","type","address","useAccountWithAddress","connectTrezorWallet","connectDcentWallet","connectLedgerWallet","connectBrowserWallet","connectedAddress","window","alert","walletLink","WALLETLINK","landing_page","wallet_link","walletConnect","WALLETCONNECT","width","wallet_connect","ledger","ledger_nano","trezor","dcent","mainWallets","otherWallets","mainWalletsCount","length","undefined","connect_wallet","marginTop","marginLeft","map","wallet","index","more_wallets","position","main_wallets"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { hot } from 'react-hot-loader/root';\nimport { Box, Text, Flex } from '@makerdao/ui-components-core';\nimport lang from 'languages';\nimport { mixpanelIdentify } from 'utils/analytics';\n\nimport { FilledButton } from 'components/Marketing';\n\nimport { getWebClientProviderName } from 'utils/web3';\nimport useMaker from 'hooks/useMaker';\nimport { useLedger, useTrezor, useDcent } from 'hooks/useHardwareWallet';\nimport useLanguage from 'hooks/useLanguage';\nimport useBrowserIcon from 'hooks/useBrowserIcon';\n\nimport { ReactComponent as TrezorLogo } from 'images/trezor.svg';\nimport { ReactComponent as LedgerLogo } from 'images/ledger.svg';\nimport { ReactComponent as DcentLogo } from 'images/dcent.svg';\nimport { ReactComponent as WalletConnectLogo } from 'images/wallet-connect.svg';\nimport { ReactComponent as WalletLinkLogo } from 'images/wallet-link.svg';\nimport { ReactComponent as CaratDown } from 'images/carat-down-filled.svg';\nimport { AccountTypes } from 'utils/constants';\nimport { BrowserView, isMobile } from 'react-device-detect';\n\nconst ConnectDropdownStyle = styled.div`\n  .dropdown-trigger-wrapper {\n    margin: -8px;\n    padding: 8px;\n  }\n\n  .dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    transition: opacity 0.2s;\n    pointer-events: none;\n    opacity: 0;\n    z-index: 200;\n  }\n\n  ${props => (props.openOnHover ? ':hover, :active' : '&.show')} {\n    .dropdown-menu {\n      opacity: 1;\n      pointer-events: auto;\n    }\n  }\n`;\n\nconst ConnectDropdown = ({ trigger, show, children, ...props }) => {\n  return (\n    <ConnectDropdownStyle className={show ? 'show' : ''} {...props}>\n      <div className=\"dropdown-trigger-wrapper\">{trigger}</div>\n      <div className=\"dropdown-menu\">{children}</div>\n    </ConnectDropdownStyle>\n  );\n};\n\nconst DropdownItems = styled(Box)`\n  margin-bottom: 8px;\n  min-width: 270px;\n  background: #222b3f;\n  box-sizing: border-box;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n  padding: 10px 7px 12px;\n  position: relative;\n\n  & > * {\n    margin-top: 8px;\n    margin-bottom: 8px;\n  }\n`;\n\nconst DropdownWrapper = styled(Box)`\n  ${props =>\n    props.isMobile\n      ? `\n    ${FilledButton}, ${FilledButton}:hover {\n       background-color: ${props.isOpen ? '#00C4C4' : '#222B3F'};\n       color:${props.isOpen ? '#fff' : '#00C4C4'};\n    }\n  `\n      : `\n    :hover {\n      ${FilledButton} {\n        background-color: #191E2B;\n        color: #00C4C4; \n        \n      }\n    }\n  \n  `}\n\n  ${DropdownItems} {\n    &.smaller {\n      position: absolute;\n      top: 0;\n    }\n    &.show {\n      opacity: 1;\n      z-index: 1;\n    }\n    &.hide {\n      opacity: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n  }\n`;\n\nconst IconBox = styled(Box)`\n  display: flex;\n  align-items: center;\n  &,\n  svg,\n  img {\n    width: ${props => props.size};\n    height: ${props => props.size};\n  }\n`;\n\nconst Item = styled(Box)`\n  width: 255px;\n  padding: 12px 26px;\n  cursor: pointer;\n`;\n\nconst IconItemStyle = styled(Item)`\n  .text {\n    margin-left: 23px;\n  }\n\n  :hover .text {\n    opacity: 0.6;\n  }\n`;\n\nconst IconItem = ({ icon, iconSize = '26.67px', children, ...props }) => {\n  return (\n    <IconItemStyle {...props}>\n      <Flex alignItems=\"center\" justifyContent=\"flex-start\" height=\"29px\">\n        <IconBox size={iconSize}>{icon}</IconBox>\n        <Text className=\"text\">{children}</Text>\n      </Flex>\n    </IconItemStyle>\n  );\n};\n\nfunction BrowserProviderItem({ provider, ...props }) {\n  const { lang } = useLanguage();\n  const icon = useBrowserIcon(provider);\n  return (\n    <IconItem icon={icon} {...props}>\n      {lang.providers[provider] || 'Active Wallet'}\n    </IconItem>\n  );\n}\n\nconst NavItem = styled(Item)`\n  font-weight: bold;\n  font-size: ${props => props.theme.fontSizes.s};\n  letter-spacing: 0.5px;\n  color: #00C4C4;\n  text-align: left;\n  padding: 9px 26px;\n\n  :hover {\n    opacity: 0.6;\n  }\n`;\n\nfunction AccountSelection({ buttonWidth = '240px', ...props }) {\n  const dropdown = useRef(null);\n  const [showMain, setShowMain] = useState(true);\n  const [isOpen, setIsOpen] = useState(false); // only for mobile\n\n  useEffect(() => {\n    function handleDocumentClick(e) {\n      if (!dropdown.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    }\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  });\n\n  const providerName = getWebClientProviderName();\n  const {\n    maker,\n    authenticated: makerAuthenticated,\n    connectBrowserProvider,\n    connectToProviderOfType\n  } = useMaker();\n\n  const onAccountChosen = useCallback(\n    async ({ address }, type) => {\n      maker.useAccountWithAddress(address);\n      mixpanelIdentify(address, type);\n    },\n    [maker]\n  );\n  const { connectTrezorWallet } = useTrezor({ onAccountChosen });\n  const { connectDcentWallet } = useDcent({ onAccountChosen });\n  const { connectLedgerWallet } = useLedger({ onAccountChosen });\n\n  async function connectBrowserWallet() {\n    try {\n      const connectedAddress = await connectBrowserProvider();\n      onAccountChosen({ address: connectedAddress }, providerName);\n    } catch (err) {\n      window.alert(err);\n    }\n  }\n\n  // wallet items\n  const walletLink = (\n    <IconItem\n      onClick={() => connectToProviderOfType(AccountTypes.WALLETLINK)}\n      disabled={!makerAuthenticated}\n      icon={<WalletLinkLogo />}\n      key=\"wallet-link\"\n    >\n      {lang.landing_page.wallet_link}\n    </IconItem>\n  );\n\n  const walletConnect = (\n    <IconItem\n      onClick={() => connectToProviderOfType(AccountTypes.WALLETCONNECT)}\n      icon={<WalletConnectLogo style={{ width: '28px' }} />}\n      key=\"wallet-connect\"\n    >\n      {lang.landing_page.wallet_connect}\n    </IconItem>\n  );\n\n  const ledger = (\n    <IconItem\n      onClick={connectLedgerWallet}\n      disabled={!makerAuthenticated}\n      icon={<LedgerLogo />}\n      iconSize=\"27px\"\n      key=\"ledger\"\n    >\n      {lang.providers.ledger_nano}\n    </IconItem>\n  );\n\n  const trezor = (\n    <IconItem\n      onClick={connectTrezorWallet}\n      disabled={!makerAuthenticated}\n      icon={<TrezorLogo />}\n      key=\"trezor\"\n    >\n      {lang.providers.trezor}\n    </IconItem>\n  );\n\n  const dcent = (\n    <IconItem\n      onClick={connectDcentWallet}\n      disabled={!makerAuthenticated}\n      icon={<DcentLogo />}\n      key=\"dcent\"\n    >\n      {lang.providers.dcent}\n    </IconItem>\n  );\n\n  const mainWallets = [ledger, trezor];\n  const otherWallets = [walletLink, walletConnect, dcent];\n\n  const mainWalletsCount = mainWallets.length + 1; // Add the browser provider wallet\n\n  return (\n    <Box width={buttonWidth} {...props} ref={dropdown}>\n      <DropdownWrapper isMobile={isMobile} isOpen={isOpen}>\n        <ConnectDropdown\n          openOnHover={!isMobile}\n          show={isMobile ? isOpen : undefined}\n          trigger={\n            <FilledButton\n              marginLeft=\"10px\"\n              width={buttonWidth}\n              height=\"44px\"\n              onClick={() => {\n                setIsOpen(!isOpen); // only for mobile\n              }}\n            >\n              {lang.providers.connect_wallet}\n              <CaratDown\n                className=\"arrow_down\"\n                style={{ marginTop: '2px', marginLeft: '10px' }}\n              />\n            </FilledButton>\n          }\n        >\n          <div>\n            <DropdownItems\n              className={`${\n                mainWalletsCount >= otherWallets.length ? 'larger' : 'smaller'\n              } ${showMain ? 'show' : 'hide'}`}\n            >\n              <BrowserProviderItem\n                onClick={connectBrowserWallet}\n                disabled={!makerAuthenticated}\n                provider={providerName}\n                key=\"browser-provider-wallet\"\n              />\n              {mainWallets.map((wallet, index) => (\n                <BrowserView key={index}>{wallet}</BrowserView>\n              ))}\n              <BrowserView key=\"see-more-wallets-link\">\n                <NavItem onClick={() => setShowMain(false)}>\n                  {lang.providers.more_wallets}\n                  {` (${otherWallets.length})`}\n                </NavItem>\n              </BrowserView>\n            </DropdownItems>\n            <BrowserView style={{ position: 'static' }}>\n              <DropdownItems\n                className={`${\n                  otherWallets.length > mainWalletsCount ? 'larger' : 'smaller'\n                } ${showMain ? 'hide' : 'show'}`}\n              >\n                <NavItem\n                  key=\"see-main-wallets-link\"\n                  onClick={() => setShowMain(true)}\n                >\n                  {lang.providers.main_wallets}\n                  {` (${mainWalletsCount})`}\n                </NavItem>\n                {otherWallets}\n              </DropdownItems>\n            </BrowserView>\n          </div>\n        </ConnectDropdown>\n      </DropdownWrapper>\n    </Box>\n  );\n}\n\nexport default hot(AccountSelection);\n"]},"metadata":{},"sourceType":"module"}