{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Text, Input, Grid, Link, Button } from '@makerdao/ui-components-core';\nimport { ReactComponent as PasteIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../images/paste.svg\";\nimport styled from 'styled-components';\nimport usePrevious from '../../hooks/usePrevious';\nimport useMaker from '../../hooks/useMaker';\nimport useWalletBalances from '../../hooks/useWalletBalances';\nimport useValidatedInput from '../../hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport BigNumber from 'bignumber.js';\nimport SetMax from '../SetMax';\nimport { isValidAddressString, calculateGasCost } from '../../utils/ethereum';\nimport { getColor } from 'styles/theme';\nvar PasteLink = styled(Link).withConfig({\n  displayName: \"Send__PasteLink\",\n  componentId: \"opdxvv-0\"\n})([\"\"]);\nvar StyledPaste = styled(PasteIcon).withConfig({\n  displayName: \"Send__StyledPaste\",\n  componentId: \"opdxvv-1\"\n})([\"margin-left:4px;path{fill:\", \";}\", \":hover &{path{fill:\", \";}}\"], getColor('greyText'), PasteLink, getColor('greyText'));\nvar ZERO = BigNumber(0);\n\nvar Send = function Send(_ref) {\n  var token = _ref.token,\n      trackBtnClick = _ref.trackBtnClick,\n      reset = _ref.reset;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker,\n      account = _useMaker.account;\n\n  var balances = useWalletBalances();\n  var balance = balances[token] ? balances[token] : ZERO;\n\n  var _ref2 = account || {},\n      address = _ref2.address;\n\n  var _useState = useState(ZERO),\n      _useState2 = _slicedToArray(_useState, 2),\n      gasCost = _useState2[0],\n      setGasCost = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      destAddress = _useState4[0],\n      setDestAddress = _useState4[1];\n\n  var minAmount = token === 'ETH' ? gasCost : ZERO;\n  var maxAmount = token === 'ETH' ? balance.minus(gasCost) : balance;\n  var displayToken = token;\n\n  var inRangeAndEth = function inRangeAndEth(_val) {\n    return token === 'ETH' && _val.gt(ZERO) && _val.lte(balance);\n  };\n\n  var mapBN = function mapBN(cb) {\n    return function (val) {\n      return cb(BigNumber(val));\n    };\n  };\n\n  var _useValidatedInput = useValidatedInput('', {\n    custom: {\n      invalid: mapBN(function (val) {\n        return val.isNaN();\n      }),\n      minEth: mapBN(function (val) {\n        return gasCost.gt(balance) && inRangeAndEth(val);\n      }),\n      min: mapBN(function (val) {\n        return val.lt(ZERO);\n      }),\n      maxEth: mapBN(function (val) {\n        return val.plus(gasCost).gt(balance) && inRangeAndEth(val);\n      }),\n      max: mapBN(function (val) {\n        return val.gt(balance);\n      })\n    }\n  }, {\n    invalid: function invalid(_) {\n      return lang.action_sidebar.invalid_input;\n    },\n    minEth: function minEth(_) {\n      return lang.formatString(lang.action_sidebar.invalid_min_gas, \"\".concat(gasCost, \" \").concat(displayToken));\n    },\n    min: function min(_) {\n      return lang.formatString(lang.action_sidebar.invalid_min_amount, displayToken);\n    },\n    maxEth: function maxEth(_) {\n      return lang.formatString(lang.action_sidebar.invalid_max_gas, \"\".concat(gasCost.plus(BigNumber(amount)), \" \").concat(displayToken));\n    },\n    max: function max(_) {\n      return lang.action_sidebar.invalid_max_amount;\n    }\n  }),\n      _useValidatedInput2 = _slicedToArray(_useValidatedInput, 4),\n      amount = _useValidatedInput2[0],\n      setAmount = _useValidatedInput2[1],\n      onAmountChange = _useValidatedInput2[2],\n      amountErrors = _useValidatedInput2[3];\n\n  var prevToken = usePrevious(token);\n  var prevAddress = usePrevious(address);\n  var isCancelled = false;\n\n  var updateGasCost = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var gasCost;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return calculateGasCost(maker);\n\n            case 2:\n              gasCost = _context.sent;\n\n              if (!isCancelled) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              setGasCost(gasCost);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateGasCost() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (prevToken !== token) {\n      setAmount('');\n      setGasCost(ZERO);\n      setDestAddress('');\n    }\n\n    if (prevAddress && prevAddress !== address) reset();\n    if (isCancelled) return;\n    updateGasCost(); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    return function () {\n      return isCancelled = true;\n    };\n  }, [token, address, prevToken, prevAddress]);\n\n  var setMax = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return updateGasCost();\n\n            case 2:\n              setAmount(maxAmount);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function setMax() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var paste = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var copiedAddress;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return navigator.clipboard.readText();\n\n            case 2:\n              copiedAddress = _context3.sent;\n              setDestAddress(copiedAddress);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function paste() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var bnAmount = BigNumber(amount);\n  var amountIsValid = bnAmount.gte(minAmount) && bnAmount.lte(maxAmount);\n  var destAddressIsValid = destAddress === '' || isValidAddressString(destAddress);\n  var destAddressFailureMessage = destAddressIsValid ? '' : lang.action_sidebar.invalid_address;\n  var valid = amount !== '' && destAddress !== '' && amountIsValid && destAddressIsValid;\n  var showSetMax = token !== 'ETH' || balance.gte(gasCost);\n\n  var transfer = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              maker.getToken(token).transfer(destAddress, amount);\n              reset();\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function transfer() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var PasteAddress = function PasteAddress(props) {\n    return /*#__PURE__*/React.createElement(PasteLink, Object.assign({\n      fontWeight: \"medium\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      gridTemplateColumns: \"auto 1fr\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, lang.paste, /*#__PURE__*/React.createElement(StyledPaste, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, lang.formatString(lang.action_sidebar.send_title, displayToken)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '16px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.action_sidebar.send_description, displayToken))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      color: getColor('whiteText')\n    },\n    type: \"number\",\n    min: \"0\",\n    value: amount,\n    onChange: onAmountChange,\n    onFocus: function onFocus(e) {\n      var tmp = e.target.value;\n      e.target.value = '';\n      e.target.value = tmp;\n    },\n    placeholder: \"0.00 \".concat(displayToken),\n    after: /*#__PURE__*/React.createElement(React.Fragment, null, showSetMax && /*#__PURE__*/React.createElement(SetMax, {\n      onClick: setMax,\n      style: {\n        color: getColor('greyText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 35\n      }\n    })),\n    failureMessage: amountErrors,\n    \"data-testid\": \"send-amount-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: \"auto 1fr\",\n    gridColumnGap: \"s\",\n    alignItems: \"end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '12px',\n      color: getColor('greyText')\n    },\n    fontWeight: \"semibold\",\n    t: \"smallCaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, lang.action_sidebar.your_balance), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, balance && balance.toFixed(10) || '--', \" \", displayToken)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '14px',\n      color: getColor('greyText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.action_sidebar.dest_address, displayToken))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input_border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      color: getColor('whiteText'),\n      borderColor: getColor('boder')\n    },\n    type: \"text\",\n    value: destAddress,\n    onChange: function onChange(evt) {\n      return setDestAddress(evt.target.value);\n    },\n    onFocus: function onFocus(e) {\n      var tmp = e.target.value;\n      e.target.value = '';\n      e.target.value = tmp;\n    },\n    placeholder: \"0x...\",\n    after: /*#__PURE__*/React.createElement(PasteAddress, {\n      onClick: paste,\n      style: {\n        color: getColor('greyText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 18\n      }\n    }),\n    failureMessage: destAddressFailureMessage,\n    \"data-testid\": \"send-address-input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    gridTemplateColumns: \"1fr 1fr\",\n    gridColumnGap: \"s\",\n    mt: \"m\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    onClick: function onClick() {\n      if (trackBtnClick) trackBtnClick('WalletSend', {\n        collateral: displayToken,\n        amount: amount\n      });\n      transfer();\n    },\n    disabled: !valid,\n    \"data-testid\": \"send-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, lang.actions.send), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    variant: \"secondary-outline\",\n    onClick: reset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, lang.cancel))));\n};\n\n__signature__(Send, \"useLanguage{{ lang }}\\nuseMaker{{ maker, account }}\\nuseWalletBalances{balances}\\nuseState{[gasCost, setGasCost](ZERO)}\\nuseState{[destAddress, setDestAddress]('')}\\nuseValidatedInput{[amount, setAmount, onAmountChange, amountErrors]}\\nusePrevious{prevToken}\\nusePrevious{prevAddress}\\nuseEffect{}\", function () {\n  return [useLanguage, useMaker, useWalletBalances, useValidatedInput, usePrevious, usePrevious];\n});\n\nvar _default = Send;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(PasteLink, \"PasteLink\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js\");\n  reactHotLoader.register(StyledPaste, \"StyledPaste\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js\");\n  reactHotLoader.register(ZERO, \"ZERO\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js\");\n  reactHotLoader.register(Send, \"Send\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/Sidebars/Send.js"],"names":["React","useState","useEffect","Text","Input","Grid","Link","Button","styled","usePrevious","useMaker","useWalletBalances","useValidatedInput","useLanguage","BigNumber","SetMax","isValidAddressString","calculateGasCost","getColor","PasteLink","StyledPaste","PasteIcon","ZERO","Send","token","trackBtnClick","reset","lang","maker","account","balances","balance","address","gasCost","setGasCost","destAddress","setDestAddress","minAmount","maxAmount","minus","displayToken","inRangeAndEth","_val","gt","lte","mapBN","cb","val","custom","invalid","isNaN","minEth","min","lt","maxEth","plus","max","_","action_sidebar","invalid_input","formatString","invalid_min_gas","invalid_min_amount","invalid_max_gas","amount","invalid_max_amount","setAmount","onAmountChange","amountErrors","prevToken","prevAddress","isCancelled","updateGasCost","setMax","paste","navigator","clipboard","readText","copiedAddress","bnAmount","amountIsValid","gte","destAddressIsValid","destAddressFailureMessage","invalid_address","valid","showSetMax","transfer","getToken","PasteAddress","props","fontSize","color","send_title","send_description","e","tmp","target","value","your_balance","toFixed","dest_address","borderColor","evt","collateral","actions","send","cancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, Input, Grid, Link, Button } from '@makerdao/ui-components-core';\nimport { ReactComponent as PasteIcon } from '../../images/paste.svg';\nimport styled from 'styled-components';\nimport usePrevious from '../../hooks/usePrevious';\nimport useMaker from '../../hooks/useMaker';\nimport useWalletBalances from '../../hooks/useWalletBalances';\nimport useValidatedInput from '../../hooks/useValidatedInput';\nimport useLanguage from 'hooks/useLanguage';\nimport BigNumber from 'bignumber.js';\nimport SetMax from '../SetMax';\nimport { isValidAddressString, calculateGasCost } from '../../utils/ethereum';\nimport { getColor } from 'styles/theme';\n\nconst PasteLink = styled(Link)``;\n\nconst StyledPaste = styled(PasteIcon)`\n  margin-left: 4px;\n  path {\n    fill: ${getColor('greyText')};\n  }\n  ${PasteLink}:hover & {\n    path {\n      fill: ${getColor('greyText')};\n    }\n  }\n`;\n\n\nconst ZERO = BigNumber(0);\n\nconst Send = ({ token, trackBtnClick, reset }) => {\n  const { lang } = useLanguage();\n  const { maker, account } = useMaker();\n\n  const balances = useWalletBalances();\n  const balance = balances[token] ? balances[token] : ZERO;\n  const { address } = account || {};\n  const [gasCost, setGasCost] = useState(ZERO);\n  const [destAddress, setDestAddress] = useState('');\n\n  const minAmount = token === 'ETH' ? gasCost : ZERO;\n  const maxAmount = token === 'ETH' ? balance.minus(gasCost) : balance;\n\n  const displayToken = token;\n\n  const inRangeAndEth = _val =>\n    token === 'ETH' && _val.gt(ZERO) && _val.lte(balance);\n\n  const mapBN = cb => val => cb(BigNumber(val));\n\n  const [amount, setAmount, onAmountChange, amountErrors] = useValidatedInput(\n    '',\n    {\n      custom: {\n        invalid: mapBN(val => val.isNaN()),\n        minEth: mapBN(val => gasCost.gt(balance) && inRangeAndEth(val)),\n        min: mapBN(val => val.lt(ZERO)),\n        maxEth: mapBN(\n          val => val.plus(gasCost).gt(balance) && inRangeAndEth(val)\n        ),\n        max: mapBN(val => val.gt(balance))\n      }\n    },\n    {\n      invalid: _ => lang.action_sidebar.invalid_input,\n      minEth: _ =>\n        lang.formatString(\n          lang.action_sidebar.invalid_min_gas,\n          `${gasCost} ${displayToken}`\n        ),\n      min: _ =>\n        lang.formatString(lang.action_sidebar.invalid_min_amount, displayToken),\n      maxEth: _ =>\n        lang.formatString(\n          lang.action_sidebar.invalid_max_gas,\n          `${gasCost.plus(BigNumber(amount))} ${displayToken}`\n        ),\n      max: _ => lang.action_sidebar.invalid_max_amount\n    }\n  );\n\n  const prevToken = usePrevious(token);\n  const prevAddress = usePrevious(address);\n\n  let isCancelled = false;\n  const updateGasCost = async () => {\n    const gasCost = await calculateGasCost(maker);\n    if (isCancelled) return;\n    setGasCost(gasCost);\n  };\n\n  useEffect(() => {\n    if (prevToken !== token) {\n      setAmount('');\n      setGasCost(ZERO);\n      setDestAddress('');\n    }\n    if (prevAddress && prevAddress !== address) reset();\n    if (isCancelled) return;\n    updateGasCost();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return () => (isCancelled = true);\n  }, [token, address, prevToken, prevAddress]);\n\n  const setMax = async () => {\n    await updateGasCost();\n    setAmount(maxAmount);\n  };\n\n  const paste = async () => {\n    const copiedAddress = await navigator.clipboard.readText();\n    setDestAddress(copiedAddress);\n  };\n\n  const bnAmount = BigNumber(amount);\n  const amountIsValid = bnAmount.gte(minAmount) && bnAmount.lte(maxAmount);\n\n  const destAddressIsValid =\n    destAddress === '' || isValidAddressString(destAddress);\n  const destAddressFailureMessage = destAddressIsValid\n    ? ''\n    : lang.action_sidebar.invalid_address;\n\n  const valid =\n    amount !== '' && destAddress !== '' && amountIsValid && destAddressIsValid;\n\n  const showSetMax = token !== 'ETH' || balance.gte(gasCost);\n\n  const transfer = async () => {\n    maker.getToken(token).transfer(destAddress, amount);\n    reset();\n  };\n\n  const PasteAddress = props => (\n    <PasteLink fontWeight=\"medium\" {...props}>\n      <Grid gridTemplateColumns=\"auto 1fr\">\n        {lang.paste}\n        <StyledPaste />\n      </Grid>\n    </PasteLink>\n  );\n\n  return (\n    <Grid gridRowGap=\"m\">\n      <Grid gridRowGap=\"s\">\n        <Text style={{ fontSize: '20px', color: getColor('whiteText') }}>\n          {lang.formatString(lang.action_sidebar.send_title, displayToken)}\n        </Text>\n\n        <p>\n          <Text style={{ fontSize: '16px', color: getColor('greyText') }}>\n            {lang.formatString(\n              lang.action_sidebar.send_description,\n              displayToken\n            )}\n          </Text>\n        </p>\n        <div className=\"input_border\">\n        <Input\n          style={{ color: getColor('whiteText')}}\n          type=\"number\"\n          min=\"0\"\n          value={amount}\n          onChange={onAmountChange}\n          onFocus={e => {\n            const tmp = e.target.value;\n            e.target.value = '';\n            e.target.value = tmp;\n          }}\n          placeholder={`0.00 ${displayToken}`}\n          after={<>{showSetMax && <SetMax onClick={setMax} style={{ color: getColor('greyText') }} />}</>}\n          failureMessage={amountErrors}\n          data-testid=\"send-amount-input\"\n        />\n        </div>\n        <Grid gridTemplateColumns=\"auto 1fr\" gridColumnGap=\"s\" alignItems=\"end\">\n          <Text\n            style={{ fontSize: '12px', color: getColor('greyText') }}\n            fontWeight=\"semibold\"\n            t=\"smallCaps\"\n          >\n            {lang.action_sidebar.your_balance}\n          </Text>\n          <Text style={{ color: getColor('whiteText') }}>\n            {(balance && balance.toFixed(10)) || '--'} {displayToken}\n          </Text>\n        </Grid>\n\n        <p>\n          <Text style={{ fontSize: '14px', color: getColor('greyText') }}>\n            {lang.formatString(lang.action_sidebar.dest_address, displayToken)}\n          </Text>\n        </p>\n        <div className=\"input_border\">\n        <Input\n          style={{ color: getColor('whiteText'), borderColor: getColor('boder'), }}\n          type=\"text\"\n          value={destAddress}\n          onChange={evt => setDestAddress(evt.target.value)}\n          onFocus={e => {\n            const tmp = e.target.value;\n            e.target.value = '';\n            e.target.value = tmp;\n          }}\n          placeholder=\"0x...\"\n          after={<PasteAddress onClick={paste} style={{ color: getColor('greyText') }} />}\n          failureMessage={destAddressFailureMessage}\n          data-testid=\"send-address-input\"\n        />\n        </div>\n        <Grid gridTemplateColumns=\"1fr 1fr\" gridColumnGap=\"s\" mt=\"m\">\n          <Button className=\"btn\"\n            onClick={() => {\n              if (trackBtnClick)\n                trackBtnClick('WalletSend', {\n                  collateral: displayToken,\n                  amount\n                });\n              transfer();\n            }}\n            disabled={!valid}\n            data-testid=\"send-button\"\n          >\n            {lang.actions.send}\n          </Button>\n          <Button className=\"btn\" variant=\"secondary-outline\" onClick={reset}>\n            {lang.cancel}\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Send;\n"]},"metadata":{},"sourceType":"module"}