{"ast":null,"code":"import _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport round from 'lodash/round';\nimport BigNumber from 'bignumber.js';\nimport lang from 'languages';\nimport { Currency } from '@makerdao/currency';\nimport { decimalRules } from '../styles/constants';\nvar short = decimalRules.short,\n    medium = decimalRules.medium;\nexport function formatCollateralizationRatio(ratio) {\n  if (ratio === Infinity) return lang.cdp_page.not_applicable;\n  if (isNaN(ratio)) return '---';\n  if (ratio < 0) ratio = 0;\n  return \"\".concat(ratio.toFixed(2), \"%\");\n}\nexport function formatLiquidationPrice(price, symbol) {\n  if (price < 0) price = 0;\n  return \"\".concat(round(price, 2).toLocaleString(), \" \").concat(symbol, \"/USD\");\n}\n\nfunction getSeparator(locale, separatorType) {\n  var _numFormat$formatToPa;\n\n  var numberWithGroupAndDecimalSeparator = 1000.1;\n  var numFormat = Intl.NumberFormat(locale);\n  return numFormat.formatToParts ? (_numFormat$formatToPa = numFormat.formatToParts(numberWithGroupAndDecimalSeparator).find(function (part) {\n    return part.type === separatorType;\n  })) === null || _numFormat$formatToPa === void 0 ? void 0 : _numFormat$formatToPa.value : null;\n}\n\nexport function prettifyCurrency(locale) {\n  var num = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var decimalPlaces = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (num === null) return null;\n  if (decimalPlaces && num < 1) decimalPlaces = 4;\n  return new BigNumber(num).toFormat(decimalPlaces, BigNumber.ROUND_CEIL, {\n    decimalSeparator: getSeparator(locale, 'decimal') || '.',\n    groupSeparator: getSeparator(locale, 'group'),\n    groupSize: 3\n  });\n}\nexport function prettifyNumber() {\n  var _num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var truncate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var decimalPlaces = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n  var keepSymbol = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  if (_num === null) return null;\n  var symbol = '';\n  if (_num.symbol !== undefined) symbol += ' ' + cleanSymbol(_num.symbol);\n  var num = parseFloat(_num.toString());\n  if (num > Number.MAX_SAFE_INTEGER) return 'NUMBER TOO BIG';\n  var formattedNumber;\n\n  if (truncate) {\n    if (num > 999999999999) formattedNumber = (num / 1000000).toFixed(2) + 'T';\n    if (num > 999999999) formattedNumber = (num / 1000000).toFixed(2) + 'B';\n    if (num > 999999) formattedNumber = (num / 1000000).toFixed(2) + 'M';else if (num > 999) formattedNumber = (num / 1000).toFixed(2) + 'K';else if (num < 1) {\n      formattedNumber = num === 0 ? num.toFixed(2) : num.toFixed(4);\n    } else formattedNumber = num.toFixed(decimalPlaces);\n  } else {\n    formattedNumber = num.toLocaleString();\n  }\n\n  return keepSymbol ? formattedNumber + symbol : formattedNumber;\n}\nexport function prettifyFloat(num) {\n  var decimalPlaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (!num && num !== 0) return 'NaN';\n\n  var _num$toString$split = num.toString().split('.'),\n      _num$toString$split2 = _slicedToArray(_num$toString$split, 2),\n      decimalPortion = _num$toString$split2[1];\n\n  var decimalPlacesInNumber = decimalPortion ? decimalPortion.length : 0;\n  return decimalPlacesInNumber > decimalPlaces ? \"\".concat(num.toFixed(decimalPlaces), \"...\") : num;\n}\nexport function cutMiddle() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var left = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var right = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n  if (str.length <= left + right) return str;\n  return \"\".concat(str.slice(0, left), \"...\").concat(str.slice(-right));\n}\nexport var copyToClipboard = function copyToClipboard(string) {\n  var textArea = document.createElement('textarea');\n  textArea.value = string;\n  document.body.appendChild(textArea);\n  textArea.select();\n  document.execCommand('Copy');\n  textArea.remove();\n};\nexport function firstLetterLowercase(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\nexport function cleanSymbol(s) {\n  if (s === 'DSR-USDFL') return 'USDFL';\n  return s;\n}\nexport var shortenAddress = function shortenAddress(address) {\n  return \"\".concat(address.slice(0, 6), \"...\").concat(address.slice(-4));\n};\nexport function formatEventDescription(lang, e) {\n  var interfaceLocale = lang.getInterfaceLanguage();\n\n  switch (e.type) {\n    case 'OPEN':\n      return lang.formatString(lang.event_history.open, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 57\n        }\n      }, e.id));\n\n    case 'DEPOSIT':\n      return lang.formatString(lang.event_history.deposit, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)), e.gem);\n\n    case 'RECLAIM':\n      return lang.formatString(lang.event_history.reclaim, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)), e.gem);\n\n    case 'DSR_DEPOSIT':\n      return lang.formatString(lang.event_history.dsr_deposit, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)), e.gem);\n\n    case 'DSR_WITHDRAW':\n      return lang.formatString(lang.event_history.dsr_withdraw, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)), e.gem);\n\n    case 'WITHDRAW':\n      return lang.formatString(lang.event_history.withdraw, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)), e.gem);\n\n    case 'GENERATE':\n      return lang.formatString(lang.event_history.generate, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)));\n\n    case 'PAY_BACK':\n      return lang.formatString(lang.event_history.pay_back, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)));\n\n    case 'GIVE':\n      return lang.formatString(lang.event_history.give, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, shortenAddress(e.newOwner)), /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, shortenAddress(e.prevOwner)));\n\n    case 'MIGRATE':\n      return lang.formatString(lang.event_history.migrate);\n\n    case 'BITE':\n      return lang.formatString(lang.event_history.bite, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, prettifyCurrency(interfaceLocale, e.amount, 2)), e.gem);\n\n    default:\n      return '?';\n  }\n}\nexport function formatDate(d) {\n  return d.toLocaleDateString(lang.getInterfaceLanguage(), {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  }) + ', ' + d.toLocaleTimeString(lang.getInterfaceLanguage());\n} // ensures a result < amount.toFixed(d)\n\nexport function safeToFixed(amount, digits) {\n  if (typeof amount === 'string') amount = parseFloat(amount);\n  var s = amount.toFixed(digits);\n  return s.substring(0, s.length - 1);\n}\nexport function formatPrecision(amount) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  return amount < 1 ? 4 : precision;\n}\nexport var formatCurrencyValue = function formatCurrencyValue(_ref) {\n  var value = _ref.value,\n      _ref$precision = _ref.precision,\n      precision = _ref$precision === void 0 ? short : _ref$precision,\n      _ref$percentage = _ref.percentage,\n      percentage = _ref$percentage === void 0 ? false : _ref$percentage,\n      _ref$integer = _ref.integer,\n      integer = _ref$integer === void 0 ? false : _ref$integer,\n      _ref$infinity = _ref.infinity,\n      infinity = _ref$infinity === void 0 ? 'N/A' : _ref$infinity,\n      _ref$rounding = _ref.rounding,\n      rounding = _ref$rounding === void 0 ? BigNumber.ROUND_DOWN : _ref$rounding;\n  if (value instanceof Currency) value = value.toBigNumber();else if (!BigNumber.isBigNumber(value)) value = BigNumber(value);\n  if (['Infinity', Infinity].includes(value.toFixed(precision))) return infinity;\n  if (percentage) value = value.times(100);\n  if (integer) value = value.integerValue(BigNumber.ROUND_HALF_UP);\n\n  if (value.lt(1) && rounding === BigNumber.ROUND_DOWN) {\n    precision = value.eq(0) ? short : medium;\n  }\n\n  return value.toFixed(precision, rounding);\n};\nexport function formatter(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return formatCurrencyValue(_objectSpread({\n    value: target\n  }, options));\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(short, \"short\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(medium, \"medium\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatCollateralizationRatio, \"formatCollateralizationRatio\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatLiquidationPrice, \"formatLiquidationPrice\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(getSeparator, \"getSeparator\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(prettifyCurrency, \"prettifyCurrency\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(prettifyNumber, \"prettifyNumber\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(prettifyFloat, \"prettifyFloat\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(cutMiddle, \"cutMiddle\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(copyToClipboard, \"copyToClipboard\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(firstLetterLowercase, \"firstLetterLowercase\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(cleanSymbol, \"cleanSymbol\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(shortenAddress, \"shortenAddress\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatEventDescription, \"formatEventDescription\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatDate, \"formatDate\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(safeToFixed, \"safeToFixed\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatPrecision, \"formatPrecision\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatCurrencyValue, \"formatCurrencyValue\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n  reactHotLoader.register(formatter, \"formatter\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/ui.js"],"names":["React","round","BigNumber","lang","Currency","decimalRules","short","medium","formatCollateralizationRatio","ratio","Infinity","cdp_page","not_applicable","isNaN","toFixed","formatLiquidationPrice","price","symbol","toLocaleString","getSeparator","locale","separatorType","numberWithGroupAndDecimalSeparator","numFormat","Intl","NumberFormat","formatToParts","find","part","type","value","prettifyCurrency","num","decimalPlaces","toFormat","ROUND_CEIL","decimalSeparator","groupSeparator","groupSize","prettifyNumber","_num","truncate","keepSymbol","undefined","cleanSymbol","parseFloat","toString","Number","MAX_SAFE_INTEGER","formattedNumber","prettifyFloat","split","decimalPortion","decimalPlacesInNumber","length","cutMiddle","str","left","right","slice","copyToClipboard","string","textArea","document","createElement","body","appendChild","select","execCommand","remove","firstLetterLowercase","charAt","toLowerCase","s","shortenAddress","address","formatEventDescription","e","interfaceLocale","getInterfaceLanguage","formatString","event_history","open","id","deposit","amount","gem","reclaim","dsr_deposit","dsr_withdraw","withdraw","generate","pay_back","give","newOwner","prevOwner","migrate","bite","formatDate","d","toLocaleDateString","year","month","day","toLocaleTimeString","safeToFixed","digits","substring","formatPrecision","precision","formatCurrencyValue","percentage","integer","infinity","rounding","ROUND_DOWN","toBigNumber","isBigNumber","includes","times","integerValue","ROUND_HALF_UP","lt","eq","formatter","target","options"],"mappings":"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","sourcesContent":["import React from 'react';\nimport round from 'lodash/round';\nimport BigNumber from 'bignumber.js';\nimport lang from 'languages';\nimport { Currency } from '@makerdao/currency';\nimport { decimalRules } from '../styles/constants';\nconst { short, medium } = decimalRules;\n\nexport function formatCollateralizationRatio(ratio) {\n  if (ratio === Infinity) return lang.cdp_page.not_applicable;\n  if (isNaN(ratio)) return '---';\n  if (ratio < 0) ratio = 0;\n  return `${ratio.toFixed(2)}%`;\n}\n\nexport function formatLiquidationPrice(price, symbol) {\n  if (price < 0) price = 0;\n  return `${round(price, 2).toLocaleString()} ${symbol}/USD`;\n}\n\nfunction getSeparator(locale, separatorType) {\n  const numberWithGroupAndDecimalSeparator = 1000.1;\n  const numFormat = Intl.NumberFormat(locale);\n  return numFormat.formatToParts\n    ? numFormat\n        .formatToParts(numberWithGroupAndDecimalSeparator)\n        .find(part => part.type === separatorType)?.value\n    : null;\n}\n\nexport function prettifyCurrency(locale, num = null, decimalPlaces = null) {\n  if (num === null) return null;\n  if (decimalPlaces && num < 1) decimalPlaces = 4;\n  return new BigNumber(num).toFormat(decimalPlaces, BigNumber.ROUND_CEIL, {\n    decimalSeparator: getSeparator(locale, 'decimal') || '.',\n    groupSeparator: getSeparator(locale, 'group'),\n    groupSize: 3\n  });\n}\n\nexport function prettifyNumber(\n  _num = null,\n  truncate = false,\n  decimalPlaces = 2,\n  keepSymbol = true\n) {\n  if (_num === null) return null;\n  let symbol = '';\n  if (_num.symbol !== undefined) symbol += ' ' + cleanSymbol(_num.symbol);\n  const num = parseFloat(_num.toString());\n  if (num > Number.MAX_SAFE_INTEGER) return 'NUMBER TOO BIG';\n  let formattedNumber;\n  if (truncate) {\n    if (num > 999999999999) formattedNumber = (num / 1000000).toFixed(2) + 'T';\n    if (num > 999999999) formattedNumber = (num / 1000000).toFixed(2) + 'B';\n    if (num > 999999) formattedNumber = (num / 1000000).toFixed(2) + 'M';\n    else if (num > 999) formattedNumber = (num / 1000).toFixed(2) + 'K';\n    else if (num < 1) {\n      formattedNumber = num === 0 ? num.toFixed(2) : num.toFixed(4);\n    } else formattedNumber = num.toFixed(decimalPlaces);\n  } else {\n    formattedNumber = num.toLocaleString();\n  }\n  return keepSymbol ? formattedNumber + symbol : formattedNumber;\n}\n\nexport function prettifyFloat(num, decimalPlaces = 2) {\n  if (!num && num !== 0) return 'NaN';\n  const [, decimalPortion] = num.toString().split('.');\n  const decimalPlacesInNumber = decimalPortion ? decimalPortion.length : 0;\n\n  return decimalPlacesInNumber > decimalPlaces\n    ? `${num.toFixed(decimalPlaces)}...`\n    : num;\n}\n\nexport function cutMiddle(str = '', left = 4, right = 4) {\n  if (str.length <= left + right) return str;\n  return `${str.slice(0, left)}...${str.slice(-right)}`;\n}\n\nexport const copyToClipboard = string => {\n  const textArea = document.createElement('textarea');\n  textArea.value = string;\n  document.body.appendChild(textArea);\n  textArea.select();\n  document.execCommand('Copy');\n  textArea.remove();\n};\n\nexport function firstLetterLowercase(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\nexport function cleanSymbol(s) {\n  if (s === 'DSR-USDFL') return 'USDFL';\n  return s;\n}\n\nexport const shortenAddress = address =>\n  `${address.slice(0, 6)}...${address.slice(-4)}`;\n\nexport function formatEventDescription(lang, e) {\n  const interfaceLocale = lang.getInterfaceLanguage();\n  switch (e.type) {\n    case 'OPEN':\n      return lang.formatString(lang.event_history.open, <b>{e.id}</b>);\n    case 'DEPOSIT':\n      return lang.formatString(\n        lang.event_history.deposit,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>,\n        e.gem\n      );\n    case 'RECLAIM':\n      return lang.formatString(\n        lang.event_history.reclaim,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>,\n        e.gem\n      );\n    case 'DSR_DEPOSIT':\n      return lang.formatString(\n        lang.event_history.dsr_deposit,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>,\n        e.gem\n      );\n    case 'DSR_WITHDRAW':\n      return lang.formatString(\n        lang.event_history.dsr_withdraw,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>,\n        e.gem\n      );\n    case 'WITHDRAW':\n      return lang.formatString(\n        lang.event_history.withdraw,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>,\n        e.gem\n      );\n    case 'GENERATE':\n      return lang.formatString(\n        lang.event_history.generate,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>\n      );\n    case 'PAY_BACK':\n      return lang.formatString(\n        lang.event_history.pay_back,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>\n      );\n    case 'GIVE':\n      return lang.formatString(\n        lang.event_history.give,\n        <b>{shortenAddress(e.newOwner)}</b>,\n        <b>{shortenAddress(e.prevOwner)}</b>\n      );\n    case 'MIGRATE':\n      return lang.formatString(lang.event_history.migrate);\n    case 'BITE':\n      return lang.formatString(\n        lang.event_history.bite,\n        <b>{prettifyCurrency(interfaceLocale, e.amount, 2)}</b>,\n        e.gem\n      );\n    default:\n      return '?';\n  }\n}\n\nexport function formatDate(d) {\n  return (\n    d.toLocaleDateString(lang.getInterfaceLanguage(), {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }) +\n    ', ' +\n    d.toLocaleTimeString(lang.getInterfaceLanguage())\n  );\n}\n\n// ensures a result < amount.toFixed(d)\nexport function safeToFixed(amount, digits) {\n  if (typeof amount === 'string') amount = parseFloat(amount);\n  const s = amount.toFixed(digits);\n  return s.substring(0, s.length - 1);\n}\n\nexport function formatPrecision(amount, precision = 4) {\n  return amount < 1 ? 4 : precision;\n}\n\nexport const formatCurrencyValue = ({\n  value,\n  precision = short,\n  percentage = false,\n  integer = false,\n  infinity = 'N/A',\n  rounding = BigNumber.ROUND_DOWN\n}) => {\n  if (value instanceof Currency) value = value.toBigNumber();\n  else if (!BigNumber.isBigNumber(value)) value = BigNumber(value);\n  if (['Infinity', Infinity].includes(value.toFixed(precision)))\n    return infinity;\n  if (percentage) value = value.times(100);\n  if (integer) value = value.integerValue(BigNumber.ROUND_HALF_UP);\n  if (value.lt(1) && rounding === BigNumber.ROUND_DOWN) {\n    precision = value.eq(0) ? short : medium;\n  }\n  return value.toFixed(precision, rounding);\n};\n\nexport function formatter(target, options = {}) {\n  return formatCurrencyValue({ value: target, ...options });\n}\n"]},"metadata":{},"sourceType":"module"}