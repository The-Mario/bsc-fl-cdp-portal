{"ast":null,"code":"import _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// A simple Ethers Signer built directly from a Web3 provider.\nimport { promisify } from '../../utils';\nexport default function makeSigner(web3Service) {\n  var provider = web3Service.web3Provider();\n  var call = promisify(web3Service._web3.eth.call);\n  return {\n    getAddress: function getAddress() {\n      return web3Service.currentAddress();\n    },\n    estimateGas: function estimateGas(tx) {\n      return web3Service.estimateGas(tx);\n    },\n    sendTransaction: function sendTransaction(tx) {\n      return web3Service.sendTransaction(_objectSpread({}, tx, {\n        from: web3Service.currentAddress()\n      }));\n    },\n    provider: new Proxy(provider, {\n      get: function get(target, key) {\n        switch (key) {\n          case 'resolveName':\n            return function (address) {\n              return address;\n            };\n\n          case 'call':\n            return call;\n\n          default:\n            return target[key];\n        }\n      }\n    })\n  };\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(makeSigner, \"makeSigner\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/web3/ShimEthersSigner.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai/src/eth/web3/ShimEthersSigner.js"],"names":["promisify","makeSigner","web3Service","provider","web3Provider","call","_web3","eth","getAddress","currentAddress","estimateGas","tx","sendTransaction","from","Proxy","get","target","key","address"],"mappings":";;;;;;;;;;;AAAA;AAEA,SAASA,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,UAAT,CAAoBC,WAApB,EAAiC;AAC9C,MAAMC,QAAQ,GAAGD,WAAW,CAACE,YAAZ,EAAjB;AACA,MAAMC,IAAI,GAAGL,SAAS,CAACE,WAAW,CAACI,KAAZ,CAAkBC,GAAlB,CAAsBF,IAAvB,CAAtB;AACA,SAAO;AACLG,IAAAA,UAAU,EAAE;AAAA,aAAMN,WAAW,CAACO,cAAZ,EAAN;AAAA,KADP;AAELC,IAAAA,WAAW,EAAE,qBAAAC,EAAE;AAAA,aAAIT,WAAW,CAACQ,WAAZ,CAAwBC,EAAxB,CAAJ;AAAA,KAFV;AAGLC,IAAAA,eAAe,EAAE,yBAAAD,EAAE,EAAI;AACrB,aAAOT,WAAW,CAACU,eAAZ,mBACFD,EADE;AAELE,QAAAA,IAAI,EAAEX,WAAW,CAACO,cAAZ;AAFD,SAAP;AAID,KARI;AASLN,IAAAA,QAAQ,EAAE,IAAIW,KAAJ,CAAUX,QAAV,EAAoB;AAC5BY,MAAAA,GAD4B,eACxBC,MADwB,EAChBC,GADgB,EACX;AACf,gBAAQA,GAAR;AACE,eAAK,aAAL;AACE,mBAAO,UAAAC,OAAO;AAAA,qBAAIA,OAAJ;AAAA,aAAd;;AACF,eAAK,MAAL;AACE,mBAAOb,IAAP;;AACF;AACE,mBAAOW,MAAM,CAACC,GAAD,CAAb;AANJ;AAQD;AAV2B,KAApB;AATL,GAAP;AAsBD;;;;;;;;;;0BAzBuBhB,U","sourcesContent":["// A simple Ethers Signer built directly from a Web3 provider.\n\nimport { promisify } from '../../utils';\n\nexport default function makeSigner(web3Service) {\n  const provider = web3Service.web3Provider();\n  const call = promisify(web3Service._web3.eth.call);\n  return {\n    getAddress: () => web3Service.currentAddress(),\n    estimateGas: tx => web3Service.estimateGas(tx),\n    sendTransaction: tx => {\n      return web3Service.sendTransaction({\n        ...tx,\n        from: web3Service.currentAddress()\n      });\n    },\n    provider: new Proxy(provider, {\n      get(target, key) {\n        switch (key) {\n          case 'resolveName':\n            return address => address;\n          case 'call':\n            return call;\n          default:\n            return target[key];\n        }\n      }\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}