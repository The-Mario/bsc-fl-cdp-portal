{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/index.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useMemo, useCallback } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport LoadingLayout from 'layouts/LoadingLayout';\nimport { getColor } from 'styles/theme';\nimport useMaker from 'hooks/useMaker';\nimport useSidebar from 'hooks/useSidebar';\nimport CDPViewPresentation from './Presentation';\nimport Unavailable from '../Unavailable';\nimport { Routes } from '../../utils/constants';\nimport { useNavigation } from 'react-navi';\nimport { watch } from 'hooks/useObservable';\n\nfunction CDPView(_ref) {\n  var _this = this;\n\n  var cdpId = _ref.cdpId;\n  cdpId = parseInt(cdpId, 10);\n\n  var _useMaker = useMaker(),\n      account = _useMaker.account,\n      network = _useMaker.network;\n\n  var _useSidebar = useSidebar(),\n      showSidebar = _useSidebar.show;\n\n  var navigation = useNavigation(); // eslint-disable-next-line\n\n  var redirect = useCallback(function (account) {\n    (function () {\n      var _redirect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var search;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return navigation.getRoute();\n\n              case 2:\n                search = _context.sent.url.search;\n                navigation.navigate({\n                  pathname: \"/\".concat(Routes.BORROW, \"/owner/\").concat(account.address),\n                  search: search\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function redirect() {\n        return _redirect.apply(this, arguments);\n      }\n\n      return redirect;\n    })()();\n  }, [navigation]);\n  var vault = watch.vault(cdpId);\n  return useMemo(function () {\n    return vault && vault.externalOwnerAddress ? /*#__PURE__*/React.createElement(CDPViewPresentation, {\n      vault: vault,\n      showSidebar: showSidebar,\n      account: account,\n      network: network,\n      cdpOwner: vault.externalOwnerAddress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }) : vault && vault.externalOwnerAddress === null ? /*#__PURE__*/React.createElement(Unavailable, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }) : vault === null ? /*#__PURE__*/React.createElement(Unavailable, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(LoadingLayout, {\n      background: getColor('lightGrey'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    });\n  }, [vault, showSidebar, account, network]);\n}\n\n__signature__(CDPView, \"useMaker{{ account, network }}\\nuseSidebar{{ show: showSidebar }}\\nuseNavigation{navigation}\\nuseCallback{redirect}\\nuseMemo{}\", function () {\n  return [useMaker, useSidebar, useNavigation];\n});\n\nvar _default = hot(CDPView);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CDPView, \"CDPView\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPDisplay/index.js"],"names":["React","useMemo","useCallback","hot","LoadingLayout","getColor","useMaker","useSidebar","CDPViewPresentation","Unavailable","Routes","useNavigation","watch","CDPView","cdpId","parseInt","account","network","showSidebar","show","navigation","redirect","getRoute","search","url","navigate","pathname","BORROW","address","vault","externalOwnerAddress"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,SAASC,GAAT,QAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,mBAAP,MAAgC,gBAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,KAAT,QAAsB,qBAAtB;;AAEA,SAASC,OAAT,OAA4B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AAC1BA,EAAAA,KAAK,GAAGC,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAhB;;AAD0B,kBAEGR,QAAQ,EAFX;AAAA,MAElBU,OAFkB,aAElBA,OAFkB;AAAA,MAETC,OAFS,aAETA,OAFS;;AAAA,oBAIIV,UAAU,EAJd;AAAA,MAIZW,WAJY,eAIlBC,IAJkB;;AAK1B,MAAMC,UAAU,GAAGT,aAAa,EAAhC,CAL0B,CAO1B;;AACA,MAAMU,QAAQ,GAAGnB,WAAW,CAC1B,UAAAc,OAAO,EAAI;AACT;AAAA,+EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2BI,UAAU,CAACE,QAAX,EAD3B;;AAAA;AACSC,gBAAAA,MADT,iBACkDC,GADlD,CACSD,MADT;AAECH,gBAAAA,UAAU,CAACK,QAAX,CAAoB;AAClBC,kBAAAA,QAAQ,aAAMhB,MAAM,CAACiB,MAAb,oBAA6BX,OAAO,CAACY,OAArC,CADU;AAElBL,kBAAAA,MAAM,EAANA;AAFkB,iBAApB;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD;;AAAA,eAAgBF,QAAhB;AAAA;AAAA;;AAAA,aAAgBA,QAAhB;AAAA;AAOD,GATyB,EAU1B,CAACD,UAAD,CAV0B,CAA5B;AAaA,MAAMS,KAAK,GAAGjB,KAAK,CAACiB,KAAN,CAAYf,KAAZ,CAAd;AACA,SAAOb,OAAO,CACZ;AAAA,WACE4B,KAAK,IAAIA,KAAK,CAACC,oBAAf,gBACE,oBAAC,mBAAD;AACE,MAAA,KAAK,EAAED,KADT;AAEE,MAAA,WAAW,EAAEX,WAFf;AAGE,MAAA,OAAO,EAAEF,OAHX;AAIE,MAAA,OAAO,EAAEC,OAJX;AAKE,MAAA,QAAQ,EAAEY,KAAK,CAACC,oBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAQID,KAAK,IAAIA,KAAK,CAACC,oBAAN,KAA+B,IAAxC,gBACF,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,GAEAD,KAAK,KAAK,IAAV,gBACF,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,gBAGF,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAExB,QAAQ,CAAC,WAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ;AAAA,GADY,EAiBZ,CAACwB,KAAD,EAAQX,WAAR,EAAqBF,OAArB,EAA8BC,OAA9B,CAjBY,CAAd;AAmBD;;cAzCQJ,O;UAEsBP,Q,EAECC,U,EACXI,a;;;eAsCNR,GAAG,CAACU,OAAD,C;;AAAlB;;;;;;;;;;0BA3CSA,O","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport LoadingLayout from 'layouts/LoadingLayout';\nimport { getColor } from 'styles/theme';\nimport useMaker from 'hooks/useMaker';\nimport useSidebar from 'hooks/useSidebar';\nimport CDPViewPresentation from './Presentation';\nimport Unavailable from '../Unavailable';\nimport { Routes } from '../../utils/constants';\nimport { useNavigation } from 'react-navi';\nimport { watch } from 'hooks/useObservable';\n\nfunction CDPView({ cdpId }) {\n  cdpId = parseInt(cdpId, 10);\n  const { account, network } = useMaker();\n\n  const { show: showSidebar } = useSidebar();\n  const navigation = useNavigation();\n\n  // eslint-disable-next-line\n  const redirect = useCallback(\n    account => {\n      (async function redirect() {\n        const { search } = (await navigation.getRoute()).url;\n        navigation.navigate({\n          pathname: `/${Routes.BORROW}/owner/${account.address}`,\n          search\n        });\n      })();\n    },\n    [navigation]\n  );\n\n  const vault = watch.vault(cdpId);\n  return useMemo(\n    () =>\n      vault && vault.externalOwnerAddress ? (\n        <CDPViewPresentation\n          vault={vault}\n          showSidebar={showSidebar}\n          account={account}\n          network={network}\n          cdpOwner={vault.externalOwnerAddress}\n        />\n      ) : vault && vault.externalOwnerAddress === null ? (\n        <Unavailable />\n      ) : vault === null ? (\n        <Unavailable />\n      ) : (\n        <LoadingLayout background={getColor('lightGrey')} />\n      ),\n    [vault, showSidebar, account, network]\n  );\n}\n\nexport default hot(CDPView);\n"]},"metadata":{},"sourceType":"module"}