{"ast":null,"code":"import _defineProperty from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport BigNumber from 'bignumber.js';\nimport { TOKEN_PRICE_NEXT_UPDATE, TOKEN_PRICE_UPDATE_INTERVAL, TOKEN_PRICE_LAST_UPDATE } from './_constants';\nexport var tokenPriceLastUpdate = {\n  generate: function generate(token) {\n    return {\n      id: \"PIP_\".concat(token, \".zzz\"),\n      contract: \"PIP_\".concat(token),\n      call: ['zzz()(uint64)']\n    };\n  },\n  returns: [[TOKEN_PRICE_LAST_UPDATE, function (v) {\n    return BigNumber(v).times(1000);\n  }]]\n};\nexport var tokenPriceUpdateInterval = {\n  generate: function generate(token) {\n    return {\n      id: \"PIP_\".concat(token, \".hop\"),\n      contract: \"PIP_\".concat(token),\n      call: ['hop()(uint16)']\n    };\n  },\n  returns: [[TOKEN_PRICE_UPDATE_INTERVAL, function (v) {\n    return BigNumber(v).times(1000);\n  }]]\n};\nexport var tokenPriceNextUpdate = {\n  generate: function generate(token) {\n    return {\n      dependencies: [[TOKEN_PRICE_LAST_UPDATE, token], [TOKEN_PRICE_UPDATE_INTERVAL, token]],\n      computed: function computed(lastUpdate, interval) {\n        return new Date(lastUpdate.plus(interval).toNumber());\n      }\n    };\n  }\n};\nexport var tokenPricesNextUpdates = {\n  generate: function generate(tokenList) {\n    return {\n      dependencies: tokenList.map(function (token) {\n        return [TOKEN_PRICE_NEXT_UPDATE, token];\n      }),\n      computed: function computed() {\n        for (var _len = arguments.length, list = new Array(_len), _key = 0; _key < _len; _key++) {\n          list[_key] = arguments[_key];\n        }\n\n        return list.reduce(function (acc, time, idx) {\n          return _objectSpread(_defineProperty({}, \"\".concat(tokenList[idx]), time), acc);\n        }, {});\n      }\n    };\n  }\n};\nvar _default = {\n  tokenPriceLastUpdate: tokenPriceLastUpdate,\n  tokenPriceUpdateInterval: tokenPriceUpdateInterval,\n  tokenPriceNextUpdate: tokenPriceNextUpdate,\n  tokenPricesNextUpdates: tokenPricesNextUpdates\n};\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(tokenPriceLastUpdate, \"tokenPriceLastUpdate\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/osm.js\");\n  reactHotLoader.register(tokenPriceUpdateInterval, \"tokenPriceUpdateInterval\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/osm.js\");\n  reactHotLoader.register(tokenPriceNextUpdate, \"tokenPriceNextUpdate\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/osm.js\");\n  reactHotLoader.register(tokenPricesNextUpdates, \"tokenPricesNextUpdates\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/osm.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/osm.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/libs/dai-plugin-mcd/src/schemas/osm.js"],"names":["BigNumber","TOKEN_PRICE_NEXT_UPDATE","TOKEN_PRICE_UPDATE_INTERVAL","TOKEN_PRICE_LAST_UPDATE","tokenPriceLastUpdate","generate","token","id","contract","call","returns","v","times","tokenPriceUpdateInterval","tokenPriceNextUpdate","dependencies","computed","lastUpdate","interval","Date","plus","toNumber","tokenPricesNextUpdates","tokenList","map","list","reduce","acc","time","idx"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,SACEC,uBADF,EAEEC,2BAFF,EAGEC,uBAHF,QAIO,cAJP;AAMA,OAAO,IAAMC,oBAAoB,GAAG;AAClCC,EAAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,WAAK;AAClBC,MAAAA,EAAE,gBAASD,KAAT,SADgB;AAElBE,MAAAA,QAAQ,gBAASF,KAAT,CAFU;AAGlBG,MAAAA,IAAI,EAAE,CAAC,eAAD;AAHY,KAAL;AAAA,GADmB;AAMlCC,EAAAA,OAAO,EAAE,CAAC,CAACP,uBAAD,EAA0B,UAAAQ,CAAC;AAAA,WAAIX,SAAS,CAACW,CAAD,CAAT,CAAaC,KAAb,CAAmB,IAAnB,CAAJ;AAAA,GAA3B,CAAD;AANyB,CAA7B;AASP,OAAO,IAAMC,wBAAwB,GAAG;AACtCR,EAAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,WAAK;AAClBC,MAAAA,EAAE,gBAASD,KAAT,SADgB;AAElBE,MAAAA,QAAQ,gBAASF,KAAT,CAFU;AAGlBG,MAAAA,IAAI,EAAE,CAAC,eAAD;AAHY,KAAL;AAAA,GADuB;AAMtCC,EAAAA,OAAO,EAAE,CAAC,CAACR,2BAAD,EAA8B,UAAAS,CAAC;AAAA,WAAIX,SAAS,CAACW,CAAD,CAAT,CAAaC,KAAb,CAAmB,IAAnB,CAAJ;AAAA,GAA/B,CAAD;AAN6B,CAAjC;AASP,OAAO,IAAME,oBAAoB,GAAG;AAClCT,EAAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,WAAK;AAClBS,MAAAA,YAAY,EAAE,CACZ,CAACZ,uBAAD,EAA0BG,KAA1B,CADY,EAEZ,CAACJ,2BAAD,EAA8BI,KAA9B,CAFY,CADI;AAKlBU,MAAAA,QAAQ,EAAE,kBAACC,UAAD,EAAaC,QAAb;AAAA,eACR,IAAIC,IAAJ,CAASF,UAAU,CAACG,IAAX,CAAgBF,QAAhB,EAA0BG,QAA1B,EAAT,CADQ;AAAA;AALQ,KAAL;AAAA;AADmB,CAA7B;AAWP,OAAO,IAAMC,sBAAsB,GAAG;AACpCjB,EAAAA,QAAQ,EAAE,kBAAAkB,SAAS;AAAA,WAAK;AACtBR,MAAAA,YAAY,EAAEQ,SAAS,CAACC,GAAV,CAAc,UAAAlB,KAAK;AAAA,eAAI,CAACL,uBAAD,EAA0BK,KAA1B,CAAJ;AAAA,OAAnB,CADQ;AAEtBU,MAAAA,QAAQ,EAAE;AAAA,0CAAIS,IAAJ;AAAIA,UAAAA,IAAJ;AAAA;;AAAA,eACRA,IAAI,CAACC,MAAL,CACE,UAACC,GAAD,EAAMC,IAAN,EAAYC,GAAZ;AAAA,6DACMN,SAAS,CAACM,GAAD,CADf,GACyBD,IADzB,GAEKD,GAFL;AAAA,SADF,EAKE,EALF,CADQ;AAAA;AAFY,KAAL;AAAA;AADiB,CAA/B;eAcQ;AACbvB,EAAAA,oBAAoB,EAApBA,oBADa;AAEbS,EAAAA,wBAAwB,EAAxBA,wBAFa;AAGbC,EAAAA,oBAAoB,EAApBA,oBAHa;AAIbQ,EAAAA,sBAAsB,EAAtBA;AAJa,C;AAAf;;;;;;;;;;0BA3CalB,oB;0BASAS,wB;0BASAC,oB;0BAWAQ,sB","sourcesContent":["import BigNumber from 'bignumber.js';\n\nimport {\n  TOKEN_PRICE_NEXT_UPDATE,\n  TOKEN_PRICE_UPDATE_INTERVAL,\n  TOKEN_PRICE_LAST_UPDATE\n} from './_constants';\n\nexport const tokenPriceLastUpdate = {\n  generate: token => ({\n    id: `PIP_${token}.zzz`,\n    contract: `PIP_${token}`,\n    call: ['zzz()(uint64)']\n  }),\n  returns: [[TOKEN_PRICE_LAST_UPDATE, v => BigNumber(v).times(1000)]]\n};\n\nexport const tokenPriceUpdateInterval = {\n  generate: token => ({\n    id: `PIP_${token}.hop`,\n    contract: `PIP_${token}`,\n    call: ['hop()(uint16)']\n  }),\n  returns: [[TOKEN_PRICE_UPDATE_INTERVAL, v => BigNumber(v).times(1000)]]\n};\n\nexport const tokenPriceNextUpdate = {\n  generate: token => ({\n    dependencies: [\n      [TOKEN_PRICE_LAST_UPDATE, token],\n      [TOKEN_PRICE_UPDATE_INTERVAL, token]\n    ],\n    computed: (lastUpdate, interval) =>\n      new Date(lastUpdate.plus(interval).toNumber())\n  })\n};\n\nexport const tokenPricesNextUpdates = {\n  generate: tokenList => ({\n    dependencies: tokenList.map(token => [TOKEN_PRICE_NEXT_UPDATE, token]),\n    computed: (...list) =>\n      list.reduce(\n        (acc, time, idx) => ({\n          [`${tokenList[idx]}`]: time,\n          ...acc\n        }),\n        {}\n      )\n  })\n};\n\nexport default {\n  tokenPriceLastUpdate,\n  tokenPriceUpdateInterval,\n  tokenPriceNextUpdate,\n  tokenPricesNextUpdates\n};\n"]},"metadata":{},"sourceType":"module"}