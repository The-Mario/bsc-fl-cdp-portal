{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useReducer, useEffect, useState, useRef } from 'react';\nimport BigNumber from 'bignumber.js';\nimport TextMono from 'components/TextMono';\nimport { Flex, Text, Box } from '@makerdao/ui-components-core';\nimport useLanguage from 'hooks/useLanguage';\nimport usePrevious from 'hooks/usePrevious';\nimport useMaker from 'hooks/useMaker';\nimport { getColor } from '../styles/theme';\nimport { InfoContainerRow, CdpViewCard } from './CDPDisplay/subcomponents';\nimport { TextBlock } from 'components/Typography';\nimport { formatter } from 'utils/ui';\nvar FF_DYNAMIC_DECIMALS = false;\n\nfunction Ticker(_ref) {\n  var amount = _ref.amount,\n      increment = _ref.increment,\n      decimals = _ref.decimals,\n      props = _objectWithoutProperties(_ref, [\"amount\", \"increment\", \"decimals\"]);\n\n  var _useState = useState(amount),\n      _useState2 = _slicedToArray(_useState, 2),\n      counter = _useState2[0],\n      setCounter = _useState2[1];\n\n  var requestRef = useRef();\n  var previousTimeRef = useRef();\n\n  var animate = function animate(time) {\n    if (previousTimeRef.current !== undefined) {\n      var deltaTime = time - previousTimeRef.current;\n\n      if (deltaTime > 0) {\n        setCounter(function (prevCount) {\n          return deltaTime * increment + prevCount;\n        });\n      }\n    }\n\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(function () {\n    requestRef.current = requestAnimationFrame(animate);\n    return function () {\n      return cancelAnimationFrame(requestRef.current);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(TextMono, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), counter ? counter.toFixed(decimals) : 0 .toFixed(decimals));\n}\n\n__signature__(Ticker, \"useState{[counter, setCounter](amount)}\\nuseRef{requestRef}\\nuseRef{previousTimeRef}\\nuseEffect{}\");\n\nvar initialState = {\n  balance: BigNumber(0),\n  earnings: BigNumber(0),\n  amountChange: BigNumber(0),\n  decimalsToShow: 4,\n  rawEarnings: BigNumber(0),\n  amountChangeMillisecond: BigNumber(0.000001),\n  fetchedEarnings: false,\n  fetchingEarnings: false,\n  initialised: false,\n  earningsDispatched: false,\n  totalDaiLockedAmountDelta: BigNumber(0),\n  tickerInterest: BigNumber(0),\n  tickerStartTime: 0,\n  cleanedState: false\n};\n\nfunction DSRInfo(_ref2) {\n  var isMobile = _ref2.isMobile,\n      savings = _ref2.savings;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var cancelled = useRef(false);\n  useEffect(function () {\n    return function () {\n      return cancelled.current = true;\n    };\n  }, []);\n  var proxyAddress = savings.proxyAddress,\n      annualDaiSavingsRate = savings.annualDaiSavingsRate,\n      daiSavingsRate = savings.daiSavingsRate,\n      dateEarningsLastAccrued = savings.dateEarningsLastAccrued,\n      daiLockedInDsr = savings.daiLockedInDsr,\n      savingsRateAccumulator = savings.savingsRateAccumulator,\n      savingsDai = savings.savingsDai;\n\n  var _useReducer = useReducer(function (state, data) {\n    return _objectSpread({}, state, {}, data);\n  }, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      _useReducer2$ = _useReducer2[0],\n      balance = _useReducer2$.balance,\n      earnings = _useReducer2$.earnings,\n      amountChange = _useReducer2$.amountChange,\n      decimalsToShow = _useReducer2$.decimalsToShow,\n      rawEarnings = _useReducer2$.rawEarnings,\n      fetchedEarnings = _useReducer2$.fetchedEarnings,\n      fetchingEarnings = _useReducer2$.fetchingEarnings,\n      earningsDispatched = _useReducer2$.earningsDispatched,\n      totalDaiLockedAmountDelta = _useReducer2$.totalDaiLockedAmountDelta,\n      tickerInterest = _useReducer2$.tickerInterest,\n      tickerStartTime = _useReducer2$.tickerStartTime,\n      initialised = _useReducer2$.initialised,\n      cleanedState = _useReducer2$.cleanedState,\n      dispatch = _useReducer2[1];\n\n  var decimals = !isMobile && FF_DYNAMIC_DECIMALS ? amountChange.times(100).e * -1 : daiLockedInDsr.eq(0) ? 4 : daiLockedInDsr.lt(1000) ? 8 : daiLockedInDsr.lt(100000) ? 6 : 4;\n\n  var fetchEarnings = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var etd;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return maker.service('mcd:savings').getEarningsToDate(proxyAddress);\n\n            case 2:\n              etd = _context.sent;\n\n              if (!cancelled.current) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 5:\n              dispatch({\n                fetchingEarnings: false,\n                fetchedEarnings: true,\n                rawEarnings: etd.toBigNumber()\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchEarnings() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var daiBalance = savingsDai.times(savingsRateAccumulator);\n  var prevDaiLocked = usePrevious(daiBalance);\n  var rawEarningsString = rawEarnings.toString();\n  var prevSavingsDai = usePrevious(savingsDai);\n  var savingsDaiChanged = prevSavingsDai !== undefined && prevSavingsDai.toString() !== savingsDai.toString();\n  var prevSavingsRateAccumulator = usePrevious(savingsRateAccumulator);\n  var savingsRateAccChanged = prevSavingsRateAccumulator !== undefined && prevSavingsRateAccumulator.toString() !== savingsRateAccumulator.toString();\n  useEffect(function () {\n    if (cleanedState) {\n      if (proxyAddress && !fetchedEarnings && !fetchingEarnings) {\n        fetchEarnings(proxyAddress);\n        dispatch({\n          fetchingEarnings: true\n        });\n      }\n\n      if (savingsRateAccChanged || savingsDaiChanged || fetchedEarnings && !earningsDispatched) {\n        var amountChangePerSecond = daiSavingsRate.minus(1).times(daiLockedInDsr);\n        var secondsSinceDrip = Math.floor(Date.now() / 1000) - dateEarningsLastAccrued.getTime() / 1000;\n        var accruedInterestSinceDrip = daiLockedInDsr.gt(0) ? amountChangePerSecond.times(secondsSinceDrip) : BigNumber(0);\n        var amountChangePerMillisecond = amountChangePerSecond.div(1000);\n        var daiLockedAmountDelta = !savingsDaiChanged && savingsRateAccChanged ? daiBalance.minus(prevDaiLocked) : BigNumber(0);\n\n        if (fetchedEarnings && initialised) {\n          if (!earningsDispatched) {\n            var timeSinceTickerStart = Date.now() - tickerStartTime;\n            var interestSinceTickerStart = timeSinceTickerStart > 2500 ? amountChangePerSecond.times(timeSinceTickerStart / 1000) : BigNumber(0);\n            dispatch({\n              balance: daiBalance.plus(accruedInterestSinceDrip),\n              amountChange: amountChangePerMillisecond,\n              decimalsToShow: decimals,\n              earningsDispatched: true,\n              totalDaiLockedAmountDelta: totalDaiLockedAmountDelta.plus(daiLockedAmountDelta),\n              tickerInterest: interestSinceTickerStart,\n              earnings: rawEarnings.plus(accruedInterestSinceDrip).plus(daiLockedAmountDelta).plus(totalDaiLockedAmountDelta).plus(interestSinceTickerStart)\n            });\n          } else {\n            dispatch({\n              balance: daiBalance.plus(accruedInterestSinceDrip),\n              amountChange: amountChangePerMillisecond,\n              decimalsToShow: decimals,\n              totalDaiLockedAmountDelta: totalDaiLockedAmountDelta.plus(daiLockedAmountDelta),\n              earnings: rawEarnings.plus(accruedInterestSinceDrip).plus(daiLockedAmountDelta).plus(totalDaiLockedAmountDelta).plus(tickerInterest)\n            });\n          }\n        } else {\n          dispatch({\n            balance: daiBalance.plus(accruedInterestSinceDrip),\n            amountChange: amountChangePerMillisecond,\n            decimalsToShow: decimals,\n            tickerStartTime: Date.now(),\n            initialised: true\n          });\n        }\n      }\n    } else {\n      // state must be reset on account switch\n      cancelled.current = false;\n      dispatch(_objectSpread({}, initialState, {\n        cleanedState: true\n      }));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [savingsRateAccChanged, savingsDaiChanged, rawEarningsString, fetchedEarnings, initialised, cleanedState]);\n  return /*#__PURE__*/React.createElement(CdpViewCard, {\n    title: lang.save.dai_locked_dsr,\n    style: {\n      padding: '0px 20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    mt: \"s\",\n    mb: \"xs\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Ticker, {\n    key: \"\".concat(proxyAddress, \".\").concat(balance.toString(), \".\").concat(amountChange, \".\").concat(decimalsToShow),\n    amount: balance.toNumber(),\n    increment: amountChange.toNumber(),\n    decimals: decimalsToShow,\n    style: {\n      fontSize: '24px',\n      color: getColor('whiteText')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      fontSize: '20px',\n      color: getColor('whiteText')\n    },\n    mb: \".175rem\",\n    ml: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, \"USDFL\"))), /*#__PURE__*/React.createElement(InfoContainerRow, {\n    title: /*#__PURE__*/React.createElement(TextBlock, {\n      style: {\n        fontSize: '14px',\n        color: getColor('whiteText')\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, lang.save.savings_earned_to_date),\n    value: /*#__PURE__*/React.createElement(React.Fragment, null, earningsDispatched ? /*#__PURE__*/React.createElement(Ticker, {\n      key: \"\".concat(proxyAddress, \".\").concat(earnings.toString(), \".\").concat(amountChange, \".\").concat(decimalsToShow),\n      amount: earnings.toNumber(),\n      increment: amountChange.toNumber(),\n      decimals: decimalsToShow,\n      style: {\n        fontSize: '16px',\n        color: getColor('whiteText')\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(TextMono, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    }, 0 .toFixed(decimalsToShow)), /*#__PURE__*/React.createElement(Text, {\n      style: {\n        fontSize: '14px',\n        color: getColor('greyText')\n      },\n      ml: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, \"USDFL\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoContainerRow, {\n    title: lang.save.dai_savings_rate,\n    value: annualDaiSavingsRate ? /*#__PURE__*/React.createElement(TextMono, {\n      style: {\n        fontSize: '14px',\n        color: getColor('greyText')\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, formatter(annualDaiSavingsRate, {\n      rounding: BigNumber.ROUND_HALF_UP\n    }), \"%\") : '--',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }));\n}\n\n__signature__(DSRInfo, \"useLanguage{{ lang }}\\nuseMaker{{ maker }}\\nuseRef{cancelled}\\nuseEffect{}\\nuseReducer{[\\n    {\\n      balance,\\n      earnings,\\n      amountChange,\\n      decimalsToShow,\\n      rawEarnings,\\n      fetchedEarnings,\\n      fetchingEarnings,\\n      earningsDispatched,\\n      totalDaiLockedAmountDelta,\\n      tickerInterest,\\n      tickerStartTime,\\n      initialised,\\n      cleanedState\\n    },\\n    dispatch\\n  ](initialState)}\\nusePrevious{prevDaiLocked}\\nusePrevious{prevSavingsDai}\\nusePrevious{prevSavingsRateAccumulator}\\nuseEffect{}\", function () {\n  return [useLanguage, useMaker, usePrevious, usePrevious, usePrevious];\n});\n\nvar _default = DSRInfo;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FF_DYNAMIC_DECIMALS, \"FF_DYNAMIC_DECIMALS\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js\");\n  reactHotLoader.register(Ticker, \"Ticker\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js\");\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js\");\n  reactHotLoader.register(DSRInfo, \"DSRInfo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/DSRInfo.js"],"names":["React","useReducer","useEffect","useState","useRef","BigNumber","TextMono","Flex","Text","Box","useLanguage","usePrevious","useMaker","getColor","InfoContainerRow","CdpViewCard","TextBlock","formatter","FF_DYNAMIC_DECIMALS","Ticker","amount","increment","decimals","props","counter","setCounter","requestRef","previousTimeRef","animate","time","current","undefined","deltaTime","prevCount","requestAnimationFrame","cancelAnimationFrame","toFixed","initialState","balance","earnings","amountChange","decimalsToShow","rawEarnings","amountChangeMillisecond","fetchedEarnings","fetchingEarnings","initialised","earningsDispatched","totalDaiLockedAmountDelta","tickerInterest","tickerStartTime","cleanedState","DSRInfo","isMobile","savings","lang","maker","cancelled","proxyAddress","annualDaiSavingsRate","daiSavingsRate","dateEarningsLastAccrued","daiLockedInDsr","savingsRateAccumulator","savingsDai","state","data","dispatch","times","e","eq","lt","fetchEarnings","service","getEarningsToDate","etd","toBigNumber","daiBalance","prevDaiLocked","rawEarningsString","toString","prevSavingsDai","savingsDaiChanged","prevSavingsRateAccumulator","savingsRateAccChanged","amountChangePerSecond","minus","secondsSinceDrip","Math","floor","Date","now","getTime","accruedInterestSinceDrip","gt","amountChangePerMillisecond","div","daiLockedAmountDelta","timeSinceTickerStart","interestSinceTickerStart","plus","save","dai_locked_dsr","padding","toNumber","fontSize","color","savings_earned_to_date","dai_savings_rate","rounding","ROUND_HALF_UP"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useState, useRef } from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport TextMono from 'components/TextMono';\nimport { Flex, Text, Box } from '@makerdao/ui-components-core';\nimport useLanguage from 'hooks/useLanguage';\nimport usePrevious from 'hooks/usePrevious';\nimport useMaker from 'hooks/useMaker';\nimport { getColor } from '../styles/theme';\nimport { InfoContainerRow, CdpViewCard } from './CDPDisplay/subcomponents';\nimport { TextBlock } from 'components/Typography';\nimport { formatter } from 'utils/ui';\n\nconst FF_DYNAMIC_DECIMALS = false;\nfunction Ticker({ amount, increment, decimals, ...props }) {\n  const [counter, setCounter] = useState(amount);\n  const requestRef = useRef();\n  const previousTimeRef = useRef();\n\n  const animate = time => {\n    if (previousTimeRef.current !== undefined) {\n      const deltaTime = time - previousTimeRef.current;\n      if (deltaTime > 0) {\n        setCounter(prevCount => deltaTime * increment + prevCount);\n      }\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <TextMono {...props}>\n      {counter ? counter.toFixed(decimals) : (0).toFixed(decimals)}\n    </TextMono>\n  );\n}\n\nconst initialState = {\n  balance: BigNumber(0),\n  earnings: BigNumber(0),\n  amountChange: BigNumber(0),\n  decimalsToShow: 4,\n  rawEarnings: BigNumber(0),\n  amountChangeMillisecond: BigNumber(0.000001),\n  fetchedEarnings: false,\n  fetchingEarnings: false,\n  initialised: false,\n  earningsDispatched: false,\n  totalDaiLockedAmountDelta: BigNumber(0),\n  tickerInterest: BigNumber(0),\n  tickerStartTime: 0,\n  cleanedState: false\n};\n\nfunction DSRInfo({ isMobile, savings }) {\n  const { lang } = useLanguage();\n  const { maker } = useMaker();\n  const cancelled = useRef(false);\n\n  useEffect(() => {\n    return () => (cancelled.current = true);\n  }, []);\n\n  const {\n    proxyAddress,\n    annualDaiSavingsRate,\n    daiSavingsRate,\n    dateEarningsLastAccrued,\n    daiLockedInDsr,\n    savingsRateAccumulator,\n    savingsDai\n  } = savings;\n\n  const [\n    {\n      balance,\n      earnings,\n      amountChange,\n      decimalsToShow,\n      rawEarnings,\n      fetchedEarnings,\n      fetchingEarnings,\n      earningsDispatched,\n      totalDaiLockedAmountDelta,\n      tickerInterest,\n      tickerStartTime,\n      initialised,\n      cleanedState\n    },\n    dispatch\n  ] = useReducer((state, data) => ({ ...state, ...data }), initialState);\n\n  const decimals =\n    !isMobile && FF_DYNAMIC_DECIMALS\n      ? amountChange.times(100).e * -1\n      : daiLockedInDsr.eq(0)\n      ? 4\n      : daiLockedInDsr.lt(1000)\n      ? 8\n      : daiLockedInDsr.lt(100000)\n      ? 6\n      : 4;\n\n  const fetchEarnings = async () => {\n    const etd = await maker\n      .service('mcd:savings')\n      .getEarningsToDate(proxyAddress);\n    if (cancelled.current) return;\n    dispatch({\n      fetchingEarnings: false,\n      fetchedEarnings: true,\n      rawEarnings: etd.toBigNumber()\n    });\n  };\n\n  const daiBalance = savingsDai.times(savingsRateAccumulator);\n  const prevDaiLocked = usePrevious(daiBalance);\n  const rawEarningsString = rawEarnings.toString();\n\n  const prevSavingsDai = usePrevious(savingsDai);\n  const savingsDaiChanged =\n    prevSavingsDai !== undefined &&\n    prevSavingsDai.toString() !== savingsDai.toString();\n\n  const prevSavingsRateAccumulator = usePrevious(savingsRateAccumulator);\n  const savingsRateAccChanged =\n    prevSavingsRateAccumulator !== undefined &&\n    prevSavingsRateAccumulator.toString() !== savingsRateAccumulator.toString();\n\n  useEffect(() => {\n    if (cleanedState) {\n      if (proxyAddress && !fetchedEarnings && !fetchingEarnings) {\n        fetchEarnings(proxyAddress);\n        dispatch({\n          fetchingEarnings: true\n        });\n      }\n\n      if (\n        savingsRateAccChanged ||\n        savingsDaiChanged ||\n        (fetchedEarnings && !earningsDispatched)\n      ) {\n        const amountChangePerSecond = daiSavingsRate\n          .minus(1)\n          .times(daiLockedInDsr);\n\n        const secondsSinceDrip =\n          Math.floor(Date.now() / 1000) -\n          dateEarningsLastAccrued.getTime() / 1000;\n\n        const accruedInterestSinceDrip = daiLockedInDsr.gt(0)\n          ? amountChangePerSecond.times(secondsSinceDrip)\n          : BigNumber(0);\n\n        const amountChangePerMillisecond = amountChangePerSecond.div(1000);\n        const daiLockedAmountDelta =\n          !savingsDaiChanged && savingsRateAccChanged\n            ? daiBalance.minus(prevDaiLocked)\n            : BigNumber(0);\n\n        if (fetchedEarnings && initialised) {\n          if (!earningsDispatched) {\n            const timeSinceTickerStart = Date.now() - tickerStartTime;\n            const interestSinceTickerStart =\n              timeSinceTickerStart > 2500\n                ? amountChangePerSecond.times(timeSinceTickerStart / 1000)\n                : BigNumber(0);\n\n            dispatch({\n              balance: daiBalance.plus(accruedInterestSinceDrip),\n              amountChange: amountChangePerMillisecond,\n              decimalsToShow: decimals,\n              earningsDispatched: true,\n              totalDaiLockedAmountDelta: totalDaiLockedAmountDelta.plus(\n                daiLockedAmountDelta\n              ),\n              tickerInterest: interestSinceTickerStart,\n              earnings: rawEarnings\n                .plus(accruedInterestSinceDrip)\n                .plus(daiLockedAmountDelta)\n                .plus(totalDaiLockedAmountDelta)\n                .plus(interestSinceTickerStart)\n            });\n          } else {\n            dispatch({\n              balance: daiBalance.plus(accruedInterestSinceDrip),\n              amountChange: amountChangePerMillisecond,\n              decimalsToShow: decimals,\n              totalDaiLockedAmountDelta: totalDaiLockedAmountDelta.plus(\n                daiLockedAmountDelta\n              ),\n              earnings: rawEarnings\n                .plus(accruedInterestSinceDrip)\n                .plus(daiLockedAmountDelta)\n                .plus(totalDaiLockedAmountDelta)\n                .plus(tickerInterest)\n            });\n          }\n        } else {\n          dispatch({\n            balance: daiBalance.plus(accruedInterestSinceDrip),\n            amountChange: amountChangePerMillisecond,\n            decimalsToShow: decimals,\n            tickerStartTime: Date.now(),\n            initialised: true\n          });\n        }\n      }\n    } else {\n      // state must be reset on account switch\n      cancelled.current = false;\n      dispatch({\n        ...initialState,\n        cleanedState: true\n      });\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    savingsRateAccChanged,\n    savingsDaiChanged,\n    rawEarningsString,\n    fetchedEarnings,\n    initialised,\n    cleanedState\n  ]);\n\n  return (\n    <CdpViewCard title={lang.save.dai_locked_dsr} style={{padding: '0px 20px'}}>\n      <Flex alignItems=\"center\" mt=\"s\" mb=\"xs\" justifyContent=\"center\">\n        <Ticker\n          key={`${proxyAddress}.${balance.toString()}.${amountChange}.${decimalsToShow}`}\n          amount={balance.toNumber()}\n          increment={amountChange.toNumber()}\n          decimals={decimalsToShow}\n          style={{ fontSize: '24px', color: getColor('whiteText') }}\n        />\n        <Box>\n          <Text\n            style={{ fontSize: '20px', color: getColor('whiteText') }}\n            mb=\".175rem\"\n            ml=\"s\"\n          >\n            USDFL\n          </Text>\n        </Box>\n      </Flex>\n      <InfoContainerRow\n        title={\n          <TextBlock style={{ fontSize: '14px', color: getColor('whiteText') }}>\n            {lang.save.savings_earned_to_date}\n          </TextBlock>\n        }\n        value={\n          <>\n            {earningsDispatched ? (\n              <Ticker\n                key={`${proxyAddress}.${earnings.toString()}.${amountChange}.${decimalsToShow}`}\n                amount={earnings.toNumber()}\n                increment={amountChange.toNumber()}\n                decimals={decimalsToShow}\n                style={{ fontSize: '16px', color: getColor('whiteText') }}\n              />\n            ) : (\n              <TextMono>{(0).toFixed(decimalsToShow)}</TextMono>\n            )}\n            <Text\n              style={{ fontSize: '14px', color: getColor('greyText') }}\n              ml=\"xs\"\n            >\n              USDFL\n            </Text>\n          </>\n        }\n      />\n      <InfoContainerRow\n        title={lang.save.dai_savings_rate}\n        value={\n          annualDaiSavingsRate ? (\n            <TextMono style={{ fontSize: '14px', color: getColor('greyText') }}>\n              {formatter(annualDaiSavingsRate, {\n                rounding: BigNumber.ROUND_HALF_UP\n              })}\n              %\n            </TextMono>\n          ) : (\n            '--'\n          )\n        }\n      />\n    </CdpViewCard>\n  );\n}\n\nexport default DSRInfo;\n"]},"metadata":{},"sourceType":"module"}