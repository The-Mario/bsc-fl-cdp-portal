{"ast":null,"code":"import _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport config from 'references/config';\nexport function networkNameToId(networkName) {\n  var entry = Object.entries(config.networkNames).find(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[1];\n\n    return name === networkName;\n  });\n  return entry ? entry[0] : null;\n}\nexport function networkIdToName(networkId) {\n  return config.networkNames[networkId];\n}\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(networkNameToId, \"networkNameToId\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/network.js\");\n  reactHotLoader.register(networkIdToName, \"networkIdToName\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/network.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/utils/network.js"],"names":["config","networkNameToId","networkName","entry","Object","entries","networkNames","find","name","networkIdToName","networkId"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAO,SAASC,eAAT,CAAyBC,WAAzB,EAAsC;AAC3C,MAAMC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeL,MAAM,CAACM,YAAtB,EAAoCC,IAApC,CACZ;AAAA;AAAA,QAAIC,IAAJ;;AAAA,WAAcA,IAAI,KAAKN,WAAvB;AAAA,GADY,CAAd;AAIA,SAAOC,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,IAA1B;AACD;AAED,OAAO,SAASM,eAAT,CAAyBC,SAAzB,EAAoC;AACzC,SAAOV,MAAM,CAACM,YAAP,CAAoBI,SAApB,CAAP;AACD;;;;;;;;;;0BAVeT,e;0BAQAQ,e","sourcesContent":["import config from 'references/config';\n\nexport function networkNameToId(networkName) {\n  const entry = Object.entries(config.networkNames).find(\n    ([, name]) => name === networkName\n  );\n\n  return entry ? entry[0] : null;\n}\n\nexport function networkIdToName(networkId) {\n  return config.networkNames[networkId];\n}\n"]},"metadata":{},"sourceType":"module"}