{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Dropdown, Box, Text, Grid, Flex } from '@makerdao/ui-components-core';\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon';\nimport { useCurrentRoute } from 'react-navi';\nimport styled, { css } from 'styled-components';\nimport { cutMiddle } from 'utils/ui';\nimport { getWebClientProviderName } from 'utils/web3';\nimport useMaker from 'hooks/useMaker';\nimport { useLedger, useTrezor, useDcent } from 'hooks/useHardwareWallet';\nimport useBrowserIcon from 'hooks/useBrowserIcon';\nimport useBrowserProvider from 'hooks/useBrowserProvider';\nimport useLanguage from 'hooks/useLanguage';\nimport { getMeasurement } from 'styles/theme';\nimport { AccountTypes, Routes } from 'utils/constants';\nimport { BrowserView } from 'react-device-detect';\nimport { ReactComponent as LedgerLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/ledger.svg\";\nimport { ReactComponent as WalletLinkLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/wallet-link.svg\";\nimport { ReactComponent as DisconnectIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/disconnect.svg\";\nimport { ReactComponent as TrezorLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/trezor.svg\";\nimport { ReactComponent as WalletConnectLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/wallet-connect.svg\";\nimport { ReactComponent as DCentLogo } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/dcent.svg\";\nvar negativeMarginY = css([\"margin-top:-5px;margin-bottom:-5px;\"]);\nvar StyledLedgerLogo = styled(LedgerLogo).withConfig({\n  displayName: \"WalletConnectDropdown__StyledLedgerLogo\",\n  componentId: \"sc-138oysy-0\"\n})([\"max-width:14px;position:relative;top:4px;\"]);\nvar StyledWalletLinkLogo = styled(WalletLinkLogo).withConfig({\n  displayName: \"WalletConnectDropdown__StyledWalletLinkLogo\",\n  componentId: \"sc-138oysy-1\"\n})([\"\", \";height:21px;width:21px;\"], negativeMarginY);\nvar StyledTrezorLogo = styled(TrezorLogo).withConfig({\n  displayName: \"WalletConnectDropdown__StyledTrezorLogo\",\n  componentId: \"sc-138oysy-2\"\n})([\"\", \";\"], negativeMarginY);\nvar StyledDcentLogo = styled(DCentLogo).withConfig({\n  displayName: \"WalletConnectDropdown__StyledDcentLogo\",\n  componentId: \"sc-138oysy-3\"\n})([\"\", \";\"], negativeMarginY);\nvar StyledWalletConnectLogo = styled(WalletConnectLogo).withConfig({\n  displayName: \"WalletConnectDropdown__StyledWalletConnectLogo\",\n  componentId: \"sc-138oysy-4\"\n})([\"\", \";\"], negativeMarginY);\nvar IconBox = styled(Box).withConfig({\n  displayName: \"WalletConnectDropdown__IconBox\",\n  componentId: \"sc-138oysy-5\"\n})([\"& > svg{display:inline-block;width:20px;height:20px;}width:26px;text-align:center;\"]);\n\nvar _StyledBox = styled(Box).withConfig({\n  displayName: \"WalletConnectDropdown___StyledBox\",\n  componentId: \"sc-138oysy-6\"\n})([\"cursor:pointer;&:hover{background-color:#191e2b;}\"]);\n\nvar Option = function Option(_ref) {\n  var icon = _ref.icon,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(_StyledBox, Object.assign({\n    py: \"xs\",\n    px: \"s\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, icon), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '14px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    p: \"body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, children))));\n};\n\nvar _StyledCard = styled(Card).withConfig({\n  displayName: \"WalletConnectDropdown___StyledCard\",\n  componentId: \"sc-138oysy-7\"\n})([\"border-top-right-radius:0;border-top-left-radius:0;\"]);\n\nvar WalletConnectDropdown = function WalletConnectDropdown(_ref2) {\n  var trigger = _ref2.trigger,\n      _ref2$close = _ref2.close,\n      close = _ref2$close === void 0 ? function () {} : _ref2$close,\n      props = _objectWithoutProperties(_ref2, [\"trigger\", \"close\"]);\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker,\n      account = _useMaker.account,\n      connectBrowserProvider = _useMaker.connectBrowserProvider,\n      connectToProviderOfType = _useMaker.connectToProviderOfType,\n      navigation = _useMaker.navigation,\n      disconnect = _useMaker.disconnect;\n\n  var _useLedger = useLedger({\n    onAccountChosen: onAccountChosen\n  }),\n      connectLedgerWallet = _useLedger.connectLedgerWallet;\n\n  var _useTrezor = useTrezor({\n    onAccountChosen: onAccountChosen\n  }),\n      connectTrezorWallet = _useTrezor.connectTrezorWallet;\n\n  var _useDcent = useDcent({\n    onAccountChosen: onAccountChosen\n  }),\n      connectDcentWallet = _useDcent.connectDcentWallet;\n\n  var _useBrowserProvider = useBrowserProvider(),\n      activeAccountAddress = _useBrowserProvider.activeAccountAddress;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      otherAccounts = _useState2[0],\n      setOtherAccounts = _useState2[1];\n\n  var _useCurrentRoute = useCurrentRoute(),\n      url = _useCurrentRoute.url;\n\n  var providerName = getWebClientProviderName();\n  var browserIcon = useBrowserIcon(providerName);\n\n  function onAccountChosen(_ref3) {\n    var address = _ref3.address;\n\n    if (url.pathname.startsWith(\"/\".concat(Routes.SAVE, \"/owner/\"))) {\n      var urlAddress = url.pathname.split('/')[url.pathname.length - 1];\n\n      if (address !== urlAddress) {\n        navigation.navigate(\"/\".concat(Routes.SAVE, \"/owner/\").concat(address).concat(url.search));\n      }\n    }\n\n    maker.useAccountWithAddress(address);\n  }\n\n  __signature__(onAccountChosen, \"useAccountWithAddress{}\");\n\n  useEffect(function () {\n    if (!account) return;\n    var accounts = maker.listAccounts();\n    var otherAccounts = accounts.filter(function (a) {\n      return a.address !== account.address && (account.type !== 'browser' || a.type !== 'browser') && (account.type === 'browser' || a.address === activeAccountAddress);\n    });\n    setOtherAccounts(otherAccounts);\n  }, [maker, account, activeAccountAddress]);\n  var hasBrowserAccount = account && (account.type === 'browser' || otherAccounts.some(function (a) {\n    return a.type === 'browser';\n  }));\n\n  function connectBrowserWallet() {\n    return _connectBrowserWallet.apply(this, arguments);\n  }\n\n  function _connectBrowserWallet() {\n    _connectBrowserWallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var connectedAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return connectBrowserProvider();\n\n            case 3:\n              connectedAddress = _context.sent;\n              onAccountChosen({\n                address: connectedAddress\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              window.alert(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return _connectBrowserWallet.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(Dropdown, Object.assign({\n    trigger: trigger,\n    display: \"block\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(_StyledCard, {\n    width: getMeasurement('sidebarWidth'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, otherAccounts.map(function (account) {\n    var providerType = account.type === 'browser' ? providerName : account.type;\n    return /*#__PURE__*/React.createElement(Option, {\n      key: account.address,\n      onClick: function onClick() {\n        onAccountChosen(account, account.type);\n        close();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      justifyContent: \"start\",\n      alignItems: \"center\",\n      gridColumnGap: \"xs\",\n      gridTemplateColumns: \"auto auto auto\",\n      fontWeight: \"semibold\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Jazzicon, {\n      diameter: 22,\n      seed: jsNumberForAddress(account.address),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      t: \"body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, lang.providers[providerType]), /*#__PURE__*/React.createElement(Text, {\n      t: \"body\",\n      fontSize: \"l\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, cutMiddle(account.address, 7, 5))));\n  }), !hasBrowserAccount && /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      connectBrowserWallet();\n      close();\n    },\n    icon: browserIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.connect_to, providerName !== '' ? lang.providers[providerName] : providerName)), /*#__PURE__*/React.createElement(BrowserView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      connectLedgerWallet();\n      close();\n    },\n    icon: /*#__PURE__*/React.createElement(StyledLedgerLogo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.connect_to, 'Ledger Nano'))), /*#__PURE__*/React.createElement(BrowserView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      connectTrezorWallet();\n      close();\n    },\n    icon: /*#__PURE__*/React.createElement(StyledTrezorLogo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.connect_to, 'Trezor'))), /*#__PURE__*/React.createElement(BrowserView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      connectToProviderOfType(AccountTypes.WALLETCONNECT);\n      close();\n    },\n    icon: /*#__PURE__*/React.createElement(StyledWalletConnectLogo, {\n      style: {\n        width: '26.67px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, lang.landing_page.wallet_connect)), /*#__PURE__*/React.createElement(BrowserView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      connectToProviderOfType(AccountTypes.WALLETLINK);\n      close();\n    },\n    icon: /*#__PURE__*/React.createElement(StyledWalletLinkLogo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, lang.landing_page.wallet_link)), /*#__PURE__*/React.createElement(BrowserView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      connectDcentWallet();\n      close();\n    },\n    icon: /*#__PURE__*/React.createElement(StyledDcentLogo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, lang.providers.dcent)), account && /*#__PURE__*/React.createElement(BrowserView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    onClick: function onClick() {\n      disconnect();\n      close();\n    },\n    icon: /*#__PURE__*/React.createElement(DisconnectIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, lang.disconnect))));\n};\n\n__signature__(WalletConnectDropdown, \"useLanguage{{ lang }}\\nuseMaker{{\\n    maker,\\n    account,\\n    connectBrowserProvider,\\n    connectToProviderOfType,\\n    navigation,\\n    disconnect\\n  }}\\nuseLedger{{ connectLedgerWallet }}\\nuseTrezor{{ connectTrezorWallet }}\\nuseDcent{{ connectDcentWallet }}\\nuseBrowserProvider{{ activeAccountAddress }}\\nuseState{[otherAccounts, setOtherAccounts]([])}\\nuseCurrentRoute{{ url }}\\nuseBrowserIcon{browserIcon}\\nuseEffect{}\", function () {\n  return [useLanguage, useMaker, useLedger, useTrezor, useDcent, useBrowserProvider, useCurrentRoute, useBrowserIcon];\n});\n\nvar _default = WalletConnectDropdown;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(negativeMarginY, \"negativeMarginY\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(StyledLedgerLogo, \"StyledLedgerLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(StyledWalletLinkLogo, \"StyledWalletLinkLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(StyledTrezorLogo, \"StyledTrezorLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(StyledDcentLogo, \"StyledDcentLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(StyledWalletConnectLogo, \"StyledWalletConnectLogo\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(IconBox, \"IconBox\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(Option, \"Option\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(WalletConnectDropdown, \"WalletConnectDropdown\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/WalletConnectDropdown.js"],"names":["React","useEffect","useState","Card","Dropdown","Box","Text","Grid","Flex","Jazzicon","jsNumberForAddress","useCurrentRoute","styled","css","cutMiddle","getWebClientProviderName","useMaker","useLedger","useTrezor","useDcent","useBrowserIcon","useBrowserProvider","useLanguage","getMeasurement","AccountTypes","Routes","BrowserView","negativeMarginY","StyledLedgerLogo","LedgerLogo","StyledWalletLinkLogo","WalletLinkLogo","StyledTrezorLogo","TrezorLogo","StyledDcentLogo","DCentLogo","StyledWalletConnectLogo","WalletConnectLogo","IconBox","Option","icon","children","props","marginLeft","WalletConnectDropdown","trigger","close","lang","maker","account","connectBrowserProvider","connectToProviderOfType","navigation","disconnect","onAccountChosen","connectLedgerWallet","connectTrezorWallet","connectDcentWallet","activeAccountAddress","otherAccounts","setOtherAccounts","url","providerName","browserIcon","address","pathname","startsWith","SAVE","urlAddress","split","length","navigate","search","useAccountWithAddress","accounts","listAccounts","filter","a","type","hasBrowserAccount","some","connectBrowserWallet","connectedAddress","window","alert","map","providerType","providers","formatString","connect_to","WALLETCONNECT","width","landing_page","wallet_connect","WALLETLINK","wallet_link","dcent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Card,\n  Dropdown,\n  Box,\n  Text,\n  Grid,\n  Flex\n} from '@makerdao/ui-components-core';\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon';\nimport { useCurrentRoute } from 'react-navi';\nimport styled, { css } from 'styled-components';\n\nimport { cutMiddle } from 'utils/ui';\nimport { getWebClientProviderName } from 'utils/web3';\nimport useMaker from 'hooks/useMaker';\nimport { useLedger, useTrezor, useDcent } from 'hooks/useHardwareWallet';\nimport useBrowserIcon from 'hooks/useBrowserIcon';\nimport useBrowserProvider from 'hooks/useBrowserProvider';\nimport useLanguage from 'hooks/useLanguage';\nimport { getMeasurement } from 'styles/theme';\nimport { AccountTypes, Routes } from 'utils/constants';\nimport { BrowserView } from 'react-device-detect';\nimport { ReactComponent as LedgerLogo } from 'images/ledger.svg';\nimport { ReactComponent as WalletLinkLogo } from 'images/wallet-link.svg';\nimport { ReactComponent as DisconnectIcon } from 'images/disconnect.svg';\nimport { ReactComponent as TrezorLogo } from 'images/trezor.svg';\nimport { ReactComponent as WalletConnectLogo } from 'images/wallet-connect.svg';\nimport { ReactComponent as DCentLogo } from 'images/dcent.svg';\n\nconst negativeMarginY = css`\n  margin-top: -5px;\n  margin-bottom: -5px;\n`;\n\nconst StyledLedgerLogo = styled(LedgerLogo)`\n  max-width: 14px;\n  position: relative;\n  top: 4px;\n`;\n\nconst StyledWalletLinkLogo = styled(WalletLinkLogo)`\n  ${negativeMarginY};\n  height: 21px;\n  width: 21px;\n`;\n\nconst StyledTrezorLogo = styled(TrezorLogo)`\n  ${negativeMarginY};\n`;\n\nconst StyledDcentLogo = styled(DCentLogo)`\n  ${negativeMarginY};\n`;\n\nconst StyledWalletConnectLogo = styled(WalletConnectLogo)`\n  ${negativeMarginY};\n`;\n\nconst IconBox = styled(Box)`\n  & > svg {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n  }\n  width: 26px;\n  text-align: center;\n`;\n\nconst Option = ({ icon, children, ...props }) => {\n  return (\n    <Box\n      py=\"xs\"\n      px=\"s\"\n      css={`\n        cursor: pointer;\n        &:hover {\n          background-color: #191e2b;\n        }\n      `}\n      {...props}\n    >\n      <Flex alignItems=\"center\">\n        <IconBox>{icon}</IconBox>\n        <span style={{ marginLeft: '14px' }}>\n          <Text p=\"body\">{children}</Text>\n        </span>\n      </Flex>\n    </Box>\n  );\n};\n\nconst WalletConnectDropdown = ({ trigger, close = () => {}, ...props }) => {\n  const { lang } = useLanguage();\n  const {\n    maker,\n    account,\n    connectBrowserProvider,\n    connectToProviderOfType,\n    navigation,\n    disconnect\n  } = useMaker();\n  const { connectLedgerWallet } = useLedger({ onAccountChosen });\n  const { connectTrezorWallet } = useTrezor({ onAccountChosen });\n  const { connectDcentWallet } = useDcent({ onAccountChosen });\n  const { activeAccountAddress } = useBrowserProvider();\n  const [otherAccounts, setOtherAccounts] = useState([]);\n  const { url } = useCurrentRoute();\n\n  const providerName = getWebClientProviderName();\n  const browserIcon = useBrowserIcon(providerName);\n\n  function onAccountChosen({ address }) {\n    if (url.pathname.startsWith(`/${Routes.SAVE}/owner/`)) {\n      const urlAddress = url.pathname.split('/')[url.pathname.length - 1];\n      if (address !== urlAddress) {\n        navigation.navigate(`/${Routes.SAVE}/owner/${address}${url.search}`);\n      }\n    }\n    maker.useAccountWithAddress(address);\n  }\n\n  useEffect(() => {\n    if (!account) return;\n    const accounts = maker.listAccounts();\n    const otherAccounts = accounts.filter(\n      a =>\n        a.address !== account.address &&\n        (account.type !== 'browser' || a.type !== 'browser') &&\n        (account.type === 'browser' || a.address === activeAccountAddress)\n    );\n    setOtherAccounts(otherAccounts);\n  }, [maker, account, activeAccountAddress]);\n\n  const hasBrowserAccount =\n    account &&\n    (account.type === 'browser' ||\n      otherAccounts.some(a => a.type === 'browser'));\n\n  async function connectBrowserWallet() {\n    try {\n      const connectedAddress = await connectBrowserProvider();\n      onAccountChosen({ address: connectedAddress });\n    } catch (err) {\n      window.alert(err);\n    }\n  }\n\n  return (\n    <Dropdown trigger={trigger} display=\"block\" {...props}>\n      <Card\n        width={getMeasurement('sidebarWidth')}\n        css={`\n          border-top-right-radius: 0;\n          border-top-left-radius: 0;\n        `}\n      >\n        {otherAccounts.map(account => {\n          const providerType =\n            account.type === 'browser' ? providerName : account.type;\n          return (\n            <Option\n              key={account.address}\n              onClick={() => {\n                onAccountChosen(account, account.type);\n                close();\n              }}\n            >\n              <Grid\n                justifyContent=\"start\"\n                alignItems=\"center\"\n                gridColumnGap=\"xs\"\n                gridTemplateColumns=\"auto auto auto\"\n                fontWeight=\"semibold\"\n              >\n                <Jazzicon\n                  diameter={22}\n                  seed={jsNumberForAddress(account.address)}\n                />\n                <Text t=\"body\">{lang.providers[providerType]}</Text>\n                <Text t=\"body\" fontSize=\"l\">\n                  {cutMiddle(account.address, 7, 5)}\n                </Text>\n              </Grid>\n            </Option>\n          );\n        })}\n        {!hasBrowserAccount && (\n          <Option\n            onClick={() => {\n              connectBrowserWallet();\n              close();\n            }}\n            icon={browserIcon}\n          >\n            {lang.formatString(\n              lang.connect_to,\n              providerName !== '' ? lang.providers[providerName] : providerName\n            )}\n          </Option>\n        )}\n        <BrowserView>\n          <Option\n            onClick={() => {\n              connectLedgerWallet();\n              close();\n            }}\n            icon={<StyledLedgerLogo />}\n          >\n            {lang.formatString(lang.connect_to, 'Ledger Nano')}\n          </Option>\n        </BrowserView>\n        <BrowserView>\n          <Option\n            onClick={() => {\n              connectTrezorWallet();\n              close();\n            }}\n            icon={<StyledTrezorLogo />}\n          >\n            {lang.formatString(lang.connect_to, 'Trezor')}\n          </Option>\n        </BrowserView>\n        <BrowserView>\n          <Option\n            onClick={() => {\n              connectToProviderOfType(AccountTypes.WALLETCONNECT);\n              close();\n            }}\n            icon={<StyledWalletConnectLogo style={{ width: '26.67px' }} />}\n          >\n            {lang.landing_page.wallet_connect}\n          </Option>\n        </BrowserView>\n        <BrowserView>\n          <Option\n            onClick={() => {\n              connectToProviderOfType(AccountTypes.WALLETLINK);\n              close();\n            }}\n            icon={<StyledWalletLinkLogo />}\n          >\n            {lang.landing_page.wallet_link}\n          </Option>\n        </BrowserView>\n        <BrowserView>\n          <Option\n            onClick={() => {\n              connectDcentWallet();\n              close();\n            }}\n            icon={<StyledDcentLogo />}\n          >\n            {lang.providers.dcent}\n          </Option>\n        </BrowserView>\n        {account && (\n          <BrowserView>\n            <Option\n              onClick={() => {\n                disconnect();\n                close();\n              }}\n              icon={<DisconnectIcon />}\n            >\n              {lang.disconnect}\n            </Option>\n          </BrowserView>\n        )}\n      </Card>\n    </Dropdown>\n  );\n};\n\nexport default WalletConnectDropdown;\n"]},"metadata":{},"sourceType":"module"}