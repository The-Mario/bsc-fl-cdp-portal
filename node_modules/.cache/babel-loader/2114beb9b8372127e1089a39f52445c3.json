{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useEffect, useState, useRef } from 'react';\nimport { pollTokenPrices } from 'utils/ethereum';\nimport useInterval from 'hooks/useInterval';\nimport useMaker from 'hooks/useMaker';\nimport BigNumber from 'bignumber.js';\n\nfunction useOraclePrices(_ref) {\n  var gem = _ref.gem,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === void 0 ? 5 * 1000 : _ref$interval;\n\n  var _useState = useState({\n    currentPrice: null,\n    nextPrice: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      prices = _useState2[0],\n      setPrices = _useState2[1];\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var isValidNetwork = ['mainnet', 'kovan'].some(function (network) {\n    return network === maker.service('web3').networkName;\n  });\n  var isValidGem = ['ETH', 'BAT'].some(function (g) {\n    return g === gem;\n  });\n  var isCancelled = useRef(false);\n  useInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$pollTokenPrice, currentPrice, nextPrice;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!isValidNetwork || !isValidGem)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!isCancelled.current) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            _context.next = 6;\n            return pollTokenPrices(maker, gem);\n\n          case 6:\n            _yield$pollTokenPrice = _context.sent;\n            currentPrice = _yield$pollTokenPrice.currentPrice;\n            nextPrice = _yield$pollTokenPrice.nextPrice;\n\n            if (!isCancelled.current) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 11:\n            setPrices({\n              currentPrice: currentPrice,\n              nextPrice: nextPrice\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), interval); // useEffect necessary as useInterval hooks does not perform fetch immediately\n\n  useEffect(function () {\n    if (!isValidNetwork || !isValidGem) return;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$pollTokenPrice2, currentPrice, nextPrice;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!isCancelled.current) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              _context2.next = 4;\n              return pollTokenPrices(maker, gem);\n\n            case 4:\n              _yield$pollTokenPrice2 = _context2.sent;\n              currentPrice = _yield$pollTokenPrice2.currentPrice;\n              nextPrice = _yield$pollTokenPrice2.nextPrice;\n\n              if (!isCancelled.current) {\n                _context2.next = 9;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              setPrices({\n                currentPrice: currentPrice,\n                nextPrice: nextPrice\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n\n    return function () {\n      return isCancelled.current = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (gem === 'USDC') return {\n    currentPrice: BigNumber(1),\n    nextPrice: BigNumber(1)\n  };\n  return prices;\n}\n\n__signature__(useOraclePrices, \"useState{[prices, setPrices]({\\n    currentPrice: null,\\n    nextPrice: null\\n  })}\\nuseMaker{{ maker }}\\nuseRef{isCancelled}\\nuseInterval{}\\nuseEffect{}\", function () {\n  return [useMaker, useInterval];\n});\n\nvar _default = useOraclePrices;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useOraclePrices, \"useOraclePrices\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useOraclePrices.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useOraclePrices.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/hooks/useOraclePrices.js"],"names":["useEffect","useState","useRef","pollTokenPrices","useInterval","useMaker","BigNumber","useOraclePrices","gem","interval","currentPrice","nextPrice","prices","setPrices","maker","isValidNetwork","some","network","service","networkName","isValidGem","g","isCancelled","current"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { pollTokenPrices } from 'utils/ethereum';\nimport useInterval from 'hooks/useInterval';\nimport useMaker from 'hooks/useMaker';\nimport BigNumber from 'bignumber.js';\n\nfunction useOraclePrices({ gem, interval = 5 * 1000 }) {\n  const [prices, setPrices] = useState({\n    currentPrice: null,\n    nextPrice: null\n  });\n  const { maker } = useMaker();\n\n  const isValidNetwork = ['mainnet', 'kovan'].some(\n    network => network === maker.service('web3').networkName\n  );\n\n  const isValidGem = ['ETH', 'BAT'].some(g => g === gem);\n\n  const isCancelled = useRef(false);\n  useInterval(async () => {\n    if (!isValidNetwork || !isValidGem) return;\n    if (isCancelled.current) return;\n    const { currentPrice, nextPrice } = await pollTokenPrices(maker, gem);\n    if (isCancelled.current) return;\n    setPrices({\n      currentPrice,\n      nextPrice\n    });\n  }, interval);\n\n  // useEffect necessary as useInterval hooks does not perform fetch immediately\n  useEffect(() => {\n    if (!isValidNetwork || !isValidGem) return;\n    (async () => {\n      if (isCancelled.current) return;\n      const { currentPrice, nextPrice } = await pollTokenPrices(maker, gem);\n      if (isCancelled.current) return;\n      setPrices({\n        currentPrice,\n        nextPrice\n      });\n    })();\n    return () => (isCancelled.current = true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (gem === 'USDC')\n    return {\n      currentPrice: BigNumber(1),\n      nextPrice: BigNumber(1)\n    };\n  return prices;\n}\n\nexport default useOraclePrices;\n"]},"metadata":{},"sourceType":"module"}