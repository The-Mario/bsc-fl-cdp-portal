{"ast":null,"code":"import _toConsumableArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { Box, Text, Card, CardBody, Button, Flex } from '@makerdao/ui-components-core';\nimport { getColor, getSpace } from 'styles/theme';\nimport ActiveAccount from 'components/ActiveAccount';\nimport StripedRows from 'components/StripedRows';\nimport WalletConnectDropdown from 'components/WalletConnectDropdown';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useSidebar from 'hooks/useSidebar';\nimport useLanguage from 'hooks/useLanguage';\nimport { showWalletTokens } from 'references/config';\nimport { prettifyNumber } from 'utils/ui';\nimport { Toggles } from 'utils/constants';\nimport useToggle from 'hooks/useToggle';\nimport useAnalytics from 'hooks/useAnalytics';\nimport styled from 'styled-components';\nimport Carat from './Carat';\nimport { Link, useCurrentRoute } from 'react-navi';\nimport { Routes } from 'utils/constants';\nimport theme from '../styles/theme';\nimport FullScreenAction from './CDPDisplay/FullScreenAction';\nimport useCdpTypes from '../hooks/useCdpTypes';\nimport { watch } from 'hooks/useObservable';\nvar StyledCardBody = styled(CardBody).withConfig({\n  displayName: \"AccountBox__StyledCardBody\",\n  componentId: \"qq7vt9-0\"\n})([\"cursor:pointer;border-top:1px solid \", \" !important;\"], getColor('border'));\n\nvar ActionButton = function ActionButton(_ref) {\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return /*#__PURE__*/React.createElement(Button, Object.assign({\n    variant: \"secondary-outline\",\n    px: \"4px\",\n    py: \"1px\",\n    minWidth: \"4.5rem\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    t: \"smallCaps\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, children));\n};\n\nvar TokenBalance = function TokenBalance(_ref2) {\n  var symbol = _ref2.symbol,\n      amount = _ref2.amount,\n      usdRatio = _ref2.usdRatio,\n      button = _ref2.button,\n      hasActiveAccount = _ref2.hasActiveAccount,\n      props = _objectWithoutProperties(_ref2, [\"symbol\", \"amount\", \"usdRatio\", \"button\", \"hasActiveAccount\"]);\n\n  return /*#__PURE__*/React.createElement(Flex, Object.assign({\n    key: \"wb_\".concat(symbol),\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    px: \"s\",\n    py: \"xs\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: \"semibold\",\n    t: \"p5\",\n    textAlign: \"left\",\n    width: \"70%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, symbol), /*#__PURE__*/React.createElement(Text, {\n    fontWeight: \"semibold\",\n    t: \"p5\",\n    textAlign: \"left\",\n    width: \"30%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, hasActiveAccount && amount && usdRatio && \"$ \".concat(prettifyNumber(amount.times(usdRatio.toNumber()), {\n    truncate: true\n  }, 2)) || '--'));\n};\n\nvar WalletBalances = function WalletBalances(_ref3) {\n  var hasActiveAccount = _ref3.hasActiveAccount,\n      closeSidebarDrawer = _ref3.closeSidebarDrawer;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useCurrentRoute = useCurrentRoute(),\n      url = _useCurrentRoute.url;\n\n  var _useAnalytics = useAnalytics('WalletBalances'),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      actionShown = _useState2[0],\n      setActionShown = _useState2[1];\n\n  var balances = useWalletBalances();\n\n  var _useSidebar = useSidebar(),\n      showSidebar = _useSidebar.show;\n\n  var _useCdpTypes = useCdpTypes(),\n      cdpTypesList = _useCdpTypes.cdpTypesList;\n\n  var prices = watch.collateralTypesPrices(cdpTypesList);\n  var uniqueFeeds = useMemo(function () {\n    return prices ? prices.reduce(function (acc, price) {\n      var _price$symbol$split = price.symbol.split('/'),\n          _price$symbol$split2 = _slicedToArray(_price$symbol$split, 2),\n          symbol = _price$symbol$split2[1];\n\n      acc[symbol] = price;\n      return acc;\n    }, {}) : {};\n  }, [prices]);\n\n  var showAction = function showAction(props) {\n    var emSize = parseInt(getComputedStyle(document.body).fontSize);\n    var pxBreakpoint = parseInt(theme.breakpoints.l) * emSize;\n    var isMobile = document.documentElement.clientWidth < pxBreakpoint;\n\n    if (isMobile) {\n      closeSidebarDrawer();\n      setActionShown(props);\n    } else {\n      showSidebar(props);\n    }\n  };\n\n  var tokenBalances = useMemo(function () {\n    return showWalletTokens.reduceRight(function (acc, token) {\n      var balanceGtZero = !!(balances[token] && balances[token].gt(0));\n      if (token !== 'ETH' && token !== 'USDFL' && !balanceGtZero) return acc;\n      var symbol = token;\n      var tokenIsDaiOrDsr = token === 'USDFL' || token === 'SAI' || token === 'DSR';\n      var usdRatio = tokenIsDaiOrDsr ? new BigNumber(1) : token === 'WETH' ? uniqueFeeds['ETH'] : uniqueFeeds[token];\n      return [{\n        token: token,\n        amount: balances[token],\n        symbol: symbol,\n        usdRatio: usdRatio\n      }].concat(_toConsumableArray(acc));\n    }, []);\n  }, [balances, uniqueFeeds]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardBody, {\n    style: {\n      background: getColor('cardBg'),\n      borderColor: getColor('border'),\n      color: getColor('whiteText')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    px: \"s\",\n    pt: \"sm\",\n    pb: \"s2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    t: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, lang.sidebar.wallet_balances)), /*#__PURE__*/React.createElement(Flex, {\n    justifyContent: \"space-between\",\n    px: \"s\",\n    mb: \"4px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"steel\",\n    fontWeight: \"bold\",\n    t: \"smallCaps\",\n    width: \"70%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, lang.sidebar.asset), /*#__PURE__*/React.createElement(Text, {\n    color: \"steel\",\n    fontWeight: \"bold\",\n    t: \"smallCaps\",\n    width: \"30%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, lang.sidebar.balance)), /*#__PURE__*/React.createElement(StripedRows, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, tokenBalances.map(function (_ref4, idx) {\n    var amount = _ref4.amount,\n        symbol = _ref4.symbol,\n        usdRatio = _ref4.usdRatio;\n    return /*#__PURE__*/React.createElement(TokenBalance, {\n      key: \"tokenbalance_\".concat(idx),\n      symbol: symbol,\n      amount: amount,\n      usdRatio: usdRatio,\n      hasActiveAccount: hasActiveAccount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\n__signature__(WalletBalances, \"useLanguage{{ lang }}\\nuseCurrentRoute{{ url }}\\nuseAnalytics{{ trackBtnClick }}\\nuseState{[actionShown, setActionShown](null)}\\nuseWalletBalances{balances}\\nuseSidebar{{ show: showSidebar }}\\nuseCdpTypes{{ cdpTypesList }}\\nuseMemo{uniqueFeeds}\\nuseMemo{tokenBalances}\", function () {\n  return [useLanguage, useCurrentRoute, useAnalytics, useWalletBalances, useSidebar, useCdpTypes];\n});\n\nfunction AccountBox(_ref5) {\n  var currentAccount = _ref5.currentAccount,\n      closeSidebarDrawer = _ref5.closeSidebarDrawer;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var toggleDropdown = useCallback(function () {\n    return setOpen(!open);\n  }, [open, setOpen]);\n  var closeDropdown = useCallback(function () {\n    return setOpen(false);\n  }, [setOpen]);\n  var address = currentAccount ? currentAccount.address : null;\n  var type = currentAccount ? currentAccount.type : null;\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      background: getColor('cardBg'),\n      borderColor: getColor('border'),\n      color: getColor('cayn')\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    p: \"s\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WalletConnectDropdown, {\n    show: open,\n    offset: \"-\".concat(getSpace('s') + 1, \", 0\"),\n    openOnHover: false,\n    onClick: toggleDropdown,\n    close: closeDropdown,\n    trigger: /*#__PURE__*/React.createElement(ActiveAccount, {\n      address: address,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(WalletBalances, {\n    hasActiveAccount: !!currentAccount,\n    closeSidebarDrawer: closeSidebarDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }));\n}\n\n__signature__(AccountBox, \"useState{[open, setOpen](false)}\\nuseCallback{toggleDropdown}\\nuseCallback{closeDropdown}\");\n\nvar _default = AccountBox;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StyledCardBody, \"StyledCardBody\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\");\n  reactHotLoader.register(ActionButton, \"ActionButton\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\");\n  reactHotLoader.register(TokenBalance, \"TokenBalance\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\");\n  reactHotLoader.register(WalletBalances, \"WalletBalances\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\");\n  reactHotLoader.register(AccountBox, \"AccountBox\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/AccountBox.js"],"names":["React","useState","useCallback","useMemo","BigNumber","Box","Text","Card","CardBody","Button","Flex","getColor","getSpace","ActiveAccount","StripedRows","WalletConnectDropdown","useWalletBalances","useSidebar","useLanguage","showWalletTokens","prettifyNumber","Toggles","useToggle","useAnalytics","styled","Carat","Link","useCurrentRoute","Routes","theme","FullScreenAction","useCdpTypes","watch","StyledCardBody","ActionButton","children","rest","TokenBalance","symbol","amount","usdRatio","button","hasActiveAccount","props","times","toNumber","truncate","WalletBalances","closeSidebarDrawer","lang","url","trackBtnClick","actionShown","setActionShown","balances","showSidebar","show","cdpTypesList","prices","collateralTypesPrices","uniqueFeeds","reduce","acc","price","split","showAction","emSize","parseInt","getComputedStyle","document","body","fontSize","pxBreakpoint","breakpoints","l","isMobile","documentElement","clientWidth","tokenBalances","reduceRight","token","balanceGtZero","gt","tokenIsDaiOrDsr","background","borderColor","color","sidebar","wallet_balances","asset","balance","map","idx","AccountBox","currentAccount","open","setOpen","toggleDropdown","closeDropdown","address","type"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport {\n  Box,\n  Text,\n  Card,\n  CardBody,\n  Button,\n  Flex\n} from '@makerdao/ui-components-core';\nimport { getColor, getSpace } from 'styles/theme';\nimport ActiveAccount from 'components/ActiveAccount';\nimport StripedRows from 'components/StripedRows';\nimport WalletConnectDropdown from 'components/WalletConnectDropdown';\nimport useWalletBalances from 'hooks/useWalletBalances';\nimport useSidebar from 'hooks/useSidebar';\nimport useLanguage from 'hooks/useLanguage';\nimport { showWalletTokens } from 'references/config';\nimport { prettifyNumber } from 'utils/ui';\nimport { Toggles } from 'utils/constants';\nimport useToggle from 'hooks/useToggle';\nimport useAnalytics from 'hooks/useAnalytics';\nimport styled from 'styled-components';\nimport Carat from './Carat';\nimport { Link, useCurrentRoute } from 'react-navi';\nimport { Routes } from 'utils/constants';\nimport theme from '../styles/theme';\nimport FullScreenAction from './CDPDisplay/FullScreenAction';\nimport useCdpTypes from '../hooks/useCdpTypes';\nimport { watch } from 'hooks/useObservable';\n\n\nconst StyledCardBody = styled(CardBody)`\n  cursor: pointer;\n  border-top: 1px solid ${getColor('border')} !important;\n`;\n\nconst ActionButton = ({ children, ...rest }) => (\n  <Button\n    variant=\"secondary-outline\"\n    px=\"4px\"\n    py=\"1px\"\n    minWidth=\"4.5rem\"\n    {...rest}\n  >\n    <Text t=\"smallCaps\">{children}</Text>\n  </Button>\n);\n\nconst TokenBalance = ({\n  symbol,\n  amount,\n  usdRatio,\n  button,\n  hasActiveAccount,\n  ...props\n}) => {\n  return (\n    <Flex\n      key={`wb_${symbol}`}\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      px=\"s\"\n      py=\"xs\"\n      {...props}\n    >\n      <Text fontWeight=\"semibold\" t=\"p5\" textAlign=\"left\" width=\"70%\">\n        {symbol}\n      </Text>\n      <Text fontWeight=\"semibold\" t=\"p5\" textAlign=\"left\" width=\"30%\">\n        {(hasActiveAccount && amount && usdRatio &&\n          `$ ${prettifyNumber(amount.times(usdRatio.toNumber()), { truncate: true }, 2)}`) || '--'}\n      </Text>\n    </Flex>\n  );\n};\n\nconst WalletBalances = ({ hasActiveAccount, closeSidebarDrawer }) => {\n  const { lang } = useLanguage();\n  const { url } = useCurrentRoute();\n  const { trackBtnClick } = useAnalytics('WalletBalances');\n  const [actionShown, setActionShown] = useState(null);\n\n  const balances = useWalletBalances();\n\n  const { show: showSidebar } = useSidebar();\n\n  const { cdpTypesList } = useCdpTypes();\n  const prices = watch.collateralTypesPrices(cdpTypesList);\n  const uniqueFeeds = useMemo(\n    () =>\n      prices\n        ? prices.reduce((acc, price) => {\n            const [, symbol] = price.symbol.split('/');\n            acc[symbol] = price;\n            return acc;\n          }, {})\n        : {},\n    [prices]\n  );\n\n  const showAction = props => {\n    const emSize = parseInt(getComputedStyle(document.body).fontSize);\n    const pxBreakpoint = parseInt(theme.breakpoints.l) * emSize;\n    const isMobile = document.documentElement.clientWidth < pxBreakpoint;\n    if (isMobile) {\n      closeSidebarDrawer();\n      setActionShown(props);\n    } else {\n      showSidebar(props);\n    }\n  };\n\n  const tokenBalances = useMemo(\n    () =>\n      showWalletTokens.reduceRight((acc, token) => {\n        const balanceGtZero = !!(balances[token] && balances[token].gt(0));\n        if (token !== 'ETH' && token !== 'USDFL' && !balanceGtZero) return acc;\n        const symbol = token;\n\n        const tokenIsDaiOrDsr =\n          token === 'USDFL' || token === 'SAI' || token === 'DSR';\n        const usdRatio = tokenIsDaiOrDsr\n          ? new BigNumber(1)\n          : token === 'WETH'\n          ? uniqueFeeds['ETH']\n          : uniqueFeeds[token];\n        return [\n          {\n            token,\n            amount: balances[token],\n            symbol,\n            usdRatio\n          },\n          ...acc\n        ];\n      }, []),\n    [balances, uniqueFeeds]\n  );\n\n  return (\n    <>\n      <CardBody\n        style={{\n          background: getColor('cardBg'),\n          borderColor: getColor('border'),\n          color: getColor('whiteText')\n        }}\n      >\n        <Box px=\"s\" pt=\"sm\" pb=\"s2\">\n          <Text t=\"large\">{lang.sidebar.wallet_balances}</Text>\n        </Box>\n        <Flex justifyContent=\"space-between\" px=\"s\" mb=\"4px\">\n          <Text color=\"steel\" fontWeight=\"bold\" t=\"smallCaps\" width=\"70%\">\n            {lang.sidebar.asset}\n          </Text>\n          <Text color=\"steel\" fontWeight=\"bold\" t=\"smallCaps\" width=\"30%\">\n            {lang.sidebar.balance}\n          </Text>\n        </Flex>\n\n        <StripedRows>\n          {tokenBalances.map(\n            ({ amount, symbol, usdRatio }, idx) =>\n                <TokenBalance\n                  key={`tokenbalance_${idx}`}\n                  symbol={symbol}\n                  amount={amount}\n                  usdRatio={usdRatio}\n                  hasActiveAccount={hasActiveAccount}\n                />\n              \n          )}\n        </StripedRows>\n      </CardBody>\n    </>\n  );\n};\n\nfunction AccountBox({ currentAccount, closeSidebarDrawer }) {\n  const [open, setOpen] = useState(false);\n  const toggleDropdown = useCallback(() => setOpen(!open), [open, setOpen]);\n  const closeDropdown = useCallback(() => setOpen(false), [setOpen]);\n  const address = currentAccount ? currentAccount.address : null;\n  const type = currentAccount ? currentAccount.type : null;\n\n  return (\n    <Card\n      style={{\n        background: getColor('cardBg'),\n        borderColor: getColor('border'),\n        color: getColor('cayn')\n      }}\n    >\n      <CardBody p=\"s\">\n        <WalletConnectDropdown\n          show={open}\n          offset={`-${getSpace('s') + 1}, 0`}\n          openOnHover={false}\n          onClick={toggleDropdown}\n          close={closeDropdown}\n          trigger={<ActiveAccount address={address} type={type} />}\n        />\n      </CardBody>\n      <WalletBalances\n        hasActiveAccount={!!currentAccount}\n        closeSidebarDrawer={closeSidebarDrawer}\n      />\n    </Card>\n  );\n}\n\nexport default AccountBox;\n"]},"metadata":{},"sourceType":"module"}