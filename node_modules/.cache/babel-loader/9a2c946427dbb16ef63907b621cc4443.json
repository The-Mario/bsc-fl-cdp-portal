{"ast":null,"code":"import _objectWithoutProperties from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RewardNav.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport { Link, useCurrentRoute } from 'react-navi';\nimport styled from 'styled-components';\nimport { Flex, Text } from '@makerdao/ui-components-core';\nimport { ReactComponent as RewardIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/landing/reward_nav.svg\";\nimport { Routes } from '../utils/constants';\nimport useLanguage from 'hooks/useLanguage';\nvar StyledRewardIcon = styled(RewardIcon).withConfig({\n  displayName: \"RewardNav__StyledRewardIcon\",\n  componentId: \"vley49-0\"\n})([\"width:30px;height:30px;text-align:center;\"]);\n\nvar RewardNav = function RewardNav(_ref) {\n  var account = _ref.account,\n      props = _objectWithoutProperties(_ref, [\"account\"]);\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useCurrentRoute = useCurrentRoute(),\n      url = _useCurrentRoute.url;\n\n  var selected = url.pathname.startsWith(\"/\".concat(Routes.REWARD));\n  var textColor = selected && account ? '#F3F3F5' : !selected && account ? '#6F7A96' : selected && !account ? '#6F7A96' : '#6F7A96';\n  var iconColor = selected && account ? '1' : !selected && account ? '0.35' : selected && !account ? '1' : '0.5';\n  var rewardUrl = \"/\".concat(Routes.REWARD, \"/owner/\").concat(account === null || account === void 0 ? void 0 : account.address).concat(url.search);\n  return /*#__PURE__*/React.createElement(Link, {\n    href: rewardUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, Object.assign({\n    bg: !account && selected && '#0B0E15',\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    py: \"s\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledRewardIcon, {\n    textcolor: textColor,\n    opacity: iconColor,\n    selected: selected,\n    connected: account,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    t: \"p6\",\n    fontWeight: \"bold\",\n    color: textColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, lang.navbar.reward)));\n};\n\n__signature__(RewardNav, \"useLanguage{{ lang }}\\nuseCurrentRoute{{ url }}\", function () {\n  return [useLanguage, useCurrentRoute];\n});\n\nvar _default = RewardNav;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StyledRewardIcon, \"StyledRewardIcon\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RewardNav.js\");\n  reactHotLoader.register(RewardNav, \"RewardNav\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RewardNav.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RewardNav.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/RewardNav.js"],"names":["React","Link","useCurrentRoute","styled","Flex","Text","Routes","useLanguage","StyledRewardIcon","RewardIcon","RewardNav","account","props","lang","url","selected","pathname","startsWith","REWARD","textColor","iconColor","rewardUrl","address","search","navbar","reward"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,eAAf,QAAsC,YAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,8BAA3B;;AAGA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,IAAMC,gBAAgB,GAAGL,MAAM,CAACM,UAAD,CAAT;AAAA;AAAA;AAAA,iDAAtB;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA2B;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAZC,KAAY;;AAAA,qBAC1BL,WAAW,EADe;AAAA,MACnCM,IADmC,gBACnCA,IADmC;;AAAA,yBAE3BX,eAAe,EAFY;AAAA,MAEnCY,GAFmC,oBAEnCA,GAFmC;;AAG3C,MAAMC,QAAQ,GAAGD,GAAG,CAACE,QAAJ,CAAaC,UAAb,YAA4BX,MAAM,CAACY,MAAnC,EAAjB;AAEA,MAAMC,SAAS,GACbJ,QAAQ,IAAIJ,OAAZ,GACI,SADJ,GAEI,CAACI,QAAD,IAAaJ,OAAb,GACA,SADA,GAEAI,QAAQ,IAAI,CAACJ,OAAb,GACA,SADA,GAEA,SAPN;AASA,MAAMS,SAAS,GACXL,QAAQ,IAAIJ,OAAZ,GACI,GADJ,GAEI,CAACI,QAAD,IAAaJ,OAAb,GACA,MADA,GAEAI,QAAQ,IAAI,CAACJ,OAAb,GACA,GADA,GAEA,KAPR;AASA,MAAMU,SAAS,cAAOf,MAAM,CAACY,MAAd,oBAA8BP,OAA9B,aAA8BA,OAA9B,uBAA8BA,OAAO,CAAEW,OAAvC,SAAiDR,GAAG,CAACS,MAArD,CAAf;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE,CAACV,OAAD,IAAYI,QAAZ,IAAwB,SAD9B;AAEE,IAAA,aAAa,EAAC,QAFhB;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,cAAc,EAAC,QAJjB;AAKE,IAAA,EAAE,EAAC;AALL,KAMMH,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEO,SADb;AAEE,IAAA,OAAO,EAAEC,SAFX;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAIE,IAAA,SAAS,EAAEJ,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE,oBAAC,IAAD;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,UAAU,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEQ,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACW,MAAL,CAAYC,MADf,CAfF,CADF,CADF;AAuBD,CA/CD;;cAAMf,S;UACaH,W,EACDL,e;;;eA+CHQ,S;AAAf;;;;;;;;;;0BAvDMF,gB;0BAMAE,S","sourcesContent":["import React from 'react';\nimport { Link, useCurrentRoute } from 'react-navi';\nimport styled from 'styled-components';\nimport { Flex, Text } from '@makerdao/ui-components-core';\n\nimport { ReactComponent as RewardIcon } from 'images/landing/reward_nav.svg';\nimport { Routes } from '../utils/constants';\nimport useLanguage from 'hooks/useLanguage';\n\nconst StyledRewardIcon = styled(RewardIcon)`\n  width: 30px;\n  height: 30px;\n  text-align: center;\n`;\n\nconst RewardNav = ({ account, ...props }) => {\n  const { lang } = useLanguage();\n  const { url } = useCurrentRoute();\n  const selected = url.pathname.startsWith(`/${Routes.REWARD}`);\n\n  const textColor =\n    selected && account\n      ? '#F3F3F5'\n      : !selected && account\n      ? '#6F7A96'\n      : selected && !account\n      ? '#6F7A96'\n      : '#6F7A96';\n\n  const iconColor =\n      selected && account\n        ? '1'\n        : !selected && account\n        ? '0.35'\n        : selected && !account\n        ? '1'\n        : '0.5';\n\n  const rewardUrl = `/${Routes.REWARD}/owner/${account?.address}${url.search}`;\n  return (\n    <Link href={rewardUrl}>\n      <Flex\n        bg={!account && selected && '#0B0E15'}\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        py=\"s\"\n        {...props}\n      >\n        <StyledRewardIcon\n          textcolor={textColor}\n          opacity={iconColor}\n          selected={selected}\n          connected={account}\n          \n        />\n        <Text t=\"p6\" fontWeight=\"bold\" color={textColor}>\n          {lang.navbar.reward}\n        </Text>\n      </Flex>\n    </Link>\n  );\n};\n\nexport default RewardNav;\n"]},"metadata":{},"sourceType":"module"}