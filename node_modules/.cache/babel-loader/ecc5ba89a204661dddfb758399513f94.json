{"ast":null,"code":"import _regeneratorRuntime from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Text, Flex, Card, Checkbox, Button, Link } from '@makerdao/ui-components-core';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport useMaker from 'hooks/useMaker';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport { formatter } from 'utils/ui';\nimport { etherscanLink } from 'utils/ethereum';\nimport { networkIdToName } from 'utils/network';\nimport ScreenFooter from '../ScreenFooter';\nimport ScreenHeader from '../ScreenHeader';\nimport { prettifyNumber } from 'utils/ui';\nimport { TxLifecycle } from 'utils/constants';\nimport styled from 'styled-components';\nimport { getColor } from '../../styles/theme';\nimport { ReactComponent as ExternalLinkIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!images/external-link.svg\";\nimport { BigNumber } from 'bignumber.js';\nvar StyledExternalLink = styled(ExternalLinkIcon).withConfig({\n  displayName: \"CDPCreateConfirmCDP__StyledExternalLink\",\n  componentId: \"ajf80o-0\"\n})([\"path{stroke:\", \";fill:\", \";}\"], function (props) {\n  return props.color;\n}, function (props) {\n  return props.color;\n});\n\nvar _StyledBox = styled(Box).withConfig({\n  displayName: \"CDPCreateConfirmCDP___StyledBox\",\n  componentId: \"ajf80o-1\"\n})([\"margin:0 auto;\"]);\n\nvar _StyledText = styled(Text).withConfig({\n  displayName: \"CDPCreateConfirmCDP___StyledText\",\n  componentId: \"ajf80o-2\"\n})([\"white-space:nowrap\"]);\n\nvar CDPCreateConfirmSummary = function CDPCreateConfirmSummary(_ref) {\n  var cdpParams = _ref.cdpParams,\n      selectedIlk = _ref.selectedIlk,\n      capturedDispatch = _ref.capturedDispatch,\n      enableSubmit = _ref.enableSubmit,\n      isFirstVault = _ref.isFirstVault,\n      ilkData = _ref.ilkData;\n\n  var _useAnalytics = useAnalytics('ConfirmVault', 'VaultCreate'),\n      trackBtnClick = _useAnalytics.trackBtnClick;\n\n  var _useLanguage = useLanguage(),\n      lang = _useLanguage.lang;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasReadTOS = _useState2[0],\n      setHasReadTOS = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasUnderstoodSF = _useState4[0],\n      setHasUnderstoodSF = _useState4[1];\n\n  var annualStabilityFee = ilkData.annualStabilityFee,\n      collateralValueForAmount = ilkData.collateralValueForAmount;\n  var rows = [[lang.verbs.depositing, \"\".concat(prettifyNumber(collateralValueForAmount(cdpParams.gemsToLock)), \" \", 'USD')], [lang.verbs.generating, \"\".concat(prettifyNumber(cdpParams.daiToDraw), \" USDFL\")], [lang.collateralization, \"\".concat(formatter(ilkData.calculateCollateralizationRatio(BigNumber(cdpParams.gemsToLock), USDFL(cdpParams.daiToDraw))), \"%\")], [lang.stability_fee, \"\".concat(formatter(annualStabilityFee, {\n    percentage: true,\n    rounding: BigNumber.ROUND_HALF_UP\n  }), \"%\")]];\n  return /*#__PURE__*/React.createElement(_StyledBox, {\n    maxWidth: \"1040px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeader, {\n    title: lang.cdp_create.confirm_title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    py: {\n      s: 'm',\n      m: 'l'\n    },\n    px: {\n      s: 'm',\n      m: 'xl'\n    },\n    my: \"l\",\n    style: {\n      backgroundColor: getColor('cardBg'),\n      borderColor: getColor('cardBg'),\n      borderRadius: '13px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, rows.map(function (_ref2, index) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        title = _ref3[0],\n        value = _ref3[1];\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: title + value,\n      mt: !!index && 's',\n      pt: !!index && 's',\n      gridTemplateColumns: \"5fr 1fr\",\n      justifyItems: \"start\",\n      borderTop: index !== 0 ? '1px solid #323B4F' : null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: {\n        color: getColor('greyText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(_StyledText, {\n      fontWeight: \"bold\",\n      textAlign: 'right',\n      style: {\n        color: getColor('whiteText')\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, value));\n  })), /*#__PURE__*/React.createElement(Grid, {\n    justifyContent: \"center\",\n    mt: \"l\",\n    alignItems: \"center\",\n    gridRowGap: \"s\",\n    gridTemplateColumns: \"auto auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: hasReadTOS,\n    onChange: function onChange() {\n      trackBtnClick('Terms', {\n        isFirstVault: isFirstVault\n      });\n      setHasReadTOS(function (state) {\n        return !state;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('greyText')\n    },\n    ml: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, lang.formatString(lang.terms_of_service_text, /*#__PURE__*/React.createElement(Link, {\n    href: \"/terms\",\n    target: \"_blank\",\n    color: \"#00DCDC\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, lang.terms_of_service)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: hasUnderstoodSF,\n    onChange: function onChange() {\n      return setHasUnderstoodSF(function (state) {\n        return !state;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('greyText')\n    },\n    ml: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, lang.cdp_create.has_understood_stability_fee)))), /*#__PURE__*/React.createElement(ScreenFooter, {\n    canProgress: hasReadTOS && hasUnderstoodSF && enableSubmit,\n    onNext: function onNext() {\n      trackBtnClick('Next', {\n        isFirstVault: isFirstVault,\n        fathom: [{\n          id: \"open\".concat(selectedIlk.gem, \"VaultDraw\"),\n          amount: cdpParams.daiToDraw\n        }, {\n          id: \"open\".concat(selectedIlk.gem, \"VaultLock\"),\n          amount: cdpParams.gemsToLock\n        }]\n      });\n      capturedDispatch({\n        type: 'increment-step'\n      });\n    },\n    onBack: function onBack() {\n      trackBtnClick('Back', {\n        isFirstVault: isFirstVault\n      });\n      capturedDispatch({\n        type: 'decrement-step'\n      });\n    },\n    continueText: lang.actions.create_cdp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n};\n\n__signature__(CDPCreateConfirmSummary, \"useAnalytics{{ trackBtnClick }}\\nuseLanguage{{ lang }}\\nuseState{[hasReadTOS, setHasReadTOS](false)}\\nuseState{[hasUnderstoodSF, setHasUnderstoodSF](false)}\", function () {\n  return [useAnalytics, useLanguage];\n});\n\nvar _StyledBox2 = styled(Box).withConfig({\n  displayName: \"CDPCreateConfirmCDP___StyledBox2\",\n  componentId: \"ajf80o-3\"\n})([\"margin:0 auto;\"]);\n\nvar CDPCreateConfirmed = function CDPCreateConfirmed(_ref4) {\n  var hash = _ref4.hash,\n      isFirstVault = _ref4.isFirstVault,\n      onClose = _ref4.onClose,\n      txState = _ref4.txState;\n\n  var _useAnalytics2 = useAnalytics('ConfirmVault', 'VaultCreate'),\n      trackBtnClick = _useAnalytics2.trackBtnClick;\n\n  var _useLanguage2 = useLanguage(),\n      lang = _useLanguage2.lang;\n\n  var _useMaker = useMaker(),\n      maker = _useMaker.maker;\n\n  var _useState5 = useState('8 minutes'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      waitTime = _useState6[0],\n      setWaitTime = _useState6[1];\n\n  var networkId = maker.service('web3').networkId();\n  var isTestchain = ![1, 42].includes(networkId);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var waitTime, minutes, seconds, waitTimeText;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return maker.service('gas').getWaitTime('fast');\n\n            case 2:\n              waitTime = _context.sent;\n              minutes = Math.round(waitTime);\n              seconds = Math.round(waitTime * 6) * 10;\n              waitTimeText = waitTime < 1 ? \"\".concat(seconds, \" \").concat(lang.cdp_create.seconds_wait_time) : \"\".concat(minutes, \" \").concat(minutes === 1 ? lang.cdp_create.minutes_wait_time_singular : lang.minutes_wait_time_plural);\n              setWaitTime(waitTimeText);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  });\n  return /*#__PURE__*/React.createElement(_StyledBox2, {\n    maxWidth: \"1040px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ScreenHeader, {\n    title: txState === TxLifecycle.CONFIRMED ? lang.cdp_create.post_confirmed_title : lang.cdp_create.confirmed_title,\n    text: txState === TxLifecycle.CONFIRMED ? lang.cdp_create.post_confirmed_text : lang.formatString(lang.cdp_create.confirmed_text, waitTime),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    my: \"l\",\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    my: \"s\",\n    textAlign: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, isTestchain ? /*#__PURE__*/React.createElement(Grid, {\n    gridRowGap: \"s\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, lang.cdp_create.tx_hash), /*#__PURE__*/React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, hash)) : /*#__PURE__*/React.createElement(Link, {\n    target: \"_blank\",\n    href: etherscanLink(hash, networkIdToName(networkId)),\n    onClick: function onClick() {\n      trackBtnClick('TxDetails', {\n        isFirstVault: isFirstVault\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    style: {\n      background: getColor('cardBg'),\n      borderColor: getColor('border')\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: getColor('whiteText')\n    },\n    mr: \"xs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, lang.cdp_create.view_tx_details), /*#__PURE__*/React.createElement(StyledExternalLink, {\n    color: \"aqua\",\n    ml: \"4px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(Flex, {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    onClick: function onClick() {\n      trackBtnClick('Exit', {\n        isFirstVault: isFirstVault\n      });\n      onClose();\n    },\n    width: \"145px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, lang.exit)))));\n};\n\n__signature__(CDPCreateConfirmed, \"useAnalytics{{ trackBtnClick }}\\nuseLanguage{{ lang }}\\nuseMaker{{ maker }}\\nuseState{[waitTime, setWaitTime]('8 minutes')}\\nuseEffect{}\", function () {\n  return [useAnalytics, useLanguage, useMaker];\n});\n\nvar CDPCreateConfirmCDP = function CDPCreateConfirmCDP(_ref6) {\n  var dispatch = _ref6.dispatch,\n      cdpParams = _ref6.cdpParams,\n      selectedIlk = _ref6.selectedIlk,\n      isFirstVault = _ref6.isFirstVault,\n      collateralTypesData = _ref6.collateralTypesData,\n      onClose = _ref6.onClose;\n\n  var _useMaker2 = useMaker(),\n      maker = _useMaker2.maker;\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      enableSubmit = _useState8[0],\n      setEnableSubmit = _useState8[1];\n\n  var gemsToLock = cdpParams.gemsToLock,\n      daiToDraw = cdpParams.daiToDraw,\n      txState = cdpParams.txState;\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      openCDPTxHash = _useState10[0],\n      setOpenCDPTxHash = _useState10[1];\n\n  function capturedDispatch(_x) {\n    return _capturedDispatch.apply(this, arguments);\n  }\n\n  function _capturedDispatch() {\n    _capturedDispatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n      var type, txObject, txMgr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = payload.type;\n\n              if (!(type !== 'increment-step')) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", dispatch(payload));\n\n            case 3:\n              txObject = maker.service('mcd:cdpManager').openLockAndDraw(selectedIlk.symbol, selectedIlk.currency(gemsToLock), daiToDraw);\n              setEnableSubmit(false);\n              txMgr = maker.service('transactionManager');\n              txMgr.listen(txObject, {\n                pending: function pending(tx) {\n                  return setOpenCDPTxHash(tx.hash);\n                },\n                confirmed: function confirmed() {\n                  dispatch({\n                    type: 'transaction-confirmed'\n                  });\n                },\n                error: function error() {\n                  return setEnableSubmit(true);\n                }\n              });\n              _context2.next = 9;\n              return txMgr.confirm(txObject, 1);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _capturedDispatch.apply(this, arguments);\n  }\n\n  if (openCDPTxHash) return /*#__PURE__*/React.createElement(CDPCreateConfirmed, {\n    hash: openCDPTxHash,\n    onClose: onClose,\n    txState: txState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(CDPCreateConfirmSummary, {\n    cdpParams: cdpParams,\n    selectedIlk: selectedIlk,\n    capturedDispatch: capturedDispatch,\n    enableSubmit: enableSubmit,\n    isFirstVault: isFirstVault,\n    collateralTypesData: collateralTypesData,\n    ilkData: collateralTypesData.find(function (x) {\n      return x.symbol === selectedIlk.symbol;\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }\n  });\n};\n\n__signature__(CDPCreateConfirmCDP, \"useMaker{{ maker }}\\nuseState{[enableSubmit, setEnableSubmit](true)}\\nuseState{[openCDPTxHash, setOpenCDPTxHash](null)}\", function () {\n  return [useMaker];\n});\n\nvar _default = CDPCreateConfirmCDP;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StyledExternalLink, \"StyledExternalLink\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js\");\n  reactHotLoader.register(CDPCreateConfirmSummary, \"CDPCreateConfirmSummary\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js\");\n  reactHotLoader.register(CDPCreateConfirmed, \"CDPCreateConfirmed\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js\");\n  reactHotLoader.register(CDPCreateConfirmCDP, \"CDPCreateConfirmCDP\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/good/Documents/Good/GitHub/FL/fork/bsc-fl-cdp-portal/src/components/CDPCreateScreens/CDPCreateConfirmCDP.js"],"names":["React","useState","useEffect","Box","Grid","Text","Flex","Card","Checkbox","Button","Link","USDFL","useMaker","useLanguage","useAnalytics","formatter","etherscanLink","networkIdToName","ScreenFooter","ScreenHeader","prettifyNumber","TxLifecycle","styled","getColor","BigNumber","StyledExternalLink","ExternalLinkIcon","props","color","CDPCreateConfirmSummary","cdpParams","selectedIlk","capturedDispatch","enableSubmit","isFirstVault","ilkData","trackBtnClick","lang","hasReadTOS","setHasReadTOS","hasUnderstoodSF","setHasUnderstoodSF","annualStabilityFee","collateralValueForAmount","rows","verbs","depositing","gemsToLock","generating","daiToDraw","collateralization","calculateCollateralizationRatio","stability_fee","percentage","rounding","ROUND_HALF_UP","cdp_create","confirm_title","s","m","backgroundColor","borderColor","borderRadius","map","index","title","value","state","formatString","terms_of_service_text","terms_of_service","has_understood_stability_fee","fathom","id","gem","amount","type","actions","create_cdp","CDPCreateConfirmed","hash","onClose","txState","maker","waitTime","setWaitTime","networkId","service","isTestchain","includes","getWaitTime","minutes","Math","round","seconds","waitTimeText","seconds_wait_time","minutes_wait_time_singular","minutes_wait_time_plural","CONFIRMED","post_confirmed_title","confirmed_title","post_confirmed_text","confirmed_text","tx_hash","background","view_tx_details","exit","CDPCreateConfirmCDP","dispatch","collateralTypesData","setEnableSubmit","openCDPTxHash","setOpenCDPTxHash","payload","txObject","openLockAndDraw","symbol","currency","txMgr","listen","pending","tx","confirmed","error","confirm","find","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Grid,\n  Text,\n  Flex,\n  Card,\n  Checkbox,\n  Button,\n  Link\n} from '@makerdao/ui-components-core';\nimport { USDFL } from '../../libs/dai-plugin-mcd/src/index.js';\nimport useMaker from 'hooks/useMaker';\nimport useLanguage from 'hooks/useLanguage';\nimport useAnalytics from 'hooks/useAnalytics';\nimport { formatter } from 'utils/ui';\nimport { etherscanLink } from 'utils/ethereum';\nimport { networkIdToName } from 'utils/network';\nimport ScreenFooter from '../ScreenFooter';\nimport ScreenHeader from '../ScreenHeader';\nimport { prettifyNumber } from 'utils/ui';\nimport { TxLifecycle } from 'utils/constants';\nimport styled from 'styled-components';\nimport { getColor } from '../../styles/theme';\nimport { ReactComponent as ExternalLinkIcon } from 'images/external-link.svg';\nimport { BigNumber } from 'bignumber.js';\n\nconst StyledExternalLink = styled(ExternalLinkIcon)`\n  path {\n    stroke: ${props => props.color};\n    fill: ${props => props.color};\n  }\n`;\n\nconst CDPCreateConfirmSummary = ({\n  cdpParams,\n  selectedIlk,\n  capturedDispatch,\n  enableSubmit,\n  isFirstVault,\n  ilkData\n}) => {\n  const { trackBtnClick } = useAnalytics('ConfirmVault', 'VaultCreate');\n  const { lang } = useLanguage();\n  const [hasReadTOS, setHasReadTOS] = useState(false);\n  const [hasUnderstoodSF, setHasUnderstoodSF] = useState(false);\n\n  const {\n    annualStabilityFee,\n    collateralValueForAmount\n  } = ilkData;\n  const rows = [\n    [\n      lang.verbs.depositing,\n      `${prettifyNumber(\n        collateralValueForAmount(cdpParams.gemsToLock)\n      )} ${'USD'}`\n    ],\n    [lang.verbs.generating, `${prettifyNumber(cdpParams.daiToDraw)} USDFL`],\n    [\n      lang.collateralization,\n      `${formatter(\n        ilkData.calculateCollateralizationRatio(\n          BigNumber(cdpParams.gemsToLock),\n          USDFL(cdpParams.daiToDraw)\n        )\n      )}%`\n    ],\n    [\n      lang.stability_fee,\n      `${formatter(annualStabilityFee, {\n        percentage: true,\n        rounding: BigNumber.ROUND_HALF_UP\n      })}%`\n    ]\n  ];\n  return (\n    <Box\n      maxWidth=\"1040px\"\n      css={`\n        margin: 0 auto;\n      `}\n    >\n      <ScreenHeader title={lang.cdp_create.confirm_title} />\n      <Card\n        py={{ s: 'm', m: 'l' }}\n        px={{ s: 'm', m: 'xl' }}\n        my=\"l\"\n        style={{\n          backgroundColor: getColor('cardBg'),\n          borderColor: getColor('cardBg'),\n          borderRadius: '13px'\n        }}\n      >\n        <Grid>\n          {rows.map(([title, value], index) => {\n            return (\n              <Grid\n                key={title + value}\n                mt={!!index && 's'}\n                pt={!!index && 's'}\n                gridTemplateColumns=\"5fr 1fr\"\n                justifyItems=\"start\"\n                borderTop={index !== 0 ? '1px solid #323B4F' : null}\n              >\n                <Text style={{ color: getColor('greyText') }}>{title}</Text>\n                <Text\n                  fontWeight=\"bold\"\n                  css=\"white-space: nowrap\"\n                  textAlign={'right'}\n                  style={{ color: getColor('whiteText') }}\n                >\n                  {value}\n                </Text>\n              </Grid>\n            );\n          })}\n        </Grid>\n        <Grid\n          justifyContent=\"center\"\n          mt=\"l\"\n          alignItems=\"center\"\n          gridRowGap=\"s\"\n          gridTemplateColumns=\"auto auto\"\n        >\n          <label>\n          <Checkbox\n            checked={hasReadTOS}\n            onChange={() => {\n              trackBtnClick('Terms', { isFirstVault });\n              setHasReadTOS(state => !state);\n            }}\n            />\n          <Text style={{ color: getColor('greyText') }} ml=\"s\">\n            {lang.formatString(\n              lang.terms_of_service_text,\n              <Link href=\"/terms\" target=\"_blank\" color=\"#00DCDC\">\n                {lang.terms_of_service}\n              </Link>\n            )}\n          </Text>\n          </label>\n          <br />\n          <label>\n          <Checkbox\n            checked={hasUnderstoodSF}\n            onChange={() => setHasUnderstoodSF(state => !state)}\n          />\n          <Text style={{ color: getColor('greyText') }} ml=\"s\">\n            {lang.cdp_create.has_understood_stability_fee}\n          </Text>\n          </label>\n        </Grid>\n      </Card>\n      <ScreenFooter\n        canProgress={hasReadTOS && hasUnderstoodSF && enableSubmit}\n        onNext={() => {\n          trackBtnClick('Next', {\n            isFirstVault,\n            fathom: [\n              {\n                id: `open${selectedIlk.gem}VaultDraw`,\n                amount: cdpParams.daiToDraw\n              },\n              {\n                id: `open${selectedIlk.gem}VaultLock`,\n                amount: cdpParams.gemsToLock\n              }\n            ]\n          });\n          capturedDispatch({ type: 'increment-step' });\n        }}\n        onBack={() => {\n          trackBtnClick('Back', { isFirstVault });\n          capturedDispatch({ type: 'decrement-step' });\n        }}\n        continueText={lang.actions.create_cdp}\n      />\n    </Box>\n  );\n};\n\nconst CDPCreateConfirmed = ({ hash, isFirstVault, onClose, txState }) => {\n  const { trackBtnClick } = useAnalytics('ConfirmVault', 'VaultCreate');\n  const { lang } = useLanguage();\n  const { maker } = useMaker();\n  const [waitTime, setWaitTime] = useState('8 minutes');\n\n  const networkId = maker.service('web3').networkId();\n  const isTestchain = ![1, 42].includes(networkId);\n  useEffect(() => {\n    (async () => {\n      // this is the default transaction speed\n      const waitTime = await maker.service('gas').getWaitTime('fast');\n      const minutes = Math.round(waitTime);\n      const seconds = Math.round(waitTime * 6) * 10;\n\n      const waitTimeText =\n        waitTime < 1\n          ? `${seconds} ${lang.cdp_create.seconds_wait_time}`\n          : `${minutes} ${\n              minutes === 1\n                ? lang.cdp_create.minutes_wait_time_singular\n                : lang.minutes_wait_time_plural\n            }`;\n\n      setWaitTime(waitTimeText);\n    })();\n  });\n\n  return (\n    <Box\n      maxWidth=\"1040px\"\n      css={`\n        margin: 0 auto;\n      `}\n    >\n      <ScreenHeader\n        title={\n          txState === TxLifecycle.CONFIRMED\n            ? lang.cdp_create.post_confirmed_title\n            : lang.cdp_create.confirmed_title\n        }\n        text={\n          txState === TxLifecycle.CONFIRMED\n            ? lang.cdp_create.post_confirmed_text\n            : lang.formatString(lang.cdp_create.confirmed_text, waitTime)\n        }\n      />\n      <Flex my=\"l\" justifyContent=\"center\">\n        <Grid gridRowGap=\"s\">\n          <Box my=\"s\" textAlign=\"center\">\n            {isTestchain ? (\n              <Grid gridRowGap=\"s\">\n                <Text>{lang.cdp_create.tx_hash}</Text>\n                <Text>{hash}</Text>\n              </Grid>\n            ) : (\n              <Link\n                target=\"_blank\"\n                href={etherscanLink(hash, networkIdToName(networkId))}\n                onClick={() => {\n                  trackBtnClick('TxDetails', { isFirstVault });\n                }}\n              >\n                <Button\n                  variant=\"secondary\"\n                  style={{\n                    background: getColor('cardBg'),\n                    borderColor: getColor('border')\n                  }}\n                >\n                  <Text style={{ color: getColor('whiteText') }} mr=\"xs\">\n                    {lang.cdp_create.view_tx_details}\n                  </Text>\n                  <StyledExternalLink color=\"aqua\" ml=\"4px\" />\n                </Button>\n              </Link>\n            )}\n          </Box>\n          <Flex textAlign=\"center\" justifyContent=\"center\">\n            <Button\n              className=\"btn\"\n              onClick={() => {\n                trackBtnClick('Exit', { isFirstVault });\n                onClose();\n              }}\n              width=\"145px\"\n            >\n              {lang.exit}\n            </Button>\n          </Flex>\n        </Grid>\n      </Flex>\n    </Box>\n  );\n};\n\nconst CDPCreateConfirmCDP = ({\n  dispatch,\n  cdpParams,\n  selectedIlk,\n  isFirstVault,\n  collateralTypesData,\n  onClose\n}) => {\n  const { maker } = useMaker();\n  const [enableSubmit, setEnableSubmit] = useState(true);\n\n  const { gemsToLock, daiToDraw, txState } = cdpParams;\n\n  const [openCDPTxHash, setOpenCDPTxHash] = useState(null);\n\n  async function capturedDispatch(payload) {\n    const { type } = payload;\n    if (type !== 'increment-step') return dispatch(payload);\n\n    const txObject = maker\n      .service('mcd:cdpManager')\n      .openLockAndDraw(\n        selectedIlk.symbol,\n        selectedIlk.currency(gemsToLock),\n        daiToDraw\n      );\n\n    setEnableSubmit(false);\n\n    const txMgr = maker.service('transactionManager');\n    txMgr.listen(txObject, {\n      pending: tx => setOpenCDPTxHash(tx.hash),\n      confirmed: () => {\n        dispatch({ type: 'transaction-confirmed' });\n      },\n      error: () => setEnableSubmit(true)\n    });\n    await txMgr.confirm(txObject, 1);\n  }\n\n  if (openCDPTxHash)\n    return (\n      <CDPCreateConfirmed\n        hash={openCDPTxHash}\n        onClose={onClose}\n        txState={txState}\n      />\n    );\n\n  return (\n    <CDPCreateConfirmSummary\n      cdpParams={cdpParams}\n      selectedIlk={selectedIlk}\n      capturedDispatch={capturedDispatch}\n      enableSubmit={enableSubmit}\n      isFirstVault={isFirstVault}\n      collateralTypesData={collateralTypesData}\n      ilkData={collateralTypesData.find(x => x.symbol === selectedIlk.symbol)}\n    />\n  );\n};\n\nexport default CDPCreateConfirmCDP;\n"]},"metadata":{},"sourceType":"module"}