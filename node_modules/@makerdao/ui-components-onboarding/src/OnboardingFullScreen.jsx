import React from 'react';
import styled from 'styled-components';
import PropTypes from 'prop-types';
import { themeGet } from 'styled-system';

import { Grid, Stepper } from '@makerdao/ui-components-core';
import OnboardingMenu from './OnboardingMenu';

const StyledFullScreen = styled.div`
  z-index: 20000;
  background-color: #f6f8f9;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s ease-in-out;

  ${props =>
    props.show &&
    `
    opacity: 1;
    transform: translateX(0px);
  `};
`;

const Contents = styled.div`
  z-index: 20001;
  overflow-x: hidden;
  padding: ${themeGet('space.l')};
  top: 0;
  left: 0;
  position: fixed;
  width: 100vw;
  height: 100vh;
  overflow-y: scroll;
  opacity: 0;
  transition: opacity 0.3s, transform 0.3s;
  transition-delay: 0s;
  transform: translateX(10px);
  pointer-events: none;

  ${props =>
    props.show &&
    `
    opacity: 1;
    transition-delay: 0.3s;
    transform: translateX(0px);
    pointer-events: unset;
  `};
`;

const FadeIn = styled.div`
  opacity: 0;
  top: 0;
  position: absolute;
  pointer-events: none;

  ${props =>
    props.active &&
    `
    transform: translateX(0);
    transition: all 0.7s;
    position: relative;
    opacity: 1;
    pointer-events: unset;
  `}

  ${props =>
    props.toLeft &&
    `
    opacity: 0;
    transform: translateX(-50px);
  `}

  ${props =>
    props.toRight &&
    `
    opacity: 0;
    transform: translateX(50px);
  `}
`;

class OnboardingFullScreen extends React.Component {
  render() {
    return (
      <div>
        <StyledFullScreen show={this.props.show} />
        <Contents show={this.props.show}>
          <Grid gridRowGap="xl">
            <OnboardingMenu onClose={this.props.onClose} />
            <Stepper
              style={{ margin: '0 auto' }}
              steps={this.props.steps}
              selected={this.props.step}
            />
            <div style={{ width: '100%', position: 'relative' }}>
              {React.Children.map(this.props.children, (child, index) => {
                return (
                  <FadeIn
                    toLeft={index < this.props.step}
                    toRight={index > this.props.step}
                    active={index === this.props.step}
                  >
                    {index === this.props.step && child}
                  </FadeIn>
                );
              })}
            </div>
          </Grid>
        </Contents>
      </div>
    );
  }
}

OnboardingFullScreen.propTypes = {
  /** Whether or not to show onboarding */
  show: PropTypes.bool,
  /** A list of names for each step of the onboarding process */
  steps: PropTypes.arrayOf(PropTypes.string),
  /** Which step the user is currently on. Zero-indexed. */
  step: PropTypes.number,
  /** A callback when the onboarding screen is closed. */
  onClose: PropTypes.func,
  children: PropTypes.node
};

OnboardingFullScreen.defaultProps = {
  show: false,
  steps: [],
  step: 0
};

export default OnboardingFullScreen;
