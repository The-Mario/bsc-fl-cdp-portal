'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

exports.default = function (maker, _) {
  var _this = this;

  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      rpcUrl_ = _ref.rpcUrl;

  var WALLETLINK = 'walletlink';
  var rpcUrl = rpcUrl_;

  maker.service('accounts', true).addAccountType(WALLETLINK, function () {
    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(settings) {
      var web3Service, CHAIN_ID, ETH_JSONRPC_URL, appName, walletLink, walletLinkProvider, _ref3, _ref4, address, setEngine, handleRequest, resetWallet;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              resetWallet = function resetWallet() {
                var self = this;
                self._relay.connection.setSessionMetadata("__destroyed", "1");
                self._relay.connection.destroy();
                self._relay.storage.clear();
              };

              handleRequest = function handleRequest(payload, next, end) {
                var self = this;
                if (payload.method === 'eth_unsubscribe') return next();
                // Including the nonce throws an error "couldn't find tx for nonce"
                if (Array.isArray(payload.params)) delete payload.params[0].nonce;
                self.sendAsync(payload, function (err, result) {
                  return result ? end(null, result.result) : end(err);
                });
              };

              setEngine = function setEngine(engine) {
                var self = this;
                if (self.engine) return;
                self.engine = engine;
                engine.on('block', function (block) {
                  self.currentBlock = block;
                });

                engine.on('start', function () {
                  self.start();
                });

                engine.on('stop', function () {
                  self.stop();
                });
              };

              web3Service = maker.service('web3');
              CHAIN_ID = web3Service.networkId();
              ETH_JSONRPC_URL = rpcUrl ? rpcUrl : web3Service.rpcUrl;
              appName = 'Oasis App';
              walletLink = new _walletlink2.default({ appName: appName });
              walletLinkProvider = walletLink.makeWeb3Provider(ETH_JSONRPC_URL, CHAIN_ID);
              _context.next = 11;
              return walletLinkProvider.enable();

            case 11:
              _ref3 = _context.sent;
              _ref4 = (0, _slicedToArray3.default)(_ref3, 1);
              address = _ref4[0];


              walletLinkProvider.setEngine = setEngine;
              walletLinkProvider.handleRequest = handleRequest;
              walletLinkProvider.resetWallet = resetWallet;

              return _context.abrupt('return', { subprovider: walletLinkProvider, address: address });

            case 18:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this);
    }));

    return function (_x2) {
      return _ref2.apply(this, arguments);
    };
  }());
};

var _walletlink = require('walletlink');

var _walletlink2 = _interopRequireDefault(_walletlink);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }