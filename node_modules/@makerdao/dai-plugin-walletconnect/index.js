'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

exports.default = function (maker) {
  var _this = this;

  var WALLETCONNECT = 'walletconnect';
  maker.service('accounts', true).addAccountType(WALLETCONNECT, function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(settings) {
      var subprovider, _ref2, accounts, _accounts, address;

      return _regenerator2.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              subprovider = new _web3Subprovider2.default({
                bridge: 'https://bridge.walletconnect.org'
              });
              _context.next = 3;
              return subprovider.getWalletConnector();

            case 3:
              _ref2 = _context.sent;
              accounts = _ref2.accounts;
              _accounts = (0, _slicedToArray3.default)(accounts, 1), address = _accounts[0];
              return _context.abrupt('return', { subprovider: subprovider, address: address });

            case 7:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, _this);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }());
};

var _web3Subprovider = require('@walletconnect/web3-subprovider');

var _web3Subprovider2 = _interopRequireDefault(_web3Subprovider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }