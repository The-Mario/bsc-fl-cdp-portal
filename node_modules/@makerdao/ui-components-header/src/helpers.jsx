import React from "react";
import PropTypes from "prop-types";

// Creates a new component which uses the InternalLinkComponent when `to` points
// to the same host, and ExternalLinkComponent when `to` points to a different host.
export const withInternalLink = (
  InternalLinkComponent,
  ExternalLinkComponent,
  host
) => {
  class InternalLink extends React.Component {
    constructor(props) {
      super(props);
    }

    render() {
      const url = require("url");
      const UniversalURL = (url && url.URL) || URL;

      const to = new UniversalURL(this.props.to);

      if (InternalLinkComponent && to.host === host && !this.props.external) {
        return (
          <InternalLinkComponent to={to.pathname}>
            {this.props.children}
          </InternalLinkComponent>
        );
      } else {
        return (
          <ExternalLinkComponent
            href={this.props.to}
            target="_blank"
            rel="noopener noreferrer"
          >
            {this.props.children}
          </ExternalLinkComponent>
        );
      }
    }
  }

  InternalLink.propTypes = {
    to: PropTypes.string,
    // Force the usage of the external link component
    external: PropTypes.bool,
    host: PropTypes.string,
    children: PropTypes.node,
  };

  return InternalLink;
};
